# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1727651254 -7200
# Parent  9682048f02039463629b3471bf4ae53ee8d500ab
Bug 1921618 - Fix transition from 'Threads: Unread' to 'Threads: Threads with unread'.

diff --git a/mail/modules/DBViewWrapper.sys.mjs b/mail/modules/DBViewWrapper.sys.mjs
--- a/mail/modules/DBViewWrapper.sys.mjs
+++ b/mail/modules/DBViewWrapper.sys.mjs
@@ -2016,8 +2016,9 @@ DBViewWrapper.prototype = {
     }
     this.beginViewUpdate();
     // all special views imply a threaded view
     this.showThreaded = true;
+    this._viewFlags &= ~Ci.nsMsgViewFlagsType.kUnreadOnly;
     this._specialView = aViewEnum;
     // We clear the search for paranoia/correctness reasons.  However, the UI
     //  layer is currently responsible for making sure these are already zeroed
     //  out.
diff --git a/mailnews/base/src/nsMsgThreadedDBView.cpp b/mailnews/base/src/nsMsgThreadedDBView.cpp
--- a/mailnews/base/src/nsMsgThreadedDBView.cpp
+++ b/mailnews/base/src/nsMsgThreadedDBView.cpp
@@ -120,12 +120,14 @@ nsresult nsMsgThreadedDBView::InitThread
 
     nsCOMPtr<nsIMsgDBHdr> msgHdr;
     if (unreadOnly) {
       rv = threadHdr->GetFirstUnreadChild(getter_AddRefs(msgHdr));
+      // This can fail if no unread child is found which leads to a blank view.
+      if (NS_FAILED(rv)) continue;
     } else {
       rv = threadHdr->GetRootHdr(getter_AddRefs(msgHdr));
+      NS_ENSURE_SUCCESS(rv, rv);
     }
-    NS_ENSURE_SUCCESS(rv, rv);
 
     // Hook to allow derived classes to filter out unwanted threads.
     if (!WantsThisThread(threadHdr)) {
       continue;
