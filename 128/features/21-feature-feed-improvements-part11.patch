# HG changeset patch
# User alta88@fixall.com
# Date 1736026695 -3600
# Parent  cd5ddb10e218d8b28e9e95608a044ac912297c36
Make If-Modified-Since an overridable property of FeedUtils object

diff --git a/mailnews/extensions/newsblog/Feed.sys.mjs b/mailnews/extensions/newsblog/Feed.sys.mjs
--- a/mailnews/extensions/newsblog/Feed.sys.mjs
+++ b/mailnews/extensions/newsblog/Feed.sys.mjs
@@ -170,10 +170,12 @@ Feed.prototype = {
     // not sent If-Modified-Since, as in the case of an unsubscribe and new
     // subscribe.  Send start of century date to force a download; some servers
     // will 304 on older dates (such as epoch 1970).
     // NOTE: some misconfigured servers return 304 if sent "If-Modified-Since".
-    const lastModified = this.lastModified || "Sat, 01 Jan 2000 00:00:00 GMT";
-    this.request.setRequestHeader("If-Modified-Since", lastModified);
+    const lastModified = this.lastModified || lazy.FeedUtils.IF_MODIFIED_SINCE;
+    if (lastModified) {
+      this.request.setRequestHeader("If-Modified-Since", lastModified);
+    }
 
     // Only order what you're going to eat...
     this.request.responseType = "document";
     this.request.overrideMimeType("text/xml");
diff --git a/mailnews/extensions/newsblog/FeedUtils.sys.mjs b/mailnews/extensions/newsblog/FeedUtils.sys.mjs
--- a/mailnews/extensions/newsblog/FeedUtils.sys.mjs
+++ b/mailnews/extensions/newsblog/FeedUtils.sys.mjs
@@ -43,8 +43,11 @@ export var FeedUtils = {
   ATOM_03_NS: "http://purl.org/atom/ns#",
   ATOM_IETF_NS: "http://www.w3.org/2005/Atom",
   ATOM_THREAD_NS: "http://purl.org/syndication/thread/1.0",
 
+  // Send request with If-Modified-Since header.
+  IF_MODIFIED_SINCE: "Sat, 01 Jan 2000 00:00:00 GMT",
+
   // Accept content mimetype preferences for feeds.
   REQUEST_ACCEPT:
     "application/atom+xml," +
     "application/rss+xml;q=0.9," +
diff --git a/mailnews/extensions/newsblog/feed-subscriptions.js b/mailnews/extensions/newsblog/feed-subscriptions.js
--- a/mailnews/extensions/newsblog/feed-subscriptions.js
+++ b/mailnews/extensions/newsblog/feed-subscriptions.js
@@ -1968,11 +1968,24 @@ var FeedSubscriptions = {
     downloaded(feed, aErrorCode) {
       // Offline check is done in the context of 3pane, return to the subscribe
       // window once the modal prompt is dispatched.
       window.focus();
+      const win = FeedSubscriptions;
+      const folderName = feed.folder
+        ? feed.folder.name
+        : feed.server.rootFolder.prettyName;
+      FeedUtils.log.log(
+        "downloaded: " +
+          (this.mSubscribeMode ? "[Subscribe] " : "[Update] ") +
+          "errorCode:folderName:feedUrl - " +
+          aErrorCode +
+          " : " +
+          folderName +
+          " : " +
+          feed.url
+      );
       // Feed is null if our attempt to parse the feed failed.
       let message = "";
-      const win = FeedSubscriptions;
       let feedUrl = feed.url;
       if (
         aErrorCode == FeedUtils.kNewsBlogSuccess ||
         aErrorCode == FeedUtils.kNewsBlogNoNewItems
@@ -2004,8 +2017,11 @@ var FeedSubscriptions = {
           // In the rare case of a subscribe (new add) to the root folder
           // (not existing folder) and an error of kNewsBlogNoNewItems, the new
           // folder creation process won't run (folder name derived when feed
           // is parsed). So create a folder here.
+          // This case happens for a misconfigured server not handling the
+          // If-Modified-Since header - but we will create a folder and store
+          // the feed.
           feed.createFolder();
         }
 
         // Update lastUpdateTime if successful.
