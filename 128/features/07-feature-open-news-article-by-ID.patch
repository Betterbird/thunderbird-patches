# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1743292523 -3600
# Parent  8698d979ab08b6e605c62aa1043f5dfa581119c8
Feature: Add "Open Message For ID" to context menu in news message.
https://bugzilla.mozilla.org/show_bug.cgi?id=37653 from the year 2000.

Works now regardless whether we click in the message pane, in a tab or stand-alone window.

diff --git a/mail/base/content/about3Pane.js b/mail/base/content/about3Pane.js
--- a/mail/base/content/about3Pane.js
+++ b/mail/base/content/about3Pane.js
@@ -6261,9 +6261,9 @@ function displayFolder(folder) {
  * updated (via a "select" event).
  *
  * @param {nsIMsgDBHdr} msgHdr
  */
-function selectMessage(msgHdr) {
+async function selectMessage(msgHdr) {
   if (
     gDBView?.numSelected == 1 &&
     gDBView.hdrForFirstSelectedMessage == msgHdr
   ) {
@@ -6285,8 +6285,15 @@ function selectMessage(msgHdr) {
       }
     } else {
       threadPane.forgetSelection(msgHdr.folder.URI);
       displayFolder(msgHdr.folder.URI);
+      if (!gDBView) {
+        await new Promise(resolve => {
+          window.addEventListener("allMessagesLoaded", () => resolve(), {
+            once: true,
+          });
+        });
+      }
       if (!foundIndexOfMsgHdrInView()) {
         // Quick Filter might be in sticky mode and still active.
         goDoCommand("cmd_resetQuickFilterBar");
         if (!foundIndexOfMsgHdrInView()) {
diff --git a/mail/base/content/about3Pane.xhtml b/mail/base/content/about3Pane.xhtml
--- a/mail/base/content/about3Pane.xhtml
+++ b/mail/base/content/about3Pane.xhtml
@@ -5,8 +5,10 @@
 
 #filter substitution
 
 <!DOCTYPE html [
+<!ENTITY % msgHdrViewOverlayDTD SYSTEM "chrome://messenger/locale/msgHdrViewOverlay.dtd">
+%msgHdrViewOverlayDTD;
 <!ENTITY % messengerDTD SYSTEM "chrome://messenger/locale/messenger.dtd" >
 %messengerDTD;
 <!ENTITY % calendarDTD SYSTEM "chrome://calendar/locale/calendar.dtd">
 %calendarDTD;
diff --git a/mail/base/content/mailContext.inc.xhtml b/mail/base/content/mailContext.inc.xhtml
--- a/mail/base/content/mailContext.inc.xhtml
+++ b/mail/base/content/mailContext.inc.xhtml
@@ -45,8 +45,12 @@
     <menuitem id="mailContext-reportPhishingURL"
               class="menuitem-iconic"
               label="&reportPhishingURL.label;"
               accesskey="&reportPhishingURL.accesskey;"/>
+    <menuitem id="mailContext-openMessageForMsgId"
+              class="menuitem-iconic"
+              label="&OpenMessageForMsgId.label;"
+              accesskey="&OpenMessageForMsgId.accesskey;"/>
     <menuitem id="mailContext-addemail"
               class="menuitem-iconic"
               label="&AddToAddressBook.label;"
               accesskey="&AddToAddressBook.accesskey;"/>
diff --git a/mail/base/content/mailContext.js b/mail/base/content/mailContext.js
--- a/mail/base/content/mailContext.js
+++ b/mail/base/content/mailContext.js
@@ -29,8 +29,40 @@ ChromeUtils.defineESModuleGetters(this, 
   calendarDeactivator:
     "resource:///modules/calendar/calCalendarDeactivator.sys.mjs",
 });
 
+// `MailUtils.openMessageForMessageId()` isn't suitable since it requires
+// a `window` parameter which we don't have. Sigh.
+function OpenMessageForMessageId2(messageId) {
+  const startServer = gFolder?.server;
+
+  window.setCursor("wait");
+  const msgHdr = MailUtils.getMsgHdrForMsgId(messageId, startServer);
+  window.setCursor("auto");
+
+  // If message was found open corresponding message.
+  if (msgHdr) {
+    const tabmail = top.window.document.getElementById("tabmail");
+    if (tabmail?.currentAbout3Pane) {
+      // Message in 3pane.
+      tabmail.currentAbout3Pane.selectMessage(msgHdr);
+    } else {
+      // Message in tab, standalone message window.
+      const uri = msgHdr.folder.getUriForMsg(msgHdr);
+      window.displayMessage(uri);
+    }
+    return;
+  }
+  const messageIdStr = "<" + messageId + ">";
+  const bundle = document.getElementById("bundle_messenger");
+  const errorTitle = bundle.getString("errorOpenMessageForMessageIdTitle");
+  const errorMessage = bundle.getFormattedString(
+    "errorOpenMessageForMessageIdMessage",
+    [messageIdStr]
+  );
+  Services.prompt.alert(window, errorTitle, errorMessage);
+}
+
 /**
  * Called by ContextMenuParent if this window is about:3pane, or is
  * about:message but not contained by about:3pane.
  *
@@ -213,8 +245,9 @@ var mailContextMenu = {
       "mailContext-openLinkInBrowser",
       "mailContext-copylink",
       "mailContext-savelink",
       "mailContext-reportPhishingURL",
+      "mailContext-openMessageForMsgId",
       "mailContext-addemail",
       "mailContext-composeemailto",
       "mailContext-copyemail",
       "mailContext-copyimage",
@@ -250,8 +283,16 @@ var mailContextMenu = {
     showItem(
       "mailContext-reportPhishingURL",
       context.onLink && !context.onMailtoLink
     );
+    const isNewsgroup = gFolder?.isSpecialFolder(
+      Ci.nsMsgFolderFlags.Newsgroup,
+      true
+    );
+    showItem(
+      "mailContext-openMessageForMsgId",
+      isNewsgroup && context.onMailtoLink
+    );
     showItem("mailContext-addemail", context.onMailtoLink);
     showItem("mailContext-composeemailto", context.onMailtoLink);
     showItem("mailContext-copyemail", context.onMailtoLink);
     showItem("mailContext-copyimage", context.onImage);
@@ -569,8 +610,12 @@ var mailContextMenu = {
         break;
       case "mailContext-reportPhishingURL":
         PhishingDetector.reportPhishingURL(this.context.linkURL);
         break;
+      case "mailContext-openMessageForMsgId":
+        // Cut off the mailto:
+        OpenMessageForMessageId2(this.context.linkURL.substring(7));
+        break;
       case "mailContext-addemail":
         top.addEmail(this.context.linkURL);
         break;
       case "mailContext-composeemailto":
