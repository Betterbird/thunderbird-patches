# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1717422777 -7200
# Parent  629a3b098b72f3792e7dba719c41d167554e3a7e
Feature: Implement pref mail.server.serverNN.disabled (bug 689067).

diff --git a/mail/base/content/mailWindowOverlay.js b/mail/base/content/mailWindowOverlay.js
--- a/mail/base/content/mailWindowOverlay.js
+++ b/mail/base/content/mailWindowOverlay.js
@@ -1037,8 +1037,11 @@ function MsgGetMessagesForAllServers(def
     // Parallel array of folders to download to...
     var localFoldersToDownloadTo = [];
     var pop3Server;
     for (const server of MailServices.accounts.allServers) {
+      if (server.disabled) {
+        continue;
+      }
       if (server.protocolInfo.canLoginAtStartUp && server.loginAtStartUp) {
         if (
           defaultServer &&
           defaultServer.equals(server) &&
@@ -1059,8 +1062,11 @@ function MsgGetMessagesForAllServers(def
         }
       }
     }
     for (let i = 0; i < pop3DownloadServersArray.length; ++i) {
+      if (pop3DownloadServersArray[i].disabled) {
+        continue;
+      }
       // Any ol' pop3Server will do - the serversArray specifies which servers
       // to download from.
       pop3Server.downloadMailFromServers(
         pop3DownloadServersArray[i],
@@ -1100,8 +1106,11 @@ function MsgGetMessagesForAccount(aFolde
   }
 
   if (MailOfflineMgr.isOnline() || MailOfflineMgr.getNewMail()) {
     var server = aFolder.server;
+    if (server.disabled) {
+      return;
+    }
     GetMessagesForInboxOnServer(server);
   }
 }
 
@@ -1529,8 +1538,11 @@ function GetFolderMessages(selectedFolde
     return;
   }
 
   for (var i = 0; i < folders.length; i++) {
+    if (folders[i].server.disabled) {
+      continue;
+    }
     var serverType = folders[i].server.type;
     if (folders[i].isServer && serverType == "nntp") {
       // If we're doing "get msgs" on a news server.
       // Update unread counts on this server.
@@ -1660,8 +1672,11 @@ function GetMessagesForAllAuthenticatedA
     var localFoldersToDownloadTo = [];
     var pop3Server;
 
     for (const server of MailServices.accounts.allServers) {
+      if (server.disabled) {
+        continue;
+      }
       if (
         server.protocolInfo.canGetMessages &&
         !server.passwordPromptRequired
       ) {
@@ -1678,8 +1693,11 @@ function GetMessagesForAllAuthenticatedA
         }
       }
     }
     for (let i = 0; i < pop3DownloadServersArray.length; ++i) {
+      if (pop3DownloadServersArray[i].disabled) {
+        continue;
+      }
       // any ol' pop3Server will do - the serversArray specifies which servers to download from
       pop3Server.downloadMailFromServers(
         pop3DownloadServersArray[i],
         msgWindow,
diff --git a/mailnews/base/public/nsIMsgIncomingServer.idl b/mailnews/base/public/nsIMsgIncomingServer.idl
--- a/mailnews/base/public/nsIMsgIncomingServer.idl
+++ b/mailnews/base/public/nsIMsgIncomingServer.idl
@@ -362,8 +362,9 @@ interface nsIMsgIncomingServer : nsISupp
   /* check to this if the server supports filters */
   readonly attribute boolean canHaveFilters;
 
   attribute boolean loginAtStartUp;
+  attribute boolean disabled;
 
   attribute boolean limitOfflineMessageSize;
   attribute long maxMessageSize;
 
diff --git a/mailnews/base/src/MsgIncomingServer.sys.mjs b/mailnews/base/src/MsgIncomingServer.sys.mjs
--- a/mailnews/base/src/MsgIncomingServer.sys.mjs
+++ b/mailnews/base/src/MsgIncomingServer.sys.mjs
@@ -230,8 +230,9 @@ export class MsgIncomingServer {
       ["Bool", "downloadOnBiff", "download_on_biff"],
       ["Bool", "valid"],
       ["Bool", "emptyTrashOnExit", "empty_trash_on_exit"],
       ["Bool", "loginAtStartUp", "login_at_startup"],
+      ["Bool", "disabled", "disabled"],
       [
         "Bool",
         "defaultCopiesAndFoldersPrefsToServer",
         "allows_specialfolders_usage",
diff --git a/mailnews/base/src/nsMsgIncomingServer.cpp b/mailnews/base/src/nsMsgIncomingServer.cpp
--- a/mailnews/base/src/nsMsgIncomingServer.cpp
+++ b/mailnews/base/src/nsMsgIncomingServer.cpp
@@ -1533,8 +1533,9 @@ NS_IMPL_SERVERPREF_BOOL(nsMsgIncomingSer
 NS_IMPL_SERVERPREF_BOOL(nsMsgIncomingServer, Valid, "valid")
 NS_IMPL_SERVERPREF_BOOL(nsMsgIncomingServer, EmptyTrashOnExit,
                         "empty_trash_on_exit")
 NS_IMPL_SERVERPREF_BOOL(nsMsgIncomingServer, LoginAtStartUp, "login_at_startup")
+NS_IMPL_SERVERPREF_BOOL(nsMsgIncomingServer, Disabled, "disabled")
 NS_IMPL_SERVERPREF_BOOL(nsMsgIncomingServer,
                         DefaultCopiesAndFoldersPrefsToServer,
                         "allows_specialfolders_usage")
 
diff --git a/mailnews/imap/src/nsImapProtocol.cpp b/mailnews/imap/src/nsImapProtocol.cpp
--- a/mailnews/imap/src/nsImapProtocol.cpp
+++ b/mailnews/imap/src/nsImapProtocol.cpp
@@ -818,8 +818,20 @@ nsresult nsImapProtocol::SetupWithUrl(ns
       rv = mailnewsUrl->GetServer(getter_AddRefs(server));
       NS_ENSURE_SUCCESS(rv, rv);
       m_server = do_GetWeakReference(server);
     }
+    bool isDisabled;
+    server->GetDisabled(&isDisabled);
+    if (isDisabled) {
+      nsCString serverKey;
+      server->GetKey(serverKey);
+      MsgLogToConsole4(
+          NS_ConvertUTF8toUTF16(nsPrintfCString(
+              "Ignoring operation on disabled account %s", serverKey.get())),
+          NS_LITERAL_STRING_FROM_CSTRING(__FILE__), __LINE__,
+          nsIScriptError::infoFlag);
+      return NS_ERROR_FAILURE;
+    }
     nsCOMPtr<nsIMsgFolder> folder;
     mailnewsUrl->GetFolder(getter_AddRefs(folder));
     mFolderLastModSeq = 0;
     mFolderTotalMsgCount = 0;
diff --git a/mailnews/mailnews.js b/mailnews/mailnews.js
--- a/mailnews/mailnews.js
+++ b/mailnews/mailnews.js
@@ -602,8 +602,9 @@ pref("mail.server.default.hidden", false
 pref("mail.server.default.using_subscription", true);
 pref("mail.server.default.dual_use_folders", true);
 pref("mail.server.default.canDelete", false);
 pref("mail.server.default.login_at_startup", false);
+pref("mail.server.default.disabled", false);
 pref("mail.server.default.allows_specialfolders_usage", true);
 pref("mail.server.default.canCreateFolders", true);
 pref("mail.server.default.canFileMessages", true);
 
