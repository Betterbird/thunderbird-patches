# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1720721933 -7200
# Parent  ee0ec3cf01e918ffedc92553391a13ff7ed80363
Feature: Implement pref mail.server.serverNN.disabled (bug 689067).

diff --git a/mail/base/content/mailWindowOverlay.js b/mail/base/content/mailWindowOverlay.js
--- a/mail/base/content/mailWindowOverlay.js
+++ b/mail/base/content/mailWindowOverlay.js
@@ -1034,8 +1034,11 @@ function MsgGetMessagesForAllServers(def
     // Parallel array of folders to download to...
     var localFoldersToDownloadTo = [];
     var pop3Server;
     for (const server of MailServices.accounts.allServers) {
+      if (server.disabled) {
+        continue;
+      }
       if (server.protocolInfo.canLoginAtStartUp && server.loginAtStartUp) {
         if (
           defaultServer &&
           defaultServer.equals(server) &&
@@ -1056,8 +1059,11 @@ function MsgGetMessagesForAllServers(def
         }
       }
     }
     for (let i = 0; i < pop3DownloadServersArray.length; ++i) {
+      if (pop3DownloadServersArray[i].disabled) {
+        continue;
+      }
       // Any ol' pop3Server will do - the serversArray specifies which servers
       // to download from.
       pop3Server.downloadMailFromServers(
         pop3DownloadServersArray[i],
@@ -1097,8 +1103,11 @@ function MsgGetMessagesForAccount(aFolde
   }
 
   if (MailOfflineMgr.isOnline() || MailOfflineMgr.getNewMail()) {
     var server = aFolder.server;
+    if (server.disabled) {
+      return;
+    }
     GetMessagesForInboxOnServer(server);
   }
 }
 
@@ -1526,8 +1535,11 @@ function GetFolderMessages(selectedFolde
     return;
   }
 
   for (var i = 0; i < folders.length; i++) {
+    if (folders[i].server.disabled) {
+      continue;
+    }
     var serverType = folders[i].server.type;
     if (folders[i].isServer && serverType == "nntp") {
       // If we're doing "get msgs" on a news server.
       // Update unread counts on this server.
@@ -1657,8 +1669,11 @@ function GetMessagesForAllAuthenticatedA
     var localFoldersToDownloadTo = [];
     var pop3Server;
 
     for (const server of MailServices.accounts.allServers) {
+      if (server.disabled) {
+        continue;
+      }
       if (
         server.protocolInfo.canGetMessages &&
         !server.passwordPromptRequired
       ) {
@@ -1675,8 +1690,11 @@ function GetMessagesForAllAuthenticatedA
         }
       }
     }
     for (let i = 0; i < pop3DownloadServersArray.length; ++i) {
+      if (pop3DownloadServersArray[i].disabled) {
+        continue;
+      }
       // any ol' pop3Server will do - the serversArray specifies which servers to download from
       pop3Server.downloadMailFromServers(
         pop3DownloadServersArray[i],
         msgWindow,
diff --git a/mail/locales/en-US/messenger/accountSettings.ftl b/mail/locales/en-US/messenger/accountSettings.ftl
--- a/mail/locales/en-US/messenger/accountSettings.ftl
+++ b/mail/locales/en-US/messenger/accountSettings.ftl
@@ -6,4 +6,7 @@ account-settings-color-label = Color:
   .accesskey = C
 
 account-settings-reset-color-button =
   .title = Reset color
+
+account-disabled =
+  .label = Account disabled
diff --git a/mailnews/base/prefs/content/am-server.js b/mailnews/base/prefs/content/am-server.js
--- a/mailnews/base/prefs/content/am-server.js
+++ b/mailnews/base/prefs/content/am-server.js
@@ -82,8 +82,9 @@ function onSave() {
 }
 
 function onInit(aPageId, aServerId) {
   initServerType();
+  fixDisabledUI(aServerId);
 
   onCheckItem("server.biffMinutes", ["server.doBiff"]);
   onCheckItem("nntp.maxArticles", ["nntp.notifyOn"]);
   setupMailOnServerUI();
@@ -197,8 +198,56 @@ function setDivText(divname, value) {
   }
   div.setAttribute("value", value);
 }
 
+function onAccountDisabled() {
+  fixDisabledUI(top.getCurrentAccount().incomingServer.key);
+}
+
+function fixDisabledUI(serverKey) {
+  const serverType = document
+    .getElementById("server.type")
+    .getAttribute("value");
+
+  if (document.getElementById("server.disabled").checked) {
+    document.getElementById("server.loginAtStartUp").checked = false;
+    document.getElementById("server.loginAtStartUp").disabled = true;
+    document.getElementById("server.doBiff").checked = false;
+    document.getElementById("server.doBiff").disabled = true;
+    document.getElementById("server.biffMinutes").disabled = true;
+    document.getElementById("biffEnd").disabled = true;
+    Services.prefs.setBoolPref(
+      `mail.server.${serverKey}.login_at_startup`,
+      false
+    );
+    Services.prefs.setBoolPref(
+      `mail.server.${serverKey}.check_new_mail`,
+      false
+    );
+    if (serverType == "imap") {
+      document.getElementById("imap.useIdle").checked = false;
+      document.getElementById("imap.useIdle").disabled = true;
+      Services.prefs.setBoolPref(`mail.server.${serverKey}.use_idle`, false);
+    } else if (serverType == "pop3") {
+      document.getElementById("server.downloadOnBiff").checked = false;
+      document.getElementById("server.downloadOnBiff").disabled = true;
+      Services.prefs.setBoolPref(
+        `mail.server.${serverKey}.download_on_biff`,
+        false
+      );
+    }
+  } else {
+    document.getElementById("server.loginAtStartUp").disabled = false;
+    document.getElementById("server.doBiff").disabled = false;
+    document.getElementById("biffEnd").disabled = false;
+    if (serverType == "imap") {
+      document.getElementById("imap.useIdle").disabled = false;
+    } else if (serverType == "pop3") {
+      document.getElementById("server.downloadOnBiff").disabled = false;
+    }
+  }
+}
+
 function onAdvanced() {
   // Store the server type and, if an IMAP or POP3 server,
   // the settings needed for the IMAP/POP3 tab into the array
   var serverSettings = {};
diff --git a/mailnews/base/prefs/content/am-server.xhtml b/mailnews/base/prefs/content/am-server.xhtml
--- a/mailnews/base/prefs/content/am-server.xhtml
+++ b/mailnews/base/prefs/content/am-server.xhtml
@@ -12,8 +12,9 @@
   xmlns:html="http://www.w3.org/1999/xhtml"
 >
   <head>
     <title>&serverSettings.label;</title>
+    <link rel="localization" href="messenger/accountSettings.ftl" />
     <link rel="stylesheet" href="chrome://messenger/skin/accountManage.css" />
     <link rel="stylesheet" href="chrome://messenger/skin/icons.css" />
     <link rel="stylesheet" href="chrome://messenger/skin/folderMenus.css" />
     <script
@@ -285,8 +286,19 @@
               accesskey="&downloadOnBiff.accesskey;"
               prefstring="mail.server.%serverkey%.download_on_biff"
             />
           </vbox>
+          <vbox align="start">
+            <checkbox
+              hidefor="movemail,nntp"
+              wsm_persist="true"
+              id="server.disabled"
+              data-l10n-id="account-disabled"
+              oncommand="onAccountDisabled();"
+              prefattribute="value"
+              prefstring="mail.server.%serverkey%.disabled"
+            />
+          </vbox>
           <!-- POP3 -->
           <vbox align="start" hidefor="movemail,imap,nntp">
             <checkbox
               wsm_persist="true"
diff --git a/mailnews/base/public/nsIMsgIncomingServer.idl b/mailnews/base/public/nsIMsgIncomingServer.idl
--- a/mailnews/base/public/nsIMsgIncomingServer.idl
+++ b/mailnews/base/public/nsIMsgIncomingServer.idl
@@ -362,8 +362,9 @@ interface nsIMsgIncomingServer : nsISupp
   /* check to this if the server supports filters */
   readonly attribute boolean canHaveFilters;
 
   attribute boolean loginAtStartUp;
+  attribute boolean disabled;
 
   attribute boolean limitOfflineMessageSize;
   attribute long maxMessageSize;
 
diff --git a/mailnews/base/src/MsgIncomingServer.sys.mjs b/mailnews/base/src/MsgIncomingServer.sys.mjs
--- a/mailnews/base/src/MsgIncomingServer.sys.mjs
+++ b/mailnews/base/src/MsgIncomingServer.sys.mjs
@@ -230,8 +230,9 @@ export class MsgIncomingServer {
       ["Bool", "downloadOnBiff", "download_on_biff"],
       ["Bool", "valid"],
       ["Bool", "emptyTrashOnExit", "empty_trash_on_exit"],
       ["Bool", "loginAtStartUp", "login_at_startup"],
+      ["Bool", "disabled", "disabled"],
       [
         "Bool",
         "defaultCopiesAndFoldersPrefsToServer",
         "allows_specialfolders_usage",
diff --git a/mailnews/base/src/nsMsgIncomingServer.cpp b/mailnews/base/src/nsMsgIncomingServer.cpp
--- a/mailnews/base/src/nsMsgIncomingServer.cpp
+++ b/mailnews/base/src/nsMsgIncomingServer.cpp
@@ -1533,8 +1533,9 @@ NS_IMPL_SERVERPREF_BOOL(nsMsgIncomingSer
 NS_IMPL_SERVERPREF_BOOL(nsMsgIncomingServer, Valid, "valid")
 NS_IMPL_SERVERPREF_BOOL(nsMsgIncomingServer, EmptyTrashOnExit,
                         "empty_trash_on_exit")
 NS_IMPL_SERVERPREF_BOOL(nsMsgIncomingServer, LoginAtStartUp, "login_at_startup")
+NS_IMPL_SERVERPREF_BOOL(nsMsgIncomingServer, Disabled, "disabled")
 NS_IMPL_SERVERPREF_BOOL(nsMsgIncomingServer,
                         DefaultCopiesAndFoldersPrefsToServer,
                         "allows_specialfolders_usage")
 
diff --git a/mailnews/imap/src/nsImapProtocol.cpp b/mailnews/imap/src/nsImapProtocol.cpp
--- a/mailnews/imap/src/nsImapProtocol.cpp
+++ b/mailnews/imap/src/nsImapProtocol.cpp
@@ -815,8 +815,20 @@ nsresult nsImapProtocol::SetupWithUrl(ns
       rv = mailnewsUrl->GetServer(getter_AddRefs(server));
       NS_ENSURE_SUCCESS(rv, rv);
       m_server = do_GetWeakReference(server);
     }
+    bool isDisabled;
+    server->GetDisabled(&isDisabled);
+    if (isDisabled) {
+      nsCString serverKey;
+      server->GetKey(serverKey);
+      MsgLogToConsole4(
+          NS_ConvertUTF8toUTF16(nsPrintfCString(
+              "Ignoring operation on disabled account %s", serverKey.get())),
+          NS_LITERAL_STRING_FROM_CSTRING(__FILE__), __LINE__,
+          nsIScriptError::infoFlag);
+      return NS_ERROR_FAILURE;
+    }
     nsCOMPtr<nsIMsgFolder> folder;
     mailnewsUrl->GetFolder(getter_AddRefs(folder));
     mFolderLastModSeq = 0;
     mFolderTotalMsgCount = 0;
diff --git a/mailnews/mailnews.js b/mailnews/mailnews.js
--- a/mailnews/mailnews.js
+++ b/mailnews/mailnews.js
@@ -600,8 +600,9 @@ pref("mail.server.default.hidden", false
 pref("mail.server.default.using_subscription", true);
 pref("mail.server.default.dual_use_folders", true);
 pref("mail.server.default.canDelete", false);
 pref("mail.server.default.login_at_startup", false);
+pref("mail.server.default.disabled", false);
 pref("mail.server.default.allows_specialfolders_usage", true);
 pref("mail.server.default.canCreateFolders", true);
 pref("mail.server.default.canFileMessages", true);
 
