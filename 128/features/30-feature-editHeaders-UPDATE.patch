# HG changeset patch
# User alta88@fixall.com
# Date 1716676729 -7200
# Parent  31730491573014cdebe416526a9b133dd4b99efb
30-feature-editHeaders-UPDATE.patch

1. Threadpane contextmenu for Edit Headers.

diff --git a/mail/base/content/mailContext.inc.xhtml b/mail/base/content/mailContext.inc.xhtml
--- a/mail/base/content/mailContext.inc.xhtml
+++ b/mail/base/content/mailContext.inc.xhtml
@@ -186,8 +186,12 @@
     <menuitem id="mailContext-editAsNew"
               class="menuitem-iconic"
               label="&contextEditMsgAsNew.label;"
               accesskey="&contextEditMsgAsNew.accesskey;"/>
+    <menuitem id="mailContext-editHeaders"
+              class="menuitem-iconic"
+              data-l10n-id="other-action-msg-edit-headers"
+              data-l10n-attrs="accesskey"/>
     <menuseparator/>
 
     <menuitem id="mailContext-moveToFolderAgain"
               class="menuitem-iconic"
diff --git a/mail/base/content/mailContext.js b/mail/base/content/mailContext.js
--- a/mail/base/content/mailContext.js
+++ b/mail/base/content/mailContext.js
@@ -427,8 +427,14 @@ var mailContextMenu = {
       numSelectedMessages &&
         commandController.isCommandEnabled("cmd_forwardAttachment")
     );
 
+    setSingleSelection("mailContext-editHeaders", message);
+    enableItem(
+      "mailContext-editHeaders",
+      inAbout3Pane && !gViewWrapper.isSynthetic
+    );
+
     if (isDummyMessage) {
       showItem("mailContext-tags", false);
     } else {
       showItem("mailContext-tags", true);
@@ -709,8 +715,16 @@ var mailContextMenu = {
           false
         );
         break;
 
+      // Edit message headers
+      case "mailContext-editHeaders":
+        console.log("editHeaders");
+        messageBrowser.contentWindow.MsgEditHeaders(
+          !this.selectionIsOverridden
+        );
+        break;
+
       // Message threading
       case "mailContext-unthreadMessage":
         window.threadPane.doUpdateThreading(
           "unthread",
diff --git a/mail/base/content/msgHdrView.js b/mail/base/content/msgHdrView.js
--- a/mail/base/content/msgHdrView.js
+++ b/mail/base/content/msgHdrView.js
@@ -2474,8 +2474,9 @@ function onShowOtherActionsPopup() {
 
   document.getElementById("editHeadersMenuItem").disabled =
     isDummyMessage ||
     window.parent.document.URL != "about:3pane" ||
+    gViewWrapper.isSynthetic ||
     !gFolder ||
     !gFolder.canFileMessages ||
     !gFolder.canDeleteMessages ||
     !window.parent.threadPane.isValidIndex(
@@ -3663,31 +3664,33 @@ function MsgMarkAsFlagged() {
 }
 
 /**
  * Edit selected headers.
+ *
+ * Not supported for a message in standalone window or tab, nor in a
+ * gloda results list (without gFolder no message added notice is received).
+ *
+ * TODO: it would be reasonable to support standalone messages.
+ *
+ * @param {boolean} messageIsDisplayed - If true, the message is selected and
+ *  loaded; otherwise there is no selection or the selection is different
+ *  from the loaded message (as when using the threadpane contextmenu).
  */
-function MsgEditHeaders() {
-  const winType = window.parent.document.URL;
-  if (winType != "about:3pane" || !gFolder) {
-    // Not supported for a message in standalone window or tab, nor in a
-    // gloda results list (without gFolder no message added notice is received).
-    return;
-  }
-
+function MsgEditHeaders(messageIsDisplayed) {
   const msgWindow = top.msgWindow;
-  const messageURI = gMessageURI;
   const selectedIndex = window.parent.threadTree.selectedIndex;
-  if (
-    !msgWindow.domWindow.gTabmail ||
-    !messageURI ||
-    !window.parent.threadPane.isValidIndex(selectedIndex)
-  ) {
+  const restoreIndex = messageIsDisplayed ? selectedIndex : -1;
+  const messageURI = messageIsDisplayed
+    ?  gMessageURI
+    :  window.parent.gViewWrapper.dbView.getURIForViewIndex(selectedIndex);
+
+  if (!messageURI) {
     return;
   }
 
   // In 3pane, we want the threadpane state restored post update/replace.
   const [successFn, errorFn] =
-    window.parent.threadPane.saveStateForMessageReplaceAtIndex(selectedIndex);
+    window.parent.threadPane.saveStateForMessageReplaceAtIndex(restoreIndex);
 
   const messageEditor = new window.parent.MessageEditor({
     messageURI,
     msgWindow,
