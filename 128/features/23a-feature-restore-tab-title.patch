# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1711899047 -7200
# Parent  d7645da1d76c34d8811a9509ef17fb5c4fb4a2c1
Feature: Tab title persist and restore, further tweaks.

diff --git a/mail/base/content/mailTabs.js b/mail/base/content/mailTabs.js
--- a/mail/base/content/mailTabs.js
+++ b/mail/base/content/mailTabs.js
@@ -21,14 +21,8 @@ ChromeUtils.defineESModuleGetters(this, 
  */
 var mailTabType = {
   name: "mailTab",
   perTabPanel: "vbox",
-  get loadingTabString() {
-    delete this.loadingTabString;
-    return (this.loadingTabString = document
-      .getElementById("bundle_messenger")
-      .getString("loadingTab"));
-  },
   _cloneTemplate(template, tab, onDOMContentLoaded, onLoad) {
     const tabmail = document.getElementById("tabmail");
 
     const clone = document.getElementById(template).content.cloneNode(true);
@@ -74,9 +68,9 @@ var mailTabType = {
       },
       { capture: true, once: true }
     );
 
-    tab.title = this.loadingTabString;
+    tab.title = "";
     tab.panel.id = `${tab.mode.name}${tab.mode._nextId}`;
     tab.panel.appendChild(clone);
     // `chromeBrowser` refers to the outermost browser in the tab, i.e. the
     // browser displaying about:3pane or about:message.
@@ -211,8 +205,10 @@ var mailTabType = {
             "mail.tabs.firstTab.startupURI",
             ""
           );
           if (startup) {
+            // The persisted title can be wrong, so don't use it.
+            persistedState.title = "";
             const f = MailUtils.getExistingFolder(startup);
             if (f) {
               persistedState.folderURI = f.URI;
             }
@@ -245,10 +241,12 @@ var mailTabType = {
             }
           }
 
           // Restore the last title immediately for firstTab.
-          tabmail.tabInfo[0].title = restoreState.state?.title ?? "";
-          tabmail.setTabTitle(tabmail.tabInfo[0]);
+          if (restoreState.state?.title) {
+            tabmail.tabInfo[0].title = restoreState.state.title;
+            tabmail.setTabTitle(tabmail.tabInfo[0]);
+          }
         }
 
         const { chromeBrowser, closed } = tabmail.tabInfo[0];
         if (
diff --git a/mail/base/content/tabmail.js b/mail/base/content/tabmail.js
--- a/mail/base/content/tabmail.js
+++ b/mail/base/content/tabmail.js
@@ -1310,13 +1310,17 @@ ChromeUtils.defineESModuleGetters(this, 
         // extensions are ill-behaved.
         console.error(ex);
       }
 
+      if (!tabState) {
+        return null;
+      }
       // Persist the last title for snappy startup restore.
-      if (!tabState) {
-        tabState = {};
+      // Don't persist for calendar, etc. to avoid persisting
+      // stale localizations.
+      if (!["calendar", "tasks", "chat"].includes(tab.mode.type)) {
+        tabState.title = tab.title;
       }
-      tabState.title = tab.title;
 
       const ext = {};
       for (const tabMonitor of this.tabMonitors) {
         try {
