# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1721728734 -7200
# Parent  4886d103fb42d60b2b6169c432a8a404079b6e63
Branding 9: Hack appname some more, and again.

diff --git a/toolkit/xre/nsAppRunner.cpp b/toolkit/xre/nsAppRunner.cpp
--- a/toolkit/xre/nsAppRunner.cpp
+++ b/toolkit/xre/nsAppRunner.cpp
@@ -4858,9 +4858,9 @@ int XREMain::XRE_mainStartup(bool* aExit
     gRemoteService = mRemoteService;
   }
 #endif
 #if defined(MOZ_WIDGET_GTK)
-  g_set_application_name(mAppData->name);
+  g_set_application_name("Betterbird");
 
 #endif /* defined(MOZ_WIDGET_GTK) */
 #ifdef MOZ_X11
   // Do this after initializing GDK, or GDK will install its own handler.
diff --git a/widget/gtk/nsWindow.cpp b/widget/gtk/nsWindow.cpp
--- a/widget/gtk/nsWindow.cpp
+++ b/widget/gtk/nsWindow.cpp
@@ -6357,9 +6357,9 @@ nsresult nsWindow::Create(nsIWidget* aPa
       GetToplevelGdkWindow(), mContainer, mGdkWindow, GetX11Window());
 
   // Set default application name when it's empty.
   if (mGtkWindowAppName.IsEmpty()) {
-    mGtkWindowAppName = gAppData->name;
+    mGtkWindowAppName = "Betterbird";
   }
 
   mCreated = true;
   return NS_OK;
@@ -6382,9 +6382,9 @@ void nsWindow::RefreshWindowClass(void) 
       return;
     }
 
     const char* res_name =
-        !mGtkWindowAppName.IsEmpty() ? mGtkWindowAppName.get() : gAppData->name;
+        !mGtkWindowAppName.IsEmpty() ? mGtkWindowAppName.get() : "Betterbird";
 
     const char* res_class = !mGtkWindowAppClass.IsEmpty()
                                 ? mGtkWindowAppClass.get()
                                 : gdk_get_program_class();
