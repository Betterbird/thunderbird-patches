# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1711492670 -3600
#      Sat Aug 21 11:36:53 2021 +0200
# Node ID e97d4217f08b6c0464e65013aa1f1b1575f298ab
# Parent  f0ed95956091172db5a62a6a1e403dd6b306b267
Branding 9: Hack appname some more.
* * *
Branding 9: Hack appname some more, and again.
* * *
Branding 9: Hack appname some more, and even more.

diff --git a/toolkit/xre/nsAppRunner.cpp b/toolkit/xre/nsAppRunner.cpp
--- a/toolkit/xre/nsAppRunner.cpp
+++ b/toolkit/xre/nsAppRunner.cpp
@@ -2095,9 +2095,9 @@ static void DumpHelp() {
 #ifdef XP_UNIX
   printf(
       "  --g-fatal-warnings Make all warnings fatal\n"
       "\n%s options\n",
-      (const char*)gAppData->name);
+      (const char*)"Betterbird");
 #endif
 
   printf(
       "  -h or --help       Print this message.\n"
@@ -2126,13 +2126,13 @@ static void DumpHelp() {
       "an\n"
       "                     argument or as an environment variable, logging "
       "will be\n"
       "                     written to stdout.\n",
-      (const char*)gAppData->name, (const char*)gAppData->name);
+      (const char*)"Betterbird", (const char*)"Betterbird");
 
 #if defined(XP_WIN)
   printf("  --console          Start %s with a debugging console.\n",
-         (const char*)gAppData->name);
+         (const char*)"Betterbird");
 #endif
 
 #if defined(XP_WIN) || defined(MOZ_WIDGET_GTK) || defined(XP_MACOSX)
   printf("  --headless         Run without a GUI.\n");
@@ -2155,9 +2155,9 @@ static void DumpHelp() {
 static inline void DumpVersion() {
   if (gAppData->vendor && *gAppData->vendor) {
     printf("%s ", (const char*)gAppData->vendor);
   }
-  printf("%s ", (const char*)gAppData->name);
+  printf("%s ", (const char*)"Betterbird");
 
   // Use the displayed version
   // For example, for beta, we would display 42.0b2 instead of 42.0
   printf("%s", MOZ_STRINGIFY(MOZ_APP_VERSION_DISPLAY));
@@ -2171,9 +2171,9 @@ static inline void DumpVersion() {
 static inline void DumpFullVersion() {
   if (gAppData->vendor && *gAppData->vendor) {
     printf("%s ", (const char*)gAppData->vendor);
   }
-  printf("%s ", (const char*)gAppData->name);
+  printf("%s ", (const char*)"Betterbird");
 
   // Use the displayed version
   // For example, for beta, we would display 42.0b2 instead of 42.0
   printf("%s ", MOZ_STRINGIFY(MOZ_APP_VERSION_DISPLAY));
@@ -2666,9 +2666,9 @@ static nsresult ProfileMissingDialog(nsI
     nsCOMPtr<nsIStringBundle> sb;
     sbs->CreateBundle(kProfileProperties, getter_AddRefs(sb));
     NS_ENSURE_TRUE_LOG(sbs, NS_ERROR_FAILURE);
 
-    NS_ConvertUTF8toUTF16 appName(gAppData->name);
+    NS_ConvertUTF8toUTF16 appName("Betterbird");
     AutoTArray<nsString, 2> params = {appName, appName};
 
     // profileMissing
     nsAutoString missingMessage;
@@ -2729,9 +2729,9 @@ static ReturnAbortOnError ProfileLockedD
     nsCOMPtr<nsIStringBundle> sb;
     sbs->CreateBundle(kProfileProperties, getter_AddRefs(sb));
     NS_ENSURE_TRUE_LOG(sbs, NS_ERROR_FAILURE);
 
-    NS_ConvertUTF8toUTF16 appName(gAppData->name);
+    NS_ConvertUTF8toUTF16 appName("Betterbird");
     AutoTArray<nsString, 3> params = {appName, appName, appName};
 
     nsAutoString killMessage;
 #ifndef XP_MACOSX
@@ -3107,9 +3107,9 @@ static void SubmitDowngradeTelemetry(con
       Substring(aLastVersion, pos + 1, 14);
 
   nsPrintfCString url("%s/submit/telemetry/%s/%s/%s/%s/%s/%s?v=%d",
                       server.get(), PromiseFlatCString(pingId).get(),
-                      pingType.get(), (const char*)gAppData->name,
+                      pingType.get(), (const char*)"Betterbird",
                       (const char*)gAppData->version, channel.get(),
                       (const char*)gAppData->buildID,
                       TELEMETRY_PING_FORMAT_VERSION);
 
@@ -3160,9 +3160,9 @@ static void SubmitDowngradeTelemetry(con
       w.StringProperty(
           "buildId",
           MakeStringSpan(static_cast<const char*>(gAppData->buildID)));
       w.StringProperty(
-          "name", MakeStringSpan(static_cast<const char*>(gAppData->name)));
+          "name", MakeStringSpan(static_cast<const char*>("Betterbird")));
       w.StringProperty(
           "version",
           MakeStringSpan(static_cast<const char*>(gAppData->version)));
       w.StringProperty("displayVersion",
@@ -4863,9 +4863,9 @@ int XREMain::XRE_mainStartup(bool* aExit
     gRemoteService = mRemoteService;
   }
 #endif
 #if defined(MOZ_WIDGET_GTK)
-  g_set_application_name(mAppData->name);
+  g_set_application_name("Betterbird");
 
 #endif /* defined(MOZ_WIDGET_GTK) */
 #ifdef MOZ_X11
   // Do this after initializing GDK, or GDK will install its own handler.
diff --git a/widget/gtk/nsWindow.cpp b/widget/gtk/nsWindow.cpp
--- a/widget/gtk/nsWindow.cpp
+++ b/widget/gtk/nsWindow.cpp
@@ -6377,9 +6377,9 @@ nsresult nsWindow::Create(nsIWidget* aPa
       GetToplevelGdkWindow(), mContainer, mGdkWindow, GetX11Window());
 
   // Set default application name when it's empty.
   if (mGtkWindowAppName.IsEmpty()) {
-    mGtkWindowAppName = gAppData->name;
+    mGtkWindowAppName = "Betterbird";
   }
 
   mCreated = true;
   return NS_OK;
@@ -6402,9 +6402,9 @@ void nsWindow::RefreshWindowClass(void) 
       return;
     }
 
     const char* res_name =
-        !mGtkWindowAppName.IsEmpty() ? mGtkWindowAppName.get() : gAppData->name;
+        !mGtkWindowAppName.IsEmpty() ? mGtkWindowAppName.get() : "Betterbird";
 
     const char* res_class = !mGtkWindowAppClass.IsEmpty()
                                 ? mGtkWindowAppClass.get()
                                 : gdk_get_program_class();
diff --git a/xpcom/glue/XREAppData.cpp b/xpcom/glue/XREAppData.cpp
--- a/xpcom/glue/XREAppData.cpp
+++ b/xpcom/glue/XREAppData.cpp
@@ -51,11 +51,9 @@ void XREAppData::GetDBusAppName(nsACStri
   const char* env = getenv("MOZ_DBUS_APP_NAME");
   if (env) {
     aName.Assign(env);
   } else {
-    aName.Assign(name);
-    ToLowerCase(aName);
-    SanitizeNameForDBus(aName);
+    aName.AssignLiteral("betterbird");
   }
 }
 
 }  // namespace mozilla
