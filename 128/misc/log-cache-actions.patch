# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1732440996 -3600
# Parent  c0a9e2a11b7a26519ec8892b6c17ef2ccf7542f2

diff --git a/mailnews/db/msgdb/src/nsMsgDatabase.cpp b/mailnews/db/msgdb/src/nsMsgDatabase.cpp
--- a/mailnews/db/msgdb/src/nsMsgDatabase.cpp
+++ b/mailnews/db/msgdb/src/nsMsgDatabase.cpp
@@ -35,8 +35,13 @@
 #include "mozilla/Components.h"
 #include "mozilla/mailnews/MimeHeaderParser.h"
 #include "mozilla/intl/LocaleService.h"
 
+/* for logging to Error Console */
+#include "nsIScriptError.h"
+#include "nsPrintfCString.h"
+#include "nsMsgUtils.h"
+
 using namespace mozilla::mailnews;
 using namespace mozilla;
 
 #define MSG_HASH_SIZE 512
@@ -1359,8 +1364,17 @@ NS_IMETHODIMP nsMsgDatabase::GetFolder(n
   return NS_OK;
 }
 
 NS_IMETHODIMP nsMsgDatabase::Commit(nsMsgDBCommit commitType) {
+  nsCOMPtr<nsIMsgFolder> folder;
+  GetFolder(getter_AddRefs(folder));
+  nsCString uri;
+  if (folder) folder->GetURI(uri);
+  nsCString msg = nsPrintfCString("Commit on folder %s", uri.get());
+  MsgLogToConsole4(NS_ConvertUTF8toUTF16(msg),
+                   NS_LITERAL_STRING_FROM_CSTRING(__FILE__), __LINE__,
+                   nsIScriptError::infoFlag);
+
   nsresult err = NS_OK;
   nsCOMPtr<nsIMdbThumb> commitThumb;
 
   RememberLastUseTime();
@@ -4877,10 +4891,29 @@ nsresult nsMsgDatabase::GetSearchResults
   NS_ENSURE_TRUE(m_mdbStore, NS_ERROR_NULL_POINTER);
 
   nsresult err = m_mdbStore->StringToToken(
       GetEnv(), PromiseFlatCString(searchFolderUri).get(), &kindToken);
+  nsCOMPtr<nsIMsgFolder> folder;
+  GetFolder(getter_AddRefs(folder));
+  nsCString uri;
+  if (folder) folder->GetURI(uri);
+  if (NS_FAILED(err)) {
+    nsCString msg = nsPrintfCString("Error 0x%x on StringToToken for %s",
+                                    (uint32_t)err, uri.get());
+    MsgLogToConsole4(NS_ConvertUTF8toUTF16(msg),
+                     NS_LITERAL_STRING_FROM_CSTRING(__FILE__), __LINE__,
+                     nsIScriptError::infoFlag);
+  }
   err = m_mdbStore->GetTableKind(GetEnv(), m_hdrRowScopeToken, kindToken,
                                  &numTables, &mustBeUnique, table);
+  if (NS_FAILED(err)) {
+    nsCString msg =
+        nsPrintfCString("Error 0x%x on GetTableKind for %s, num=%" PRIu32,
+                        (uint32_t)err, uri.get(), numTables);
+    MsgLogToConsole4(NS_ConvertUTF8toUTF16(msg),
+                     NS_LITERAL_STRING_FROM_CSTRING(__FILE__), __LINE__,
+                     nsIScriptError::infoFlag);
+  }
   if ((!*table || NS_FAILED(err)) && createIfMissing) {
     err = m_mdbStore->NewTable(GetEnv(), m_hdrRowScopeToken, kindToken, true,
                                nullptr, table);
   }
@@ -4901,9 +4934,10 @@ nsMsgDatabase::GetCachedHits(const nsACS
                 new nsMsgDBEnumerator(this, table, nullptr, nullptr));
   return NS_OK;
 }
 
-NS_IMETHODIMP nsMsgDatabase::InvalidateCache(const nsACString& aSearchFolderUri) {
+NS_IMETHODIMP nsMsgDatabase::InvalidateCache(
+    const nsACString& aSearchFolderUri) {
   // Mork doesn't offer a way to delete a table, and we can't update with
   // something invalid which we would detect later. So just make it empty.
   nsTArray<nsMsgKey> newHits;
   nsTArray<nsMsgKey> staleHits;
@@ -5017,8 +5051,37 @@ mdb_pos nsMsgDatabase::FindInsertIndexIn
 
 NS_IMETHODIMP
 nsMsgDatabase::UpdateHdrInCache(const nsACString& aSearchFolderUri,
                                 nsIMsgDBHdr* aHdr, bool aAdd) {
+  nsCString msg;
+  nsMsgKey key2;
+  aHdr->GetMessageKey(&key2);
+  // nsCString subject;
+  // aHdr->GetSubject(subject);
+  PRTime date;
+  aHdr->GetDate(&date);
+  char dateBuf[64];
+  PRExplodedTime exploded;
+  PR_ExplodeTime(date, PR_GMTParameters, &exploded);
+  PR_FormatTimeUSEnglish(dateBuf, sizeof(dateBuf), "%a %b %d %H:%M:%S %Y",
+                         &exploded);
+  nsCOMPtr<nsIMsgFolder> folder;
+  GetFolder(getter_AddRefs(folder));
+  nsCString uri;
+  if (folder) folder->GetURI(uri);
+  if (aAdd) {
+    msg = nsPrintfCString(
+        "Search %s, folder %s: Adding key=%" PRIu32 ", date=%s",
+        PromiseFlatCString(aSearchFolderUri).get(), uri.get(), key2, dateBuf);
+  } else {
+    msg = nsPrintfCString(
+        "Search %s, folder %s: Deleting key=%" PRIu32 ", date=%s",
+        PromiseFlatCString(aSearchFolderUri).get(), uri.get(), key2, dateBuf);
+  }
+  MsgLogToConsole4(NS_ConvertUTF8toUTF16(msg),
+                   NS_LITERAL_STRING_FROM_CSTRING(__FILE__), __LINE__,
+                   nsIScriptError::infoFlag);
+
   nsCOMPtr<nsIMdbTable> table;
   nsresult err =
       GetSearchResultsTable(aSearchFolderUri, true, getter_AddRefs(table));
   NS_ENSURE_SUCCESS(err, err);
@@ -5027,8 +5090,15 @@ nsMsgDatabase::UpdateHdrInCache(const ns
   nsMsgHdr* msgHdr =
       static_cast<nsMsgHdr*>(aHdr);  // closed system, so this is ok
   nsIMdbRow* hdrRow = msgHdr->GetMDBRow();
   if (NS_SUCCEEDED(err) && m_mdbStore && hdrRow) {
+    uint32_t rowCount;
+    table->GetCount(m_mdbEnv, &rowCount);
+    msg = nsPrintfCString("Table for folder %s has count %" PRIu32, uri.get(),
+                          rowCount);
+    MsgLogToConsole4(NS_ConvertUTF8toUTF16(msg),
+                     NS_LITERAL_STRING_FROM_CSTRING(__FILE__), __LINE__,
+                     nsIScriptError::infoFlag);
     if (!aAdd) {
       table->CutRow(m_mdbEnv, hdrRow);
     } else {
       mdbOid rowId;
@@ -5040,8 +5110,14 @@ nsMsgDatabase::UpdateHdrInCache(const ns
       table->AddRow(m_mdbEnv, hdrRow);
       mdb_pos newPos;
       table->MoveRow(m_mdbEnv, hdrRow, rowCount, insertPos, &newPos);
     }
+    table->GetCount(m_mdbEnv, &rowCount);
+    msg = nsPrintfCString("Table for folder %s now has updated count %" PRIu32,
+                          uri.get(), rowCount);
+    MsgLogToConsole4(NS_ConvertUTF8toUTF16(msg),
+                     NS_LITERAL_STRING_FROM_CSTRING(__FILE__), __LINE__,
+                     nsIScriptError::infoFlag);
   }
 
   return NS_OK;
 }
