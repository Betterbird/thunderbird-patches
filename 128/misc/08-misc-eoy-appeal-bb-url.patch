# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1730888564 -3600
# Parent  b840034c28877c39df082cef0e977e46b684dc7f
Misc: Use Betterbird's own donation appeal URL.
* * *
Misc: Use own prefs for BB donation appeal.
* * *
Backout hunk that opens appeal in application tab

diff --git a/mail/app/profile/all-thunderbird.js b/mail/app/profile/all-thunderbird.js
--- a/mail/app/profile/all-thunderbird.js
+++ b/mail/app/profile/all-thunderbird.js
@@ -1381,9 +1381,13 @@ pref("services.sync.engine.servers", tru
 
 // Donation appeal.
 pref("app.donation.eoy.version", 8);
 pref("app.donation.eoy.version.viewed", 0);
-pref("app.donation.eoy.url", "https://updates.thunderbird.net/thunderbird/128.0/dec24/");
+// Use our own prefs for the end-of-year appeal. Otherwise running TB on the
+// profile would show the TB appeal and then never again the BB appeal.
+pref("betterbird.donation.eoy.version", 2024);
+pref("betterbird.donation.eoy.version.viewed", 0);
+pref("betterbird.donation.eoy.url", "https://www.betterbird.eu/end-of-year/");
 
 // IMAP-JS disabled, Bug 1707547.
 pref("mailnews.imap.jsmodule", false);
 
diff --git a/mail/base/content/messenger.js b/mail/base/content/messenger.js
--- a/mail/base/content/messenger.js
+++ b/mail/base/content/messenger.js
@@ -345,56 +345,56 @@ var gMailInit = {
    *
    * @returns {boolean} - True if the donation appeal page should be opened.
    */
   shouldShowEOYDonationAppeal() {
-    const currentEOY = Services.prefs.getIntPref("app.donation.eoy.version", 1);
+    // Suppress TB appeal.
+    let currentEOY = Services.prefs.getIntPref("app.donation.eoy.version", 999);
+    Services.prefs.setIntPref("app.donation.eoy.version.viewed", currentEOY);
+
+    currentEOY = Services.prefs.getIntPref(
+      "betterbird.donation.eoy.version",
+      2023
+    );
     const viewedEOY = Services.prefs.getIntPref(
-      "app.donation.eoy.version.viewed",
+      "betterbird.donation.eoy.version.viewed",
       0
     );
 
-    // True if the user never saw the donation appeal, this is not a new
-    // profile (since users are already prompted to donate after downloading),
-    // and we're not running tests.
-    return (
-      viewedEOY < currentEOY &&
-      !specialTabs.shouldShowPolicyNotification() &&
-      !Cu.isInAutomation
+    // Short-circuit further checking.
+    if (viewedEOY >= currentEOY) {
+      return false;
+    }
+
+    const now = Math.round(Date.now() / 1000);
+    // If we never checked, pretend we checked now.
+    const lastCheckTime = Services.prefs.getIntPref(
+      "betterbird.update.lastCheckTime",
+      now
     );
+
+    // Display one day after installation the earliest. 24 * 60 * 60.
+    return now - lastCheckTime > 86400 && !Cu.isInAutomation;
   },
 
   /**
    * Open the end of year appeal in a new web browser page. We don't open this
    * in a tab due to the complexity of the donation site, and we don't want to
    * handle that inside Thunderbird.
    */
   showEOYDonationAppeal() {
-    const url = Services.prefs.getStringPref("app.donation.eoy.url");
-    let tabmail = document.getElementById("tabmail");
-
-    if (!tabmail) {
-      tabmail = Services.wm
-        .getMostRecentWindow("mail:3pane")
-        ?.document.getElementById("tabmail");
-    }
-
-    // Fall back to opening a browser window if we don't have a tabmail.
-    if (!tabmail) {
-      const protocolSvc = Cc[
-        "@mozilla.org/uriloader/external-protocol-service;1"
-      ].getService(Ci.nsIExternalProtocolService);
-      protocolSvc.loadURI(Services.io.newURI(url));
-    } else {
-      tabmail.openTab("contentTab", {
-        url,
-        background: false,
-        linkHandler: "single-page",
-      });
-      tabmail.ownerGlobal.focus();
-    }
-
-    const currentEOY = Services.prefs.getIntPref("app.donation.eoy.version", 1);
-    Services.prefs.setIntPref("app.donation.eoy.version.viewed", currentEOY);
+    const url = Services.prefs.getStringPref("betterbird.donation.eoy.url");
+    const protocolSvc = Cc[
+      "@mozilla.org/uriloader/external-protocol-service;1"
+    ].getService(Ci.nsIExternalProtocolService);
+    protocolSvc.loadURI(Services.io.newURI(url));
+    const currentEOY = Services.prefs.getIntPref(
+      "betterbird.donation.eoy.version",
+      2023
+    );
+    Services.prefs.setIntPref(
+      "betterbird.donation.eoy.version.viewed",
+      currentEOY
+    );
   },
 };
 
 /**
