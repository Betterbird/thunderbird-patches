# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1711561335 -3600
# Parent  63348acb4acd9657d9bd28d49321e9986a5eeea7
Misc: Change user agent string.

diff --git a/mailnews/compose/src/MimeMessage.sys.mjs b/mailnews/compose/src/MimeMessage.sys.mjs
--- a/mailnews/compose/src/MimeMessage.sys.mjs
+++ b/mailnews/compose/src/MimeMessage.sys.mjs
@@ -6,8 +6,9 @@ import { MailServices } from "resource:/
 
 import { MimeMultiPart, MimePart } from "resource:///modules/MimePart.sys.mjs";
 import { MsgUtils } from "resource:///modules/MimeMessageUtils.sys.mjs";
 import { jsmime } from "resource:///modules/jsmime.sys.mjs";
+import { AppConstants } from "resource://gre/modules/AppConstants.sys.mjs";
 
 /**
  * A class to create a top MimePart and write to a tmp file. It works like this:
  * 1. collect top level MIME headers (_gatherMimeHeaders)
@@ -179,20 +180,34 @@ export class MimeMessage {
     ]);
 
     if (Services.prefs.getBoolPref("mailnews.headers.sendUserAgent")) {
       if (Services.prefs.getBoolPref("mailnews.headers.useMinimalUserAgent")) {
+        let brandName = Services.strings
+          .createBundle("chrome://branding/locale/brand.properties")
+          .GetStringFromName("brandFullName");
+        let os;
+        switch (AppConstants.platform) {
+          case "win":
+            os = "Windows";
+            break;
+          case "macosx":
+            os = "macOS";
+            break;
+          case "linux":
+            os = "Linux";
+            break;
+          default:
+            os = AppConstants.platform;
+        }
+        headers.set("user-agent", `${brandName} (${os})`);
+      } else {
+        // Since we didn't change MOZ_APP_BASENAME, we need to hack the
+        // user agent here. Not so nice if they used an override.
         headers.set(
           "user-agent",
-          Services.strings
-            .createBundle("chrome://branding/locale/brand.properties")
-            .GetStringFromName("brandFullName")
-        );
-      } else {
-        headers.set(
-          "user-agent",
-          Cc["@mozilla.org/network/protocol;1?name=http"].getService(
-            Ci.nsIHttpProtocolHandler
-          ).userAgent
+          Cc["@mozilla.org/network/protocol;1?name=http"]
+            .getService(Ci.nsIHttpProtocolHandler)
+            .userAgent.replace("Thunderbird", "Betterbird")
         );
       }
     }
 
diff --git a/mailnews/compose/src/nsMsgCompUtils.cpp b/mailnews/compose/src/nsMsgCompUtils.cpp
--- a/mailnews/compose/src/nsMsgCompUtils.cpp
+++ b/mailnews/compose/src/nsMsgCompUtils.cpp
@@ -304,11 +304,16 @@ nsresult mime_generate_headers(nsIMsgCom
         nsAutoCString userAgentString;
         // Ignore error since we're testing the return value.
         mozilla::Unused << pHTTPHandler->GetUserAgent(userAgentString);
 
-        if (!userAgentString.IsEmpty())
+        if (!userAgentString.IsEmpty()) {
+          // Since we didn't change MOZ_APP_BASENAME, we need to hack the user agent
+          // here. Not so nice if they used an override.
+          int32_t ind = userAgentString.Find("Thunderbird"_ns);
+          if (ind != kNotFound) userAgentString.Replace(ind, 11, "Betterbird"_ns);
           finalHeaders->SetUnstructuredHeader(
               "User-Agent", NS_ConvertUTF8toUTF16(userAgentString));
+        }
       }
     }
   }
 
diff --git a/mailnews/extensions/mdn/nsMsgMdnGenerator.cpp b/mailnews/extensions/mdn/nsMsgMdnGenerator.cpp
--- a/mailnews/extensions/mdn/nsMsgMdnGenerator.cpp
+++ b/mailnews/extensions/mdn/nsMsgMdnGenerator.cpp
@@ -617,8 +617,13 @@ nsresult nsMsgMdnGenerator::CreateSecond
         // Ignore error since we're testing the return value.
         mozilla::Unused << pHTTPHandler->GetUserAgent(userAgentString);
 
         if (!userAgentString.IsEmpty()) {
+          // Since we didn't change MOZ_APP_BASENAME, we need to hack the user agent
+          // here. Not so nice if they used an override.
+          int32_t ind = userAgentString.Find("Thunderbird"_ns);
+          if (ind != kNotFound) userAgentString.Replace(ind, 11, "Betterbird"_ns);
+
           // Prepend the product name with the dns name according to RFC 3798.
           char hostName[256];
           PR_GetSystemInfo(PR_SI_HOSTNAME_UNTRUNCATED, hostName,
                            sizeof hostName);
