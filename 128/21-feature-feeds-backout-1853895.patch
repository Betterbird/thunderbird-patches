# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1711624424 -3600
# Parent  31effd1f190dc25ea735ea0ff755e010d83a0ff3
Backout part 1 and 2 of bug 1853895.

diff --git a/mailnews/extensions/newsblog/FeedUtils.sys.mjs b/mailnews/extensions/newsblog/FeedUtils.sys.mjs
--- a/mailnews/extensions/newsblog/FeedUtils.sys.mjs
+++ b/mailnews/extensions/newsblog/FeedUtils.sys.mjs
@@ -951,15 +951,8 @@ export var FeedUtils = {
           if (reader.result.endsWith("base64,")) {
             reject(new Error(`Invalid blob encountered.`));
             return;
           }
-          if (
-            blob.type == "image/svg+xml" &&
-            reader.result.length > Ci.nsIFaviconService.MAX_FAVICON_BUFFER_SIZE
-          ) {
-            reject(new Error(`Too large svg icon: ${reader.result.length} B`));
-            return;
-          }
           resolve(reader.result);
         };
         reader.readAsDataURL(blob);
       });
@@ -998,20 +991,16 @@ export var FeedUtils = {
         await response.text(),
         "text/html"
       );
       const iconLink = doc.querySelector(
-        `link[href][rel~='icon']:is([sizes~='any'],[sizes~='16x16' i],[sizes~='32x32' i],:not([sizes])`
+        `link[rel~='icon']:is([sizes~='any'],[sizes~='16x16' i],[sizes~='32x32' i],:not([sizes])`
       );
       if (!iconLink) {
         throw new Error(`No iconLink discovered for page=${page}`);
       }
-      if (/^https?:/.test(iconLink.href)) {
-        return iconLink.href;
-      }
-      if (iconLink.href.at(0) != "/") {
-        iconLink.href = "/" + iconLink.href;
-      }
-      return new URL(page).origin + iconLink.href;
+      return /^https?:/.test(iconLink.href)
+        ? iconLink.href
+        : new URL(page).origin + iconLink.href;
     };
 
     const uri = Services.io.newURI(url);
     const iconURL = await fetchFavicon(uri.prePath + "/favicon.ico")
