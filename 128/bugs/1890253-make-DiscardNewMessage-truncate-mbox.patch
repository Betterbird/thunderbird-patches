# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1732141165 -3600
# Parent  da9bb194e221bcb1093ce9eda427f8ce18e272f5
Bug 1890253 - Fix issues in nsMsgBrkMBoxStore::DiscardNewMessage() and nsParseNewMailState::MoveIncorporatedMessage().

1. Make DiscardNewMessage() truncate mbox to original size. Temporary fix.
   Inspired by https://phabricator.services.mozilla.com/D213510 by Chiaki Ishikawa, adjusted by Betterbird.

2. Fix long-standing issue in nsParseNewMailState::MoveIncorporatedMessage():
   Header is announced before message is present in the store.

diff --git a/mailnews/local/src/nsMsgBrkMBoxStore.cpp b/mailnews/local/src/nsMsgBrkMBoxStore.cpp
--- a/mailnews/local/src/nsMsgBrkMBoxStore.cpp
+++ b/mailnews/local/src/nsMsgBrkMBoxStore.cpp
@@ -41,8 +41,9 @@
 #include "mozilla/SlicedInputStream.h"
 #include "prprf.h"
 #include <cstdlib>  // for std::abs(int/long)
 #include <cmath>    // for std::abs(float/double)
+#include "nsIFile.h"
 
 /* for logging to Error Console */
 #include "nsIScriptError.h"
 
@@ -1284,10 +1285,24 @@ nsMsgBrkMBoxStore::DiscardNewMessage(nsI
     nsAutoCString folderURI;
     rv = folder->GetURI(folderURI);
     NS_ENSURE_SUCCESS(rv, rv);
     m_OutstandingStreams.remove(folderURI);
+  
+    // Truncate back to original size.
+    do {
+      nsAutoCString storeToken;
+      rv = aNewHdr->GetStoreToken(storeToken);
+      if (NS_FAILED(rv)) break;
+      uint64_t msgStart = storeToken.ToInteger64(&rv);
+      if (NS_FAILED(rv)) break;
+      nsCOMPtr<nsIFile> mboxFile;
+      rv = folder->GetFilePath(getter_AddRefs(mboxFile));
+      if (NS_FAILED(rv)) break;
+      rv = mboxFile->SetFileSize(msgStart);
+    } while (false);
   }
-  return NS_OK;
+
+  return rv;
 }
 
 NS_IMETHODIMP
 nsMsgBrkMBoxStore::FinishNewMessage(nsIOutputStream* aOutputStream,
diff --git a/mailnews/local/src/nsParseMailbox.cpp b/mailnews/local/src/nsParseMailbox.cpp
--- a/mailnews/local/src/nsParseMailbox.cpp
+++ b/mailnews/local/src/nsParseMailbox.cpp
@@ -2115,10 +2115,13 @@ nsresult nsParseNewMailState::MoveIncorp
   NS_WARNING_ASSERTION(destMailDB && NS_SUCCEEDED(rv),
                        "failed to open mail db parsing folder");
   nsCOMPtr<nsIMsgDBHdr> newHdr;
 
+  // We don't add the header to the DB just yet, since the data isn't in the
+  // store and the storeToken is stale. Any listener won't be able to retrieve
+  // the message. Try a virtual folder based on body search.
   if (destMailDB)
-    rv = destMailDB->CopyHdrFromExistingHdr(m_new_key, mailHdr, true,
+    rv = destMailDB->CopyHdrFromExistingHdr(m_new_key, mailHdr, false,
                                             getter_AddRefs(newHdr));
   if (NS_SUCCEEDED(rv) && !newHdr) rv = NS_ERROR_UNEXPECTED;
 
   if (NS_FAILED(rv)) {
@@ -2127,8 +2130,10 @@ nsresult nsParseNewMailState::MoveIncorp
     rv = AppendMsgFromStream(inputStream, newHdr, destIFolder);
     if (NS_FAILED(rv))
       destIFolder->ThrowAlertMsg("filterFolderWriteFailed", msgWindow);
   }
+  if (destMailDB && NS_SUCCEEDED(rv))
+    rv = destMailDB->AddNewHdrToDB(newHdr, true);
 
   if (NS_FAILED(rv)) {
     if (destMailDB) destMailDB->Close(true);
 
