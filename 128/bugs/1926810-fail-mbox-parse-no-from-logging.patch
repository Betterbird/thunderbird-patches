# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1731151564 -3600
# Parent  1aab4b25d36e6ae3e721824d90ca545e9b958384
Bug 1926810 - Continuation: Log mbox errors to console.

diff --git a/mailnews/base/src/MboxMsgInputStream.cpp b/mailnews/base/src/MboxMsgInputStream.cpp
--- a/mailnews/base/src/MboxMsgInputStream.cpp
+++ b/mailnews/base/src/MboxMsgInputStream.cpp
@@ -10,8 +10,13 @@
 #include "mozilla/Telemetry.h"
 #include "mozilla/Logging.h"
 #include <algorithm>
 
+/* for logging to Error Console */
+#include "nsIScriptError.h"
+#include "nsPrintfCString.h"
+#include "nsMsgUtils.h"
+
 extern mozilla::LazyLogModule gMboxLog;
 using mozilla::LogLevel;
 
 /**
@@ -714,8 +719,9 @@ MboxMsgInputStream::MboxMsgInputStream(n
       mParser(new MboxParser()) {
   // Ensure the first chunk is read and parsed.
   // This should include the "From " line, so EnvAddr()/EnvDate()
   // can be used right away.
+  mRawTellStream = do_QueryInterface(mRawStream);
   mStatus = PumpData();
 }
 
 MboxMsgInputStream::~MboxMsgInputStream() { Close(); }
@@ -854,8 +860,9 @@ NS_IMETHODIMP MboxMsgInputStream::Read(c
 // data (e.g. a "From " line falling between read boundaries).
 nsresult MboxMsgInputStream::PumpData() {
   // Feed data to the parser until there's data available to output (or until
   // message is completed).
+  int64_t pos = 0;
   while (mParser->Available() == 0 && !mParser->IsFinished()) {
     while (mUnused < MboxParser::MinChunk) {
       if (mUsed > 0) {
         // Shift the unused portion to the front of the buffer.
@@ -865,8 +872,9 @@ nsresult MboxMsgInputStream::PumpData() 
       }
 
       uint32_t got;
       size_t want = mBuf.Length() - (mUsed + mUnused);
+      if (mRawTellStream) mRawTellStream->Tell(&pos);
       nsresult rv = mRawStream->Read(mBuf.Elements() + mUnused, want, &got);
       if (NS_FAILED(rv)) {
         return rv;
       }
@@ -889,8 +897,14 @@ nsresult MboxMsgInputStream::PumpData() 
   if (mParser->IsMalformed()) {
     mozilla::Telemetry::ScalarAdd(
         mozilla::Telemetry::ScalarID::TB_MAILS_MBOX_READ_ERRORS,
         u"missing_from"_ns, 1);
+    nsCString msg;
+    msg = nsPrintfCString(
+        "Mbox parsing error at offset %" PRIi64 " (0x%" PRIx64 ")", pos, pos);
+    MsgLogToConsole4(NS_ConvertUTF8toUTF16(msg),
+                     NS_LITERAL_STRING_FROM_CSTRING(__FILE__), __LINE__,
+                     nsIScriptError::errorFlag);
     return NS_MSG_ERROR_MBOX_MALFORMED;
   }
 
   return NS_OK;
diff --git a/mailnews/base/src/MboxMsgInputStream.h b/mailnews/base/src/MboxMsgInputStream.h
--- a/mailnews/base/src/MboxMsgInputStream.h
+++ b/mailnews/base/src/MboxMsgInputStream.h
@@ -6,8 +6,9 @@
 #ifndef COMM_MAILNEWS_BASE_SRC_MBOXMSGINPUTSTREAM_H_
 #define COMM_MAILNEWS_BASE_SRC_MBOXMSGINPUTSTREAM_H_
 
 #include "nsIInputStream.h"
+#include "nsITellableStream.h"
 #include "nsCOMPtr.h"
 #include "mozilla/Buffer.h"
 
 class MboxParser;
@@ -96,8 +97,9 @@ class MboxMsgInputStream : public nsIInp
   nsresult PumpData();
 
   // The underlying mbox stream we're parsing.
   nsCOMPtr<nsIInputStream> mRawStream;
+  nsCOMPtr<nsITellableStream> mRawTellStream;
   nsresult mStatus;
 
   // Our input buffer.
   mozilla::Buffer<char> mBuf;
