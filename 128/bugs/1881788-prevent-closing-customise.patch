# HG changeset patch
# User welpy-cw <h.w.forms@arcor.de>
# Date 1742582224 -3600
# Node ID 184c1025b9fc7a4edcad57ecb2cd51338d84e8f7
# Parent  3c113454c39e7a96b0573a27b0450bdbe1557c75
Bug 1881788 - Prevent random closing of customize panel when toggling all headers. r=aleca

Differential Revision: https://phabricator.services.mozilla.com/D241742

diff --git a/mail/base/content/msgHdrView.js b/mail/base/content/msgHdrView.js
--- a/mail/base/content/msgHdrView.js
+++ b/mail/base/content/msgHdrView.js
@@ -622,10 +622,21 @@ var messageProgressListener = {
     } else {
       if (gViewAllHeaders) {
         // If we currently are in view all header mode, rebuild our header
         // view so we remove most of the header data.
-        hideHeaderView(gExpandedHeaderView);
-        RemoveNewHeaderViews(gExpandedHeaderView);
+        for (const name in gExpandedHeaderView) {
+          // Exclude the first row, which also contains the toolbar buttons, to
+          // prevent the customize panel from closing.
+          if (name == "from") {
+            continue;
+          }
+          const headerEntry = gExpandedHeaderView[name];
+          headerEntry.enclosingRow.hidden = true;
+          if (headerEntry.isNewHeader) {
+            // Remove non-predefined header node from the view.
+            headerEntry.enclosingRow.remove();
+          }
+        }
         gDummyHeaderIdIndex = 0;
         // eslint-disable-next-line no-global-assign
         gExpandedHeaderView = {};
         initializeHeaderViewTables();
@@ -1045,20 +1056,8 @@ function ClearHeaderView(aHeaderTable) {
   }
 }
 
 /**
- * Make sure that any valid header entry in the table is collapsed.
- *
- * @param aHeaderTable Table of header entries
- */
-function hideHeaderView(aHeaderTable) {
-  for (const name in aHeaderTable) {
-    const headerEntry = aHeaderTable[name];
-    headerEntry.enclosingRow.hidden = true;
-  }
-}
-
-/**
  * Make sure that any valid header entry in the table specified is visible.
  *
  * @param aHeaderTable Table of header entries
  */
@@ -1225,22 +1224,8 @@ class HeaderView {
   }
 }
 
 /**
- * Removes all non-predefined header nodes from the view.
- *
- * @param aHeaderTable  Table of header entries.
- */
-function RemoveNewHeaderViews(aHeaderTable) {
-  for (const name in aHeaderTable) {
-    const headerEntry = aHeaderTable[name];
-    if (headerEntry.isNewHeader) {
-      headerEntry.enclosingRow.remove();
-    }
-  }
-}
-
-/**
  * UpdateExpandedMessageHeaders: Iterate through all the current header data
  * we received from mime for this message for the expanded header entry table,
  * and see if we have a corresponding entry for that header (i.e.
  * whether the expanded header view cares about this header value)
@@ -2766,10 +2751,8 @@ const gHeaderCustomize = {
     const mode = event.target.checked
       ? Ci.nsMimeHeaderDisplayTypes.AllHeaders
       : Ci.nsMimeHeaderDisplayTypes.NormalHeaders;
     Services.prefs.setIntPref("mail.show_headers", mode);
-    AdjustHeaderView(mode);
-    ReloadMessage();
   },
 
   /**
    * Close the customize panel.
