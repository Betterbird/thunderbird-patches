# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1711551219 -3600
# Parent  db08b06e8a3c7a9e19b521dab6f560bbdd962188
Bug 1855643 - Fix undo/redo menu activation for stand-alone window.

diff --git a/mail/base/content/aboutMessage.js b/mail/base/content/aboutMessage.js
--- a/mail/base/content/aboutMessage.js
+++ b/mail/base/content/aboutMessage.js
@@ -174,8 +174,12 @@ function displayMessage(uri, viewWrapper
   gFolder = gMessage.folder;
 
   messageHistory.push(uri);
 
+  // This is needed for registering transactions on the window.
+  dbViewWrapperListener.messenger ??= parent.messenger;
+  dbViewWrapperListener.msgWindow ??= parent.msgWindow;
+
   if (!gViewWrapper) {
     if (gFolder) {
       if (viewWrapper) {
         gViewWrapper = viewWrapper.clone(dbViewWrapperListener);
diff --git a/mail/base/content/mailWindowOverlay.js b/mail/base/content/mailWindowOverlay.js
--- a/mail/base/content/mailWindowOverlay.js
+++ b/mail/base/content/mailWindowOverlay.js
@@ -1680,22 +1680,35 @@ function CommandUpdate_UndoRedo() {
   EnableMenuItem("menu_redo", SetupUndoRedoCommand("cmd_redo"));
 }
 
 function SetupUndoRedoCommand(command) {
-  const folder = document.getElementById("tabmail")?.currentTabInfo.folder;
+  let mainWindow;
+  let folder = null;
+  const tabmail = document.getElementById("tabmail");
+  if (tabmail) {
+    folder = tabmail.currentTabInfo.folder;
+    mainWindow = window;
+  } else {
+    mainWindow = Services.wm.getMostRecentWindow("mail:3pane");
+    // There may not be a "main" window if an .eml file was double-clicked.
+    if (!mainWindow) {
+      return false;
+    }
+    folder = document.getElementById("messageBrowser")?.contentWindow?.gFolder;
+  }
   if (!folder?.server.canUndoDeleteOnServer) {
     return false;
   }
 
   let canUndoOrRedo = false;
   let txnType;
   try {
     if (command == "cmd_undo") {
-      canUndoOrRedo = messenger.canUndo();
-      txnType = messenger.getUndoTransactionType();
+      canUndoOrRedo = mainWindow.messenger.canUndo();
+      txnType = mainWindow.messenger.getUndoTransactionType();
     } else {
-      canUndoOrRedo = messenger.canRedo();
-      txnType = messenger.getRedoTransactionType();
+      canUndoOrRedo = mainWindow.messenger.canRedo();
+      txnType = mainWindow.messenger.getRedoTransactionType();
     }
   } catch (ex) {
     // If this fails, assume we can't undo or redo.
     console.error(ex);
diff --git a/mail/base/content/messageWindow.js b/mail/base/content/messageWindow.js
--- a/mail/base/content/messageWindow.js
+++ b/mail/base/content/messageWindow.js
@@ -521,17 +521,21 @@ var MessageWindowController = {
     if (!this.isCommandEnabled(command)) {
       return;
     }
 
+    // There may not be a "main" window if an .eml file was double-clicked.
+    let mainWindow;
     switch (command) {
       case "cmd_getNewMessages":
         MsgGetMessage();
         break;
       case "cmd_undo":
-        messenger.undo(msgWindow);
+        mainWindow = Services.wm.getMostRecentWindow("mail:3pane");
+        mainWindow?.messenger.undo(msgWindow);
         break;
       case "cmd_redo":
-        messenger.redo(msgWindow);
+        mainWindow = Services.wm.getMostRecentWindow("mail:3pane");
+        mainWindow?.messenger.redo(msgWindow);
         break;
       case "cmd_getMsgsForAuthAccounts":
         MsgGetMessagesForAllAuthenticatedAccounts();
         break;
@@ -610,8 +614,15 @@ function SetupCommandUpdateHandlers() {
   top.controllers.insertControllerAt(
     0,
     messageBrowser.contentWindow.commandController
   );
+  // Use the main window's transaction manager.
+  // There may not be a "main" window if an .eml file was double-clicked.
+  const mainWindow = Services.wm.getMostRecentWindow("mail:3pane");
+  if (mainWindow) {
+    window.msgWindow.transactionManager =
+      mainWindow.msgWindow.transactionManager;
+  }
 }
 
 function UnloadCommandUpdateHandlers() {
   top.controllers.removeController(MessageWindowController);
