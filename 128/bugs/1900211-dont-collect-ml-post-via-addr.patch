# HG changeset patch
# User Magnus Melin <mkmelin+mozilla@iki.fi>
# Date 1737563707 -3600
# Node ID 14c7a3f60a5c88b1dd82b5bf99dffea7a6e76ac1
# Parent  e08c948302eac747db4b502db479a745a4c0b860
Bug 1900211 - Don't collect displayName for mailing list posts since 'Foo Bar via mailinglist' in address book is easily confusing. r=aleca

Differential Revision: https://phabricator.services.mozilla.com/D230991

diff --git a/mailnews/compose/src/MessageSend.sys.mjs b/mailnews/compose/src/MessageSend.sys.mjs
--- a/mailnews/compose/src/MessageSend.sys.mjs
+++ b/mailnews/compose/src/MessageSend.sys.mjs
@@ -79,8 +79,9 @@ export class MessageSend {
     this._smtpPassword = smtpPassword;
     this._sendListener = listener;
     this._parentWindow = parentWindow;
     this._originalMsgURI = originalMsgURI;
+    this._compType = compType;
     this._shouldRemoveMessageFile = true;
 
     this._sendReport = Cc[
       "@mozilla.org/messengercompose/sendreport;1"
@@ -1138,9 +1139,11 @@ export class MessageSend {
       this._compFields.to,
       this._compFields.cc,
       this._compFields.bcc,
     ].filter(Boolean);
-    this._collectAddressesToAddressBook(recipients);
+    this._collectAddressesToAddressBook(
+      MailServices.headerParser.parseEncodedHeaderW(recipients)
+    );
     const converter = Cc["@mozilla.org/messenger/mimeconverter;1"].getService(
       Ci.nsIMimeConverter
     );
     const encodedRecipients = converter.encodeMimePartIIStr_UTF8(
@@ -1199,21 +1202,35 @@ export class MessageSend {
 
   /**
    * Collect outgoing addresses to address book.
    *
-   * @param {string[]} recipients - Outgoing addresses including to/cc/bcc.
+   * @param {msgIAddressObject[]} addresses - Outgoing addresses including to/cc/bcc.
    */
-  _collectAddressesToAddressBook(recipients) {
+  _collectAddressesToAddressBook(addresses) {
     const createCard = Services.prefs.getBoolPref(
       "mail.collect_email_address_outgoing",
       false
     );
-
     const addressCollector = Cc[
       "@mozilla.org/addressbook/services/addressCollector;1"
     ].getService(Ci.nsIAbAddressCollector);
-    for (const recipient of recipients) {
-      addressCollector.collectAddress(recipient, createCard);
+
+    for (const addr of addresses) {
+      let displayName = addr.name;
+      // If we know this is a list, or it seems likely, don't collect the
+      // displayName which may contain the sender's name instead of the (only)
+      // name of the list.
+      if (
+        this._compType == Ci.nsIMsgCompType.ReplyToList ||
+        addr.name.includes(" via ")
+      ) {
+        displayName = "";
+      }
+      addressCollector.collectSingleAddress(
+        addr.email,
+        displayName,
+        createCard
+      );
     }
   }
 
   /**
