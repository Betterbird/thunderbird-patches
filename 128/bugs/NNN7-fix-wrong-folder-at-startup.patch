# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1711920155 -7200
# Parent  1c2dfb11bae7bbabfbdb95bcd5e7fa7d143183d1
NNN7 - Fix wrong folder selection at startup.

When restoring the first tab, sometimes the top-most folder gets selected before
later the right folder is selected. Waiting before the "select" event dispatch
seems to fix this issue.

diff --git a/mail/base/content/about3Pane.js b/mail/base/content/about3Pane.js
--- a/mail/base/content/about3Pane.js
+++ b/mail/base/content/about3Pane.js
@@ -94,8 +94,10 @@ var multiMessageBrowser;
  * is selected.
  */
 var accountCentralBrowser;
 
+var initialDisplayComplete = false;
+
 /**
  * This is called at midnight to have messages grouped by their relative date
  * (such as today, yesterday, etc.) correctly categorized.
  */
@@ -143,8 +145,37 @@ window.addEventListener("DOMContentLoade
   // Finally, add the folderTree listener and trigger it. Earlier events
   // (triggered by `folderPane.init` and possibly `restoreState`) are ignored
   // to avoid unnecessarily loading the thread tree or Account Central.
   folderTree.addEventListener("select", folderPane);
+
+  // In some cases `folderTree.selectedIndex` isn't set correctly when the event is
+  // handled, so the wrong folder is selected at first. We've seen
+  // index 0, so in a unified view, that will be the unified inbox as the top-most row.
+  // If that's grouped-by-sort, then long delays are expected.
+  // Fixing the long delays in https://bugzilla.mozilla.org/show_bug.cgi?id=1875577
+  // will paper over the issue some more.
+  // Sadly folderPane.init() initializes the index to 0, so if it's 0 here after
+  // `restoreState()`, either 0 was indeed the desired the selection or it's not
+  // correctly initialized yet. `restoreState()` looks like a sync function, but
+  // `initialDisplayComplete` isn't always `true` here. Note that `displayFolder()`
+  // sets the index to what is required.
+  let count = 0;
+  let timeWaited = 0;
+  while (count++ < 5 && !initialDisplayComplete) {
+    timeWaited += 100;
+    await new Promise(resolve => setTimeout(resolve, 100));
+  }
+  if (timeWaited) {
+    if (initialDisplayComplete) {
+      console.info(
+        `3pane init: Waited ${timeWaited} ms and index of selected folder is ${folderTree.selectedIndex}`
+      );
+    } else {
+      console.warn(
+        `3pane init: Waited ${timeWaited} ms and index of selected folder is ${folderTree.selectedIndex}`
+      );
+    }
+  }
   folderTree.dispatchEvent(new CustomEvent("select"));
 
   // Attach the progress listener for the webBrowser. For the messageBrowser this
   // happens in the "aboutMessageLoaded" event from aboutMessage.js.
@@ -6139,9 +6170,11 @@ function restoreState({
   paneLayout.messagePaneSplitter.isCollapsed = !messagePaneVisible;
 
   if (folderURI) {
     displayFolder(folderURI);
+    initialDisplayComplete = true;
   } else if (syntheticView) {
+    initialDisplayComplete = true;
     // In a synthetic view check if we have a previously edited column layout to
     // restore.
     if ("getPersistedSetting" in syntheticView) {
       const columnsState = syntheticView.getPersistedSetting("columns");
