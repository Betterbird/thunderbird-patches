# HG changeset patch
# User welpy-cw <h.w.forms@arcor.de>
# Date 1749406637 -7200
# Node ID 07158ac8c1bd03631ea8927fcce07a2cfb9833a2
# Parent  3cc7fbc3cf4ad47e5e41399fa0d2dcee63c89264
Bug 1968444 - Fix subscribe tree invalidation. r=mkmelin

Differential Revision: https://phabricator.services.mozilla.com/D251163

diff --git a/mailnews/base/content/subscribe.js b/mailnews/base/content/subscribe.js
--- a/mailnews/base/content/subscribe.js
+++ b/mailnews/base/content/subscribe.js
@@ -159,9 +159,8 @@ function SubscribeOnLoad() {
 
   gSubscribeTree = document.getElementById("subscribeTree");
   gSubscribeBody = document.getElementById("subscribeTreeBody");
   gSearchTree = document.getElementById("searchTree");
-  gSearchTree = document.getElementById("searchTree");
   gNameField = document.getElementById("namefield");
   gNameFieldLabel = document.getElementById("namefieldlabel");
 
   // eslint-disable-next-line no-global-assign
@@ -292,9 +291,9 @@ function SearchOnClick(event) {
     ReverseStateFromRow(treeCellInfo.row);
   }
 
   // Invalidate the row.
-  InvalidateSearchTreeRow(treeCellInfo.row);
+  gSearchTree.invalidateRow(treeCellInfo.row);
 }
 
 function ReverseStateFromRow(aRow) {
   // To determine if the row is subscribed or not,
@@ -381,8 +380,11 @@ function SubscribeOnClick(event) {
     if (treeCellInfo.col.id == "subscribedColumn") {
       ReverseStateFromNode(treeCellInfo.row);
     }
   }
+
+  // Invalidate the row.
+  gSubscribeTree.invalidateRow(treeCellInfo.row);
 }
 
 function Refresh() {
   // Clear out the textfield's entry.
@@ -413,16 +415,8 @@ function ShowNewGroupsList() {
   // Force it to talk to the server and get new groups.
   SetUpTree(true, true);
 }
 
-function InvalidateSearchTreeRow(row) {
-  gSearchTree.invalidateRow(row);
-}
-
-function InvalidateSearchTree() {
-  gSearchTree.invalidate();
-}
-
 /**
  * Toggle the tree panel in the dialog between search view and subscribe view.
  *
  * @param {boolean} toggle - If true, show the search view else show the
@@ -473,12 +467,12 @@ function onSearchTreeKeyPress(event) {
     treeSelection.getRangeAt(i, start, end);
     for (let k = start.value; k <= end.value; k++) {
       ReverseStateFromRow(k);
     }
+  }
 
-    // Force a repaint.
-    InvalidateSearchTree();
-  }
+  // Force a repaint.
+  gSearchTree.invalidate();
 }
 
 function onSubscribeTreeKeyPress(event) {
   // For now, only do something on space key.
@@ -494,5 +488,8 @@ function onSubscribeTreeKeyPress(event) 
     for (let k = start.value; k <= end.value; k++) {
       ReverseStateFromNode(k);
     }
   }
+
+  // Force a repaint.
+  gSubscribeTree.invalidate();
 }
