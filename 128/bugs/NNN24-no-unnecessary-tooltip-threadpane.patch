# HG changeset patch
# User alta88@fixall.com
# Date 1751193412 -7200
# Parent  2645a6706aba9c8ad8d3914a2d9da410034b0121
NNN24 - No unnecessary tooltips in threadpane columns, restore nsITree behavior.
- For both table view and card view.

Authored by Alta88 and contributed to the Betterbird Project.
See https://github.com/Betterbird/thunderbird-patches/blob/main/LICENSE for license details.
All uses require attribution to the Author.

Thunderbird bug https://bugzilla.mozilla.org/show_bug.cgi?id=1914128

diff --git a/mail/base/content/about3Pane.js b/mail/base/content/about3Pane.js
--- a/mail/base/content/about3Pane.js
+++ b/mail/base/content/about3Pane.js
@@ -4951,8 +4951,9 @@ var threadPane = {
     threadTree.addEventListener("expanded", this);
     threadTree.addEventListener("collapsed", this);
     threadTree.addEventListener("scroll", this);
     threadTree.addEventListener("showplaceholder", this);
+    threadTree.addEventListener("mouseover", this);
   },
 
   uninit() {
     Services.prefs.removeObserver("mailnews.tags.", this);
@@ -5002,8 +5003,11 @@ var threadPane = {
         break;
       case "drop":
         this._onDrop(event);
         break;
+      case "mouseover":
+        this._onMouseOver(event);
+        break;
       case "expanded":
       case "collapsed":
         if (event.detail == threadTree.selectedIndex) {
           // The selected index hasn't changed, but a collapsed row represents
@@ -5839,8 +5843,63 @@ var threadPane = {
 
     messageEditor.updateThreading(action, newParentMessageURI);
   },
 
+  _onMouseOver(event) {
+    // Prevent tooltips if unnecessary, ie text is not overflowing/in ellipsis.
+    // All textContent with title attribute must be wrapped in a <span> element.
+    const titleNode = event.target?.title
+      ? event.target
+      : event.target?.closest("td");
+    if (!titleNode?.title) {
+      return;
+    }
+
+    const textNode = titleNode.querySelector("span") ?? titleNode;
+    if (titleNode.title != textNode.textContent) {
+      return;
+    }
+
+    // Subject in table view is special.
+    const subjectNode = titleNode.querySelector(".subject-line");
+    const textElementNode = subjectNode ?? textNode;
+
+    const containerNode =
+      titleNode.localName == "span" && titleNode.clientWidth
+        ? // This is a <span> that overflows itself; it has a non 0 clientWidth.
+          titleNode
+        : // This is a <span> or other element whose parent is overflowing.
+          textElementNode.parentElement;
+    const containerContentWidth =
+      containerNode.localName == "span"
+        ? containerNode.clientWidth
+        : this.getElementContentWidth(containerNode);
+    if (textElementNode.scrollWidth > containerContentWidth) {
+      return;
+    }
+
+    titleNode.title = "";
+    titleNode.addEventListener(
+      "mouseout",
+      () => (titleNode.title = textNode.textContent),
+      { once: true }
+    );
+  },
+
+  getElementContentWidth(element) {
+    // Even with box-sizing: content-box, the element's width includes padding.
+    // Border is not included regardless of box-sizing. Values for paddingLeft
+    // and paddingInlineStart, eg, are the same regardless of css syntax used.
+    // Use precision to avoid off by 1 inaccuracies.
+    const widthWithPaddings = element.getBoundingClientRect().width;
+    const elementComputedStyle = window.getComputedStyle(element);
+    return (
+      widthWithPaddings -
+      parseFloat(elementComputedStyle.paddingLeft) -
+      parseFloat(elementComputedStyle.paddingRight)
+    );
+  },
+
   _jsTree: {
     QueryInterface: ChromeUtils.generateQI(["nsIMsgJSTree"]),
     _inBatch: false,
     beginUpdateBatch() {
diff --git a/mail/base/content/widgets/treeview/thread-row.mjs b/mail/base/content/widgets/treeview/thread-row.mjs
--- a/mail/base/content/widgets/treeview/thread-row.mjs
+++ b/mail/base/content/widgets/treeview/thread-row.mjs
@@ -262,9 +262,14 @@ class ThreadRow extends TreeViewTableRow
       }
 
       if (column.id == "locationCol") {
         const prettyPath = cellTexts[textIndex].split("/");
-        cell.textContent = Array.isArray(prettyPath)
+        let span = cell.querySelector("span");
+        if (!span) {
+          span = document.createElement("span");
+          cell.appendChild(span);
+        }
+        span.textContent = Array.isArray(prettyPath)
           ? prettyPath.at(-1)
           : cellTexts[textIndex];
         document.l10n.setAttributes(cell, column.l10n.cell, {
           title: cellTexts[textIndex],
@@ -290,9 +295,14 @@ class ThreadRow extends TreeViewTableRow
           cell.removeAttribute("alignmentcolumn");
           cell.style.removeProperty("--thread-level");
           continue;
         }
-        cell.textContent = cellTexts[textIndex];
+        let span = cell.querySelector("span");
+        if (!span) {
+          span = document.createElement("span");
+          cell.appendChild(span);
+        }
+        span.textContent = cellTexts[textIndex];
         if (!column.custom) {
           document.l10n.setAttributes(cell, column.l10n.cell, {
             title: cellTexts[textIndex],
           });
diff --git a/mail/themes/shared/mail/threadPane.css b/mail/themes/shared/mail/threadPane.css
--- a/mail/themes/shared/mail/threadPane.css
+++ b/mail/themes/shared/mail/threadPane.css
@@ -687,18 +687,17 @@ tr[data-properties~="junk"] :is(.tree-vi
 /* TODO: Handle delete button color variations for tagged messages */
 
 /* Correspondent column variations */
 
-#correspondentColButton,
-.correspondentcol-column {
+#correspondentColButton {
   text-indent: 18px;
 }
 
 .correspondentcol-column {
   background-repeat: no-repeat;
   background-position-x: 1px;
   background-position-y: center;
-  padding-inline-start: var(--tree-header-cell-padding) !important;
+  padding-inline-start: calc(18px + var(--tree-header-cell-padding)) !important;
   -moz-context-properties: stroke, fill-opacity;
   stroke: currentColor;
   fill-opacity: 0.7;
 
