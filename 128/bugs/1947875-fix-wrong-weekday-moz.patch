# HG changeset patch
# User Yury Ivanovich <Yury.Ivanovich@linuxmail.org>
# Date 1739393156 -3600
# Parent  e96db7f2fc84bf31d8081316be884a96496fecb6
Bug 1947875 - Fix wrong use of Some() in AppDateTimeFormat::Format. r=gregtatum

Based on https://searchfox.org/mozilla-central/rev/5e7382bf8bbb88d8260c72990cfea9b626d9b307/intl/locale/AppDateTimeFormat.cpp#201,204-205
the usage of Some() needs to be corrected.

diff --git a/intl/locale/AppDateTimeFormat.cpp b/intl/locale/AppDateTimeFormat.cpp
--- a/intl/locale/AppDateTimeFormat.cpp
+++ b/intl/locale/AppDateTimeFormat.cpp
@@ -68,26 +68,26 @@ nsresult AppDateTimeFormat::Format(const
   // set up locale data
   nsresult rv = Initialize();
   if (NS_FAILED(rv)) {
     return rv;
   }
 
   aStringOut.Truncate();
 
-  nsAutoCString str;
   nsAutoString timeZoneID;
   BuildTimeZoneString(aExplodedTime->tm_params, timeZoneID);
 
   auto genResult = DateTimePatternGenerator::TryCreate(sLocale->get());
   NS_ENSURE_TRUE(genResult.isOk(), NS_ERROR_FAILURE);
   auto dateTimePatternGenerator = genResult.unwrap();
 
   auto result = DateTimeFormat::TryCreateFromComponents(
-      *sLocale, aBag, dateTimePatternGenerator.get(), Some(timeZoneID));
+      *sLocale, aBag, dateTimePatternGenerator.get(),
+      Some(Span<const char16_t>(timeZoneID.Data(), timeZoneID.Length())));
   NS_ENSURE_TRUE(result.isOk(), NS_ERROR_FAILURE);
   auto dateTimeFormat = result.unwrap();
 
   double unixEpoch =
       static_cast<float>((PR_ImplodeTime(aExplodedTime) / PR_USEC_PER_MSEC));
 
   aStringOut.SetLength(DATETIME_FORMAT_INITIAL_LEN);
   nsTStringToBufferAdapter buffer(aStringOut);
diff --git a/intl/locale/tests/gtest/TestAppDateTimeFormat.cpp b/intl/locale/tests/gtest/TestAppDateTimeFormat.cpp
--- a/intl/locale/tests/gtest/TestAppDateTimeFormat.cpp
+++ b/intl/locale/tests/gtest/TestAppDateTimeFormat.cpp
@@ -94,16 +94,25 @@ TEST(AppDateTimeFormat, FormatPRExploded
   rv = AppDateTimeFormat::Format(style, &prExplodedTime, formattedTime);
   ASSERT_NS_SUCCEEDED(rv);
   ASSERT_TRUE(formattedTime.Find(u"December") != kNotFound);
   ASSERT_TRUE(formattedTime.Find(u"31") != kNotFound);
   ASSERT_TRUE(formattedTime.Find(u"1969") != kNotFound);
   ASSERT_TRUE(formattedTime.Find(u"2:47:00 PM") != kNotFound ||
               formattedTime.Find(u"2:47:00\u202FPM") != kNotFound ||
               formattedTime.Find(u"14:47:00") != kNotFound);
+
+  ComponentsBag components{};
+  components.weekday = mozilla::Some(DateTimeFormat::Text::Short);
+  components.timeZoneName = mozilla::Some(DateTimeFormat::TimeZoneName::Short);
+  // From above: Wed, 31 Dec 1969 14:47:00 -09:13
+  rv = AppDateTimeFormat::Format(components, &prExplodedTime, formattedTime);
+  ASSERT_NS_SUCCEEDED(rv);
+  ASSERT_TRUE(formattedTime.Find(u"Wed") != kNotFound);
+  ASSERT_TRUE(formattedTime.Find(u"-09:13") != kNotFound);
 }
 
 TEST(AppDateTimeFormat, DateFormatSelectors)
 {
   PRTime prTime = 0;
   PRExplodedTime prExplodedTime;
   PR_ExplodeTime(prTime, PR_GMTParameters, &prExplodedTime);
 
