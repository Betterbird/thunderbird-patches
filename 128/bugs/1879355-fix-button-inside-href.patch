# HG changeset patch
# User welpy-cw <h.w.forms@arcor.de>
# Date 1727643554 -7200
# Parent  8132264e18ee936f3a59b4eae08ad3731081b3a7
Bug 1879355 - Fix clicking on <button> inside <a href>.

diff --git a/mail/actors/LinkClickHandlerChild.sys.mjs b/mail/actors/LinkClickHandlerChild.sys.mjs
--- a/mail/actors/LinkClickHandlerChild.sys.mjs
+++ b/mail/actors/LinkClickHandlerChild.sys.mjs
@@ -16,13 +16,11 @@ XPCOMUtils.defineLazyServiceGetter(
 
 /**
  * Extract the href from the link click event.
  * We look for HTMLAnchorElement, HTMLAreaElement, HTMLLinkElement,
- * HTMLInputElement.form.action, and nested anchor tags.
- * If the clicked element was a HTMLInputElement or HTMLButtonElement
- * we return the form action.
+ * and nested anchor tags.
  *
- * @returns the url and the text for the link being clicked.
+ * @returns the url for the link being clicked.
  */
 function hRefForClickEvent(aEvent) {
   const target = aEvent.target;
 
diff --git a/mail/base/content/contentAreaClick.js b/mail/base/content/contentAreaClick.js
--- a/mail/base/content/contentAreaClick.js
+++ b/mail/base/content/contentAreaClick.js
@@ -37,9 +37,9 @@ var { openLinkExternally } = ChromeUtils
  * we return the form action.
  *
  * @returns [href, linkText] the url and the text for the link being clicked.
  */
-function hRefForClickEvent(aEvent, aDontCheckInputElement) {
+function hRefForClickEvent(aEvent) {
   const target =
     aEvent.type == "command"
       ? document.commandDispatcher.focusedElement
       : aEvent.target;
@@ -63,15 +63,13 @@ function hRefForClickEvent(aEvent, aDont
       href = target.href;
       linkText = gatherTextUnder(target);
     }
   } else if (
-    !aDontCheckInputElement &&
     (HTMLInputElement.isInstance(target) ||
-      HTMLButtonElement.isInstance(target))
+      HTMLButtonElement.isInstance(target)) &&
+    target.form?.action
   ) {
-    if (target.form && target.form.action) {
-      href = target.form.action;
-    }
+    href = target.form.action;
   } else {
     // We may be nested inside of a link node.
     let linkNode = aEvent.target;
     while (linkNode && !HTMLAnchorElement.isInstance(linkNode)) {
