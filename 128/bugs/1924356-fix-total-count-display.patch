# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1729362192 -7200
# Parent  497828b3b41643ee36e2a24c903fc829102f3aae
Bug 1924356 - Make sure Total Message Count is displayed for Favorite Folders.

Hunk in `set folderSize(value)` taken from https://phabricator.services.mozilla.com/D226220

Bonus fix: For virtual folders, sizeOnDisk() fails.

diff --git a/mail/base/content/widgets/folder-tree-row.mjs b/mail/base/content/widgets/folder-tree-row.mjs
--- a/mail/base/content/widgets/folder-tree-row.mjs
+++ b/mail/base/content/widgets/folder-tree-row.mjs
@@ -161,8 +161,12 @@ class FolderTreeRow extends HTMLLIElemen
 
   set totalCount(value) {
     this.classList.toggle("total", value > 0);
     this.totalCountLabel.textContent = value;
+    this.totalCountLabel.hidden = !lazy.XULStoreUtils.isItemVisible(
+      "messenger",
+      "totalMsgCount"
+    );
     this.#updateAriaLabel();
   }
 
   /**
@@ -175,8 +179,12 @@ class FolderTreeRow extends HTMLLIElemen
   }
 
   set folderSize(value) {
     this.folderSizeLabel.textContent = value;
+    this.folderSizeLabel.hidden = !lazy.XULStoreUtils.isItemVisible(
+      "messenger",
+      "folderPaneFolderSize"
+    );
     this.#updateAriaLabel();
   }
 
   #updateAriaLabel() {
@@ -288,9 +296,13 @@ class FolderTreeRow extends HTMLLIElemen
     const isCollapsed = this.classList.contains("collapsed");
     this.unreadCount = folder.getNumUnread(isCollapsed);
     this.totalCount = folder.getTotalMessages(isCollapsed);
     if (lazy.XULStoreUtils.isItemVisible("messenger", "folderPaneFolderSize")) {
-      this.folderSize = this.formatFolderSize(folder.sizeOnDisk);
+      if (!(folder.flags & Ci.nsMsgFolderFlags.Virtual)) {
+        this.folderSize = this.formatFolderSize(folder.sizeOnDisk);
+      } else {
+        this.folderSize = "";
+      }
     }
     this.folderSortOrder = folder.sortOrder;
     if (folder.noSelect) {
       this.classList.add("noselect-folder");
@@ -358,14 +370,17 @@ class FolderTreeRow extends HTMLLIElemen
     // Called recursively.
     const getChildrenSizeCount = row => {
       let sizeCount = 0;
       for (const child of row.childList.children) {
-        // If size is unknown, sizeOnDisk returns -1.
-        sizeCount +=
-          Math.max(
-            0,
-            lazy.MailServices.folderLookup.getFolderForURL(child.uri).sizeOnDisk
-          ) + getChildrenSizeCount(child);
+        const childFolder = lazy.MailServices.folderLookup.getFolderForURL(
+          child.uri
+        );
+        let folderSize = -1;
+        if (!(childFolder.flags & Ci.nsMsgFolderFlags.Virtual)) {
+          // If size is unknown, sizeOnDisk returns -1.
+          folderSize = childFolder.sizeOnDisk;
+        }
+        sizeCount += Math.max(0, folderSize) + getChildrenSizeCount(child);
       }
       return sizeCount;
     };
 
@@ -374,9 +389,12 @@ class FolderTreeRow extends HTMLLIElemen
       return;
     }
 
     folder ??= lazy.MailServices.folderLookup.getFolderForURL(this.uri);
-    let sizeCount = folder.sizeOnDisk;
+    let sizeCount = -1;
+    if (!(folder.flags & Ci.nsMsgFolderFlags.Virtual)) {
+      sizeCount = folder.sizeOnDisk;
+    }
     if (sizeCount < 0) {
       this.folderSize = "";
       return;
     }
