# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1711920141 -7200
# Parent  20ba4e05c0a17f4705f201daee2b6b2df3425c28
NNN6 - Wait until image has a width before setting 'overflowing' attribute.

diff --git a/mail/base/content/aboutMessage.js b/mail/base/content/aboutMessage.js
--- a/mail/base/content/aboutMessage.js
+++ b/mail/base/content/aboutMessage.js
@@ -43,22 +43,32 @@ var autodetectCharset;
 function getMessagePaneBrowser() {
   return document.getElementById("messagepane");
 }
 
-function messagePaneOnResize() {
+async function messagePaneOnResize() {
   const doc = getMessagePaneBrowser().contentDocument;
   // Bail out if it's http content or we don't have images.
   if (doc?.URL.startsWith("http") || !doc?.images) {
     return;
   }
 
-  for (const img of doc.images) {
-    img.toggleAttribute(
-      "overflowing",
-      img.clientWidth - doc.body.offsetWidth >= 0 &&
-        (img.clientWidth <= img.naturalWidth || !img.naturalWidth)
-    );
-  }
+  // This may throw "TypeError: can't access dead object".
+  try {
+    for (const img of doc.images) {
+      let count = 0;
+      // This may also throw "TypeError: can't access dead object".
+      try {
+        while (count++ < 5 && img.clientWidth == 0) {
+          await new Promise(resolve => setTimeout(resolve, 100));
+        }
+        img.toggleAttribute(
+          "overflowing",
+          img.clientWidth - doc.body.offsetWidth >= 0 &&
+            (img.clientWidth <= img.naturalWidth || !img.naturalWidth)
+        );
+      } catch (ex) {}
+    }
+  } catch (ex) {}
 }
 
 function onHeaderSplitterAction(event) {
   onSplitterAction(event);
