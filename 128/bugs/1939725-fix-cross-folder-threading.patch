# HG changeset patch
# User welpy-cw <h.w.forms@arcor.de>
# Date 1735858964 -3600
# Parent  361d1f7f453ec67eeb01fd1aa5029fefd9089eaa
Bug 1939725 - Restore workaround to fix cross-folder threading.

diff --git a/mailnews/base/src/nsMsgSearchDBView.cpp b/mailnews/base/src/nsMsgSearchDBView.cpp
--- a/mailnews/base/src/nsMsgSearchDBView.cpp
+++ b/mailnews/base/src/nsMsgSearchDBView.cpp
@@ -1517,24 +1517,28 @@ nsMsgSearchDBView::GetNumMsgsInView(int3
 }
 
 NS_IMETHODIMP
 nsMsgSearchDBView::SetViewFlags(nsMsgViewFlagsTypeValue aViewFlags) {
-  nsresult rv = NS_OK;
   // If the grouping/threading has changed, rebuild the view.
   constexpr nsMsgViewFlagsTypeValue groupedOrThreaded =
       (nsMsgViewFlagsType::kGroupBySort | nsMsgViewFlagsType::kThreadedDisplay);
   if ((m_viewFlags & groupedOrThreaded) != (aViewFlags & groupedOrThreaded)) {
-    rv = RebuildView(aViewFlags);
+    nsresult rv = RebuildView(aViewFlags);
+    NS_ENSURE_SUCCESS(rv, rv);
     // While threaded and grouped views are sorted as they are rebuilt,
     // switching to unthreaded simply preserves the sequence of the individual
     // headers. Therefore, sort in this case (even when coming from grouped,
     // to get the secondary sort right as well).
     if (!(aViewFlags & groupedOrThreaded)) {
       m_sortValid = false;
-      Sort(m_sortType, m_sortOrder);
+      rv = Sort(m_sortType, m_sortOrder);
+    } else {
+      // Due to flaws in the threading algorithm of nsMsgXFViewThread (see
+      // Bug 595484), it's actually necessary to rebuild the view twice.
+      rv = RebuildView(aViewFlags);
     }
+    NS_ENSURE_SUCCESS(rv, rv);
   }
-  NS_ENSURE_SUCCESS(rv, rv);
   return nsMsgDBView::SetViewFlags(aViewFlags);
 }
 
 NS_IMETHODIMP
