# HG changeset patch
# User welpy-cw <h.w.forms@arcor.de>
# Date 1729168162 -7200
# Node ID ad26126a6e1dc3484cb3140a62d183e77ac67bba
# Parent  3b40861dd2b0ef4ce156d0351943c7eb340213fa
Bug 188598 - Prevent drag and drop of OS folders as attachments. r=aleca

Differential Revision: https://phabricator.services.mozilla.com/D224376

diff --git a/mail/components/compose/content/MsgComposeCommands.js b/mail/components/compose/content/MsgComposeCommands.js
--- a/mail/components/compose/content/MsgComposeCommands.js
+++ b/mail/components/compose/content/MsgComposeCommands.js
@@ -10394,21 +10394,22 @@ var envelopeDragObserver = {
       // check and do the right thing.
       switch (flavor) {
         // Process attachments.
         case "application/x-moz-file": {
-          if (data instanceof Ci.nsIFile) {
+          // Exclude directories.
+          if (data instanceof Ci.nsIFile && data.isFile()) {
             size = data.fileSize;
-          }
-          try {
-            data = Services.io
-              .getProtocolHandler("file")
-              .QueryInterface(Ci.nsIFileProtocolHandler)
-              .getURLSpecFromActualFile(data);
-            isValidAttachment = true;
-          } catch (e) {
-            console.error(
-              "Couldn't process the dragged file " + data.leafName + ":" + e
-            );
+            try {
+              data = Services.io
+                .getProtocolHandler("file")
+                .QueryInterface(Ci.nsIFileProtocolHandler)
+                .getURLSpecFromActualFile(data);
+              isValidAttachment = true;
+            } catch (e) {
+              console.error(
+                "Couldn't process the dragged file " + data.leafName + ":" + e
+              );
+            }
           }
           break;
         }
         case "text/x-moz-message": {
@@ -10809,8 +10810,10 @@ var envelopeDragObserver = {
               (!event.dataTransfer.files.length ||
                 this.isNotDraggingOnlyImages(event.dataTransfer) ||
                 !gMsgCompose.composeHTML)
           );
+      } else {
+        event.dataTransfer.dropEffect = "none";
       }
     }
 
     this.detectHoveredOverlay(event.target.id);
diff --git a/mail/test/browser/composition/browser_attachmentDragDrop.js b/mail/test/browser/composition/browser_attachmentDragDrop.js
--- a/mail/test/browser/composition/browser_attachmentDragDrop.js
+++ b/mail/test/browser/composition/browser_attachmentDragDrop.js
@@ -241,8 +241,57 @@ add_task(async function test_text_file_d
 
   await close_compose_window(cwc);
 });
 
+/**
+ * Test that a directory can't be dropped into the message compose window.
+ */
+add_task(async function test_directory_drag_and_drop() {
+  const file = new FileUtils.File(getTestFilePath("data"));
+  const cwc = await open_compose_new_mail();
+
+  const dragOverTarget = getDragOverTarget(cwc);
+  const dragData = [[{ type: "application/x-moz-file", data: file }]];
+  const dropEffect = "move";
+  const dropTarget = getDropTarget(cwc);
+
+  initDragSession(cwc, dragData, dropEffect);
+  const [result, dataTransfer] = EventUtils.synthesizeDragOver(
+    dragOverTarget,
+    dragOverTarget,
+    dragData,
+    dropEffect,
+    cwc
+  );
+  // Give the attachment overlay some time to incorrectly appear.
+  // eslint-disable-next-line mozilla/no-arbitrary-setTimeout
+  await new Promise(resolve => setTimeout(resolve, 500));
+  Assert.ok(
+    !dropTarget.classList.contains("show"),
+    "The attachment overlay should not appear."
+  );
+
+  Assert.equal(
+    EventUtils.synthesizeDropAfterDragOver(
+      result,
+      dataTransfer,
+      dragOverTarget,
+      cwc
+    ),
+    "none",
+    "Dropping an operating system folder should have no effect."
+  );
+  dragService.getCurrentSession().endDragSession(true);
+
+  Assert.equal(
+    cwc.document.getElementById("attachmentBucket").itemCount,
+    0,
+    "Nothing should have been attached."
+  );
+
+  await close_compose_window(cwc);
+});
+
 add_task(async function test_message_drag() {
   const folder = await create_folder("dragondrop");
   const subject = "Dragons don't drop from the sky";
   const body = "Dragons can fly after all.";
