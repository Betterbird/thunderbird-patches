# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1711918654 -7200
# Parent  9eb1c89188c1b926436f22ed57a9007da5ac0aa2
Bug 1848420 - Always navigate to message when clicked in new mail notification.

diff --git a/mail/modules/MailUtils.sys.mjs b/mail/modules/MailUtils.sys.mjs
--- a/mail/modules/MailUtils.sys.mjs
+++ b/mail/modules/MailUtils.sys.mjs
@@ -396,22 +396,11 @@ export var MailUtils = {
    *   message pane is hidden, opens the message in a new tab or window.
    *   Otherwise uses the folder tab.
    */
   displayMessageInFolderTab(msgHdr, openIfMessagePaneHidden) {
-    // Try opening new tabs in a 3pane window
     const mail3PaneWindow = Services.wm.getMostRecentWindow("mail:3pane");
     if (mail3PaneWindow) {
-      if (openIfMessagePaneHidden) {
-        const tab =
-          mail3PaneWindow.document.getElementById("tabmail").tabInfo[0];
-        if (!tab.chromeBrowser.contentWindow.paneLayout.messagePaneVisible) {
-          this.displayMessage(msgHdr);
-          return;
-        }
-      }
-
-      mail3PaneWindow.MsgDisplayMessageInFolderTab(msgHdr);
-
+      // Bring the window to the foreground and focus it.
       if (Ci.nsIMessengerWindowsIntegration) {
         Cc["@mozilla.org/messenger/osintegration;1"]
           .getService(Ci.nsIMessengerWindowsIntegration)
           .showWindow(mail3PaneWindow);
@@ -420,8 +409,21 @@ export var MailUtils = {
           .getService(Ci.nsIMessengerUnixIntegration)
           .showWindow(mail3PaneWindow);
       }
       mail3PaneWindow.focus();
+
+      // Always navigate to the message in the message list,
+      // there is absolutely no point of opening it without
+      // the user knowing where it is in the list.
+      mail3PaneWindow.MsgDisplayMessageInFolderTab(msgHdr);
+
+      // Try opening new tabs in a 3pane window
+      if (openIfMessagePaneHidden) {
+        const tab = mail3PaneWindow.document.getElementById("tabmail").tabInfo[0];
+        if (!tab.chromeBrowser.contentWindow.paneLayout.messagePaneVisible) {
+          this.displayMessage(msgHdr);
+        }
+      }
     } else {
       const args = { msgHdr };
       args.wrappedJSObject = args;
       Services.ww.openWindow(
