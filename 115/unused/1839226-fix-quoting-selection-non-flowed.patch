# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1696886686 -7200
# Parent  6c18872c3f385fa888f6de1ac7456156dde8d85b
Bug 1839226 - Fix quoting selection of non-flowed messages.

diff --git a/mail/base/content/mailCommands.js b/mail/base/content/mailCommands.js
--- a/mail/base/content/mailCommands.js
+++ b/mail/base/content/mailCommands.js
@@ -62,25 +62,27 @@ function GetMsgKeyFromURI(uri) {
  *
  * @param {nsIMsgCompType} type - Type of composition (new message, reply, draft, etc.)
  * @param {nsIMsgCompFormat} format - Requested format (plain text, html, default)
  * @param {nsIMsgFolder} folder - Folder where the original message is stored
  * @param {string[]} messageArray - Array of message URIs to process, often only
  *   holding one element.
  * @param {Selection} [selection=null] - A DOM selection to be quoted, or null
  *   to quote the whole message, if quoting is appropriate (e.g. in a reply).
+ * @param {boolean} [needsPre=false] - This comes from a pre-formatted message.
  * @param {boolean} [autodetectCharset=false] - If quoting the whole message,
  *   whether automatic character set detection should be used.
  */
 async function ComposeMessage(
   type,
   format,
   folder,
   messageArray,
   selection = null,
+  needsPre = false,
   autodetectCharset = false
 ) {
   let aboutMessage =
     document.getElementById("tabmail")?.currentAboutMessage ||
     document.getElementById("messageBrowser")?.contentWindow;
   let currentHeaderData = aboutMessage?.currentHeaderData;
 
   function isCurrentlyDisplayed(hdr) {
@@ -415,16 +417,17 @@ async function ComposeMessage(
                   hdr,
                   messageUri,
                   type,
                   format,
                   identity,
                   matchingHint.toString(),
                   msgWindow,
                   selection,
+                  needsPre,
                   autodetectCharset
                 );
               },
               true,
               { saneBodySize: true }
             );
           } else {
             // Fall back to traditional behavior.
@@ -438,16 +441,17 @@ async function ComposeMessage(
               hdr,
               messageUri,
               type,
               format,
               hdrIdentity,
               null,
               msgWindow,
               selection,
+              needsPre,
               autodetectCharset
             );
           }
         }
       }
   }
 }
 /* eslint-enable complexity */
diff --git a/mail/base/content/mailCommon.js b/mail/base/content/mailCommon.js
--- a/mail/base/content/mailCommon.js
+++ b/mail/base/content/mailCommon.js
@@ -769,47 +769,63 @@ var commandController = {
     let msgUris =
       gFolder || gViewWrapper.isSynthetic
         ? gDBView?.getURIsForSelection()
         : [window.gMessageURI];
 
     let messagePaneBrowser;
     let autodetectCharset;
     let selection;
+    let needsPre = false;
     if (!mailContextMenu.selectionIsOverridden) {
       if (window.messageBrowser) {
         if (!window.messageBrowser.hidden) {
           messagePaneBrowser =
             window.messageBrowser.contentWindow.getMessagePaneBrowser();
           autodetectCharset =
             window.messageBrowser.contentWindow.autodetectCharset;
         }
       } else {
         messagePaneBrowser = window.getMessagePaneBrowser();
         autodetectCharset = window.autodetectCharset;
       }
       selection = messagePaneBrowser?.contentWindow?.getSelection();
+      // The body has the following markup:
+      // <table class="moz-header-part1 moz-main-header">
+      // <table class="moz-header-part2 moz-main-header">
+      // Followed by a div which can have one of the following classes:
+      // moz-text-plain, moz-text-flowed or moz-text-html.
+      // We need to treat the quote as "pre" for moz-text-plain.
+      // We can't querySelector(".moz-text-plain") since this is also hiding in
+      // inline attachments.
+      // There are also div's in the tables, so we need to use "body > div".
+      needsPre =
+        messagePaneBrowser?.contentWindow?.document.body
+          .querySelector("body > div")
+          ?.classList.contains("moz-text-plain") || false;
     }
 
     if (event && event.shiftKey) {
       window.browsingContext.topChromeWindow.ComposeMessage(
         composeType,
         Ci.nsIMsgCompFormat.OppositeOfDefault,
         msgFolder,
         msgUris,
         selection,
+        needsPre,
         autodetectCharset
       );
     } else {
       window.browsingContext.topChromeWindow.ComposeMessage(
         composeType,
         Ci.nsIMsgCompFormat.Default,
         msgFolder,
         msgUris,
         selection,
+        needsPre,
         autodetectCharset
       );
     }
   },
 
   _navigate(navigationType) {
     if (
       [Ci.nsMsgNavigationType.back, Ci.nsMsgNavigationType.forward].includes(
diff --git a/mailnews/compose/public/nsIMsgComposeService.idl b/mailnews/compose/public/nsIMsgComposeService.idl
--- a/mailnews/compose/public/nsIMsgComposeService.idl
+++ b/mailnews/compose/public/nsIMsgComposeService.idl
@@ -42,16 +42,17 @@ interface nsIMsgComposeService : nsISupp
                          in nsIMsgDBHdr msgHdr,
                          in AUTF8String originalMsgURI,
                          in MSG_ComposeType type,
                          in MSG_ComposeFormat format,
                          in nsIMsgIdentity identity,
                          in AUTF8String from,
                          in nsIMsgWindow aMsgWindow,
                          [optional] in Selection aSelection,
+                         [optional] in boolean needsPre,
                          [optional] in boolean autodetectCharset);
 
   /**
    * Open a compose window given a mailto url and (optionally) an identity.
    *
    * @param aMsgComposeWindowURL Can be null in most cases. If you have your
    *                             own chrome url you want to use in bringing up a
    *                             compose window, pass it in here.
diff --git a/mailnews/compose/src/nsMsgComposeService.cpp b/mailnews/compose/src/nsMsgComposeService.cpp
--- a/mailnews/compose/src/nsMsgComposeService.cpp
+++ b/mailnews/compose/src/nsMsgComposeService.cpp
@@ -328,17 +328,17 @@ nsMsgComposeService::GetOrigWindowSelect
   return rv;
 }
 
 MOZ_CAN_RUN_SCRIPT_FOR_DEFINITION NS_IMETHODIMP
 nsMsgComposeService::OpenComposeWindow(
     const nsACString& msgComposeWindowURL, nsIMsgDBHdr* origMsgHdr,
     const nsACString& originalMsgURI, MSG_ComposeType type,
     MSG_ComposeFormat format, nsIMsgIdentity* aIdentity, const nsACString& from,
-    nsIMsgWindow* aMsgWindow, mozilla::dom::Selection* selection,
+    nsIMsgWindow* aMsgWindow, mozilla::dom::Selection* selection, bool needsPre,
     bool autodetectCharset) {
   nsresult rv;
 
   nsCOMPtr<nsIMsgIdentity> identity = aIdentity;
   if (!identity) GetDefaultIdentity(getter_AddRefs(identity));
 
   /* Actually, the only way to implement forward inline is to simulate a
      template message. Maybe one day when we will have more time we can change
@@ -391,18 +391,23 @@ nsMsgComposeService::OpenComposeWindow(
       // that we should quote
       if (selection &&
           (type == nsIMsgCompType::Reply || type == nsIMsgCompType::ReplyAll ||
            type == nsIMsgCompType::ReplyToSender ||
            type == nsIMsgCompType::ReplyToGroup ||
            type == nsIMsgCompType::ReplyToSenderAndGroup ||
            type == nsIMsgCompType::ReplyToList)) {
         nsAutoCString selHTML;
-        if (NS_SUCCEEDED(GetOrigWindowSelection(type, selection, selHTML)))
-          pMsgComposeParams->SetHtmlToQuote(selHTML);
+        if (NS_SUCCEEDED(GetOrigWindowSelection(type, selection, selHTML))) {
+          if (needsPre) {
+            pMsgComposeParams->SetHtmlToQuote("<pre>"_ns + selHTML + "</pre>"_ns);
+          } else {
+            pMsgComposeParams->SetHtmlToQuote(selHTML);
+          }
+        }
       }
 
       if (!originalMsgURI.IsEmpty()) {
         if (type == nsIMsgCompType::NewsPost) {
           nsAutoCString newsURI(originalMsgURI);
           nsAutoCString group;
           nsAutoCString host;
 
