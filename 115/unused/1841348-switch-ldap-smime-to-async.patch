# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Parent  918faf9281d81679322a271b7494962989d78f51
Bug 1841348 - Switch password prompting to asyncPromptPassword(). r=leftmostcat

Services.ww.getNewAuthPrompter() returns LoginManagerAuthPrompter which implements nsIAuthPrompt
but no longer implements nsIAuthPrompt.promptPassword() and nsIAuthPrompt.promptUsernameAndPassword().

diff --git a/mailnews/addrbook/modules/LDAPListenerBase.jsm b/mailnews/addrbook/modules/LDAPListenerBase.jsm
--- a/mailnews/addrbook/modules/LDAPListenerBase.jsm
+++ b/mailnews/addrbook/modules/LDAPListenerBase.jsm
@@ -7,28 +7,28 @@ const EXPORTED_SYMBOLS = ["LDAPListenerB
 
 /**
  * @implements {nsILDAPMessageListener}
  */
 class LDAPListenerBase {
   /**
    * @see nsILDAPMessageListener
    */
-  onLDAPInit() {
+  async onLDAPInit() {
     let outPassword = {};
     if (this._directory.authDn && this._directory.saslMechanism != "GSSAPI") {
       // If authDn is set, we're expected to use it to get a password.
       let bundle = Services.strings.createBundle(
         "chrome://mozldap/locale/ldap.properties"
       );
 
       let authPrompt = Services.ww.getNewAuthPrompter(
         Services.wm.getMostRecentWindow(null)
       );
-      authPrompt.promptPassword(
+      await authPrompt.asyncPromptPassword(
         bundle.GetStringFromName("authPromptTitle"),
         bundle.formatStringFromName("authPromptText", [
           this._directory.lDAPURL.host,
         ]),
         this._directory.lDAPURL.spec,
         Ci.nsIAuthPrompt.SAVE_PASSWORD_PERMANENTLY,
         outPassword
       );
diff --git a/mailnews/extensions/smime/certFetchingStatus.js b/mailnews/extensions/smime/certFetchingStatus.js
--- a/mailnews/extensions/smime/certFetchingStatus.js
+++ b/mailnews/extensions/smime/certFetchingStatus.js
@@ -94,47 +94,47 @@ function importCert(ber_value) {
 function getLDAPOperation() {
   gLdapOperation = Cc["@mozilla.org/network/ldap-operation;1"].createInstance(
     Ci.nsILDAPOperation
   );
 
   gLdapOperation.init(gLdapConnection, new ldapMessageListener(), null);
 }
 
-function getPassword() {
+async function getPassword() {
   // we only need a password if we are using credentials
   if (gLogin) {
     let authPrompter = Services.ww.getNewAuthPrompter(window);
     let strBundle = document.getElementById("bundle_ldap");
     let password = { value: "" };
 
     // nsLDAPAutocompleteSession uses asciiHost instead of host for the prompt text, I think we should be
     // consistent.
     if (
-      authPrompter.promptPassword(
+      await authPrompter.asyncPromptPassword(
         strBundle.getString("authPromptTitle"),
         strBundle.getFormattedString("authPromptText", [
           gLdapServerURL.asciiHost,
         ]),
         gLdapServerURL.spec,
         authPrompter.SAVE_PASSWORD_PERMANENTLY,
         password
       )
     ) {
       return password.value;
     }
   }
 
   return null;
 }
 
-function kickOffBind() {
+async function kickOffBind() {
   try {
     getLDAPOperation();
-    gLdapOperation.simpleBind(getPassword());
+    gLdapOperation.simpleBind(await getPassword());
   } catch (e) {
     window.close();
   }
 }
 
 function kickOffSearch() {
   try {
     var prefix1 = "";
