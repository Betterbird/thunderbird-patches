# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1700149661 -3600
# Parent  5525e05bea22d20885a5b8bd0b59a4b009c53123
Bug 1864776 - Make status display less busy.

diff --git a/mail/base/content/mailWindow.js b/mail/base/content/mailWindow.js
--- a/mail/base/content/mailWindow.js
+++ b/mail/base/content/mailWindow.js
@@ -343,16 +343,18 @@ nsMsgStatusFeedback.prototype = {
   _stopTimeoutID: null,
   // How many start meteors have been requested.
   _startRequests: 0,
   _meteorsSpinning: false,
   _defaultStatusText: "",
   _progressBarVisible: false,
   _activeProcesses: null,
   _statusFeedbackProgress: -1,
+  _statusLastShown: 0,
+  _lastStatusText: null,
 
   // unload - call to remove links to listeners etc.
   unload() {
     // Remove listeners for any active processes we have hooked ourselves into.
     this._activeProcesses.forEach(function (element) {
       element.removeListener(this);
     }, this);
   },
@@ -439,17 +441,45 @@ nsMsgStatusFeedback.prototype = {
 
   // nsIMsgStatusFeedback implementation.
   showStatusString(statusText) {
     if (!statusText) {
       statusText = this._defaultStatusText;
     } else {
       this._defaultStatusText = "";
     }
-    this._statusText.value = statusText;
+    // Let's make sure the display doesn't flicker.
+    let now = Date.now();
+    if (now - this._statusLastShown > 500) {
+      // Cancel any pending ones. The timeout is not guaranteed
+      // to run within 500 ms.
+      this._lastStatusText = null;
+
+      this._statusLastShown = now;
+      if (this._statusText.value != statusText) {
+        this._statusText.value = statusText;
+      }
+    } else {
+      if (this._lastStatusText !== null) {
+        // There's already a pending display. Replace it.
+        this._lastStatusText = statusText;
+        return;
+      }
+      // Arrange for this to be shown in 500 ms.
+      this._lastStatusText = statusText;
+      setTimeout(() => {
+        if (this._lastStatusText !== null) {
+          this._statusLastShown = Date.now();
+          if (this._statusText.value != this._lastStatusText) {
+            this._statusText.value = this._lastStatusText;
+          }
+          this._lastStatusText = null;
+        }
+      }, 500);
+    }
   },
 
   setStatusString(status) {
     if (status.length > 0) {
       this._defaultStatusText = status;
       this._statusText.value = status;
     }
   },
