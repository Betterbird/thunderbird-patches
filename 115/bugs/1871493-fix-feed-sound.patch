# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1709832602 -3600
# Parent  6164862a2d052371adb1884460d20d3036ddc682
Bug 1871493 - Don't play sound on new feed message on all code paths. Modernise nsStatusBarBiffManager::PlayBiffSound().

diff --git a/mailnews/base/src/nsStatusBarBiffManager.cpp b/mailnews/base/src/nsStatusBarBiffManager.cpp
--- a/mailnews/base/src/nsStatusBarBiffManager.cpp
+++ b/mailnews/base/src/nsStatusBarBiffManager.cpp
@@ -20,9 +20,11 @@
 #include "nsNetUtil.h"
 #include "nsIFileURL.h"
 #include "nsIFile.h"
 #include "nsMsgUtils.h"
+#include "mozilla/Preferences.h"
 #include "mozilla/Services.h"
+#include "nsPrintfCString.h"
 
 // QueryInterface, AddRef, and Release
 //
 NS_IMPL_ISUPPORTS(nsStatusBarBiffManager, nsIStatusBarBiffManager,
@@ -33,14 +35,8 @@ nsStatusBarBiffManager::nsStatusBarBiffM
       mCurrentBiffState(nsIMsgFolder::nsMsgBiffState_Unknown) {}
 
 nsStatusBarBiffManager::~nsStatusBarBiffManager() {}
 
-#define NEW_MAIL_PREF_BRANCH "mail.biff."
-#define CHAT_PREF_BRANCH "mail.chat."
-#define FEED_PREF_BRANCH "mail.feed."
-#define PREF_PLAY_SOUND "play_sound"
-#define PREF_SOUND_URL "play_sound.url"
-#define PREF_SOUND_TYPE "play_sound.type"
 #define SYSTEM_SOUND_TYPE 0
 #define CUSTOM_SOUND_TYPE 1
 #define PREF_CHAT_ENABLED "mail.chat.enabled"
 #define PLAY_CHAT_NOTIFICATION_SOUND "play-chat-notification-sound"
@@ -70,44 +66,27 @@ nsresult nsStatusBarBiffManager::Init() 
   mInitialized = true;
   return NS_OK;
 }
 
-nsresult nsStatusBarBiffManager::PlayBiffSound(const char* aPrefBranch) {
-  nsresult rv;
-  nsCOMPtr<nsIPrefService> prefSvc =
-      (do_GetService(NS_PREFSERVICE_CONTRACTID, &rv));
-  NS_ENSURE_SUCCESS(rv, rv);
-  nsCOMPtr<nsIPrefBranch> pref;
-  rv = prefSvc->GetBranch(aPrefBranch, getter_AddRefs(pref));
-  NS_ENSURE_SUCCESS(rv, rv);
-
-  bool playSound;
-  if (mServerType.EqualsLiteral("rss")) {
-    nsCOMPtr<nsIPrefBranch> prefFeed;
-    rv = prefSvc->GetBranch(FEED_PREF_BRANCH, getter_AddRefs(prefFeed));
-    NS_ENSURE_SUCCESS(rv, rv);
-    rv = prefFeed->GetBoolPref(PREF_PLAY_SOUND, &playSound);
-  } else {
-    rv = pref->GetBoolPref(PREF_PLAY_SOUND, &playSound);
-  }
-  NS_ENSURE_SUCCESS(rv, rv);
-
+nsresult nsStatusBarBiffManager::PlayBiffSound(const char* aPref) {
+  bool playSound = mozilla::Preferences::GetBool(aPref, false);
   if (!playSound) return NS_OK;
 
   // lazily create the sound instance
   if (!mSound) mSound = do_CreateInstance("@mozilla.org/sound;1");
 
-  int32_t soundType = SYSTEM_SOUND_TYPE;
-  rv = pref->GetIntPref(PREF_SOUND_TYPE, &soundType);
-  NS_ENSURE_SUCCESS(rv, rv);
+  int32_t soundType = mozilla::Preferences::GetInt(
+      nsPrintfCString("%s.type", aPref).get(), SYSTEM_SOUND_TYPE);
 
 #ifndef XP_MACOSX
   bool customSoundPlayed = false;
 #endif
 
+  nsresult rv = NS_OK;
   if (soundType == CUSTOM_SOUND_TYPE) {
     nsCString soundURLSpec;
-    rv = pref->GetCharPref(PREF_SOUND_URL, soundURLSpec);
+    rv = mozilla::Preferences::GetCString(
+        nsPrintfCString("%s.url", aPref).get(), soundURLSpec);
 
     if (NS_SUCCEEDED(rv) && !soundURLSpec.IsEmpty()) {
       if (!strncmp(soundURLSpec.get(), "file://", 7)) {
         nsCOMPtr<nsIURI> fileURI;
@@ -179,20 +158,23 @@ NS_IMETHODIMP
 nsStatusBarBiffManager::OnFolderIntPropertyChanged(nsIMsgFolder* folder,
                                                    const nsACString& property,
                                                    int64_t oldValue,
                                                    int64_t newValue) {
+  // Get the folder's server type.
+  nsCString type;
+  nsCOMPtr<nsIMsgIncomingServer> server;
+  nsresult rv = folder->GetServer(getter_AddRefs(server));
+  if (NS_SUCCEEDED(rv) && server) server->GetType(type);
+  const char* pref = type.EqualsLiteral("rss") ? "mail.feed.play_sound"
+                                               : "mail.biff.play_sound";
+
   if (property.Equals(kBiffState) && mCurrentBiffState != newValue) {
     // if we got new mail, attempt to play a sound.
     // if we fail along the way, don't return.
     // we still need to update the UI.
     if (newValue == nsIMsgFolder::nsMsgBiffState_NewMail) {
-      // Get the folder's server type.
-      nsCOMPtr<nsIMsgIncomingServer> server;
-      nsresult rv = folder->GetServer(getter_AddRefs(server));
-      if (NS_SUCCEEDED(rv) && server) server->GetType(mServerType);
-
       // if we fail to play the biff sound, keep going.
-      (void)PlayBiffSound(NEW_MAIL_PREF_BRANCH);
+      (void)PlayBiffSound(pref);
     }
     mCurrentBiffState = newValue;
 
     // don't care if notification fails
@@ -203,9 +185,9 @@ nsStatusBarBiffManager::OnFolderIntPrope
       observerService->NotifyObservers(
           static_cast<nsIStatusBarBiffManager*>(this),
           "mail:biff-state-changed", nullptr);
   } else if (property.Equals(kNewMailReceived)) {
-    (void)PlayBiffSound(NEW_MAIL_PREF_BRANCH);
+    (void)PlayBiffSound(pref);
   }
   return NS_OK;
 }
 
@@ -241,9 +223,9 @@ nsStatusBarBiffManager::OnFolderEvent(ns
 // nsIObserver implementation
 NS_IMETHODIMP
 nsStatusBarBiffManager::Observe(nsISupports* aSubject, const char* aTopic,
                                 const char16_t* aData) {
-  return PlayBiffSound(CHAT_PREF_BRANCH);
+  return PlayBiffSound("mail.chat.play_sound");
 }
 
 // nsIStatusBarBiffManager method....
 NS_IMETHODIMP
diff --git a/mailnews/base/src/nsStatusBarBiffManager.h b/mailnews/base/src/nsStatusBarBiffManager.h
--- a/mailnews/base/src/nsStatusBarBiffManager.h
+++ b/mailnews/base/src/nsStatusBarBiffManager.h
@@ -28,10 +28,9 @@ class nsStatusBarBiffManager : public ns
   virtual ~nsStatusBarBiffManager();
 
   bool mInitialized;
   int32_t mCurrentBiffState;
-  nsCString mServerType;
   nsCOMPtr<nsISound> mSound;
-  nsresult PlayBiffSound(const char* aPrefBranch);
+  nsresult PlayBiffSound(const char* aPref);
 };
 
 #endif  // nsStatusBarBiffManager_h__
diff --git a/mailnews/mailnews.js b/mailnews/mailnews.js
--- a/mailnews/mailnews.js
+++ b/mailnews/mailnews.js
@@ -890,10 +890,13 @@ pref("mail.biff.use_new_count_in_badge",
 #ifdef XP_WIN
 pref("mail.biff.use_new_count_in_badge", true);
 #endif
 
-// For feed account serverType=rss sound on biff; if true, mail.biff.play_sound.* settings are used.
+// For feed account serverType=rss sound on biff.
+// Allow for a different sound to be played for new feed articles.
 pref("mail.feed.play_sound", false);
+pref("mail.feed.play_sound.type", 0);
+pref("mail.feed.play_sound.url", "");
 
 // Content disposition for attachments (except binary files and vcards).
 //   0= Content-Disposition: inline
 //   1= Content-Disposition: attachment
