
# HG changeset patch
# User welpy-cw <h.w.forms@arcor.de>
# Date 1726172474 -7200
# Node ID cb80c73ef3871aba69f4e167ece629d51c5ef5de
# Parent  4c60a7a2a5a5938f08defd0d89c7797531d935f4
Bug 1910477 - Fix parsing of EML files containing large headers. r=BenC

Differential Revision: https://phabricator.services.mozilla.com/D218463

diff --git a/mailnews/local/src/nsMsgFileHdr.cpp b/mailnews/local/src/nsMsgFileHdr.cpp
--- a/mailnews/local/src/nsMsgFileHdr.cpp
+++ b/mailnews/local/src/nsMsgFileHdr.cpp
@@ -9,8 +9,10 @@
 #include "nsIFileURL.h"
 #include "HeaderReader.h"
 #include "nsIFileStreams.h"
 #include "nsIMimeConverter.h"
+#include "mozilla/Buffer.h"
+#include <algorithm>
 
 static inline uint32_t PRTimeToSeconds(PRTime aTimeUsec) {
   return uint32_t(aTimeUsec / PR_USEC_PER_SEC);
 }
@@ -42,11 +44,21 @@ nsresult nsMsgFileHdr::ReadFile() {
       do_CreateInstance(NS_LOCALFILEINPUTSTREAM_CONTRACTID);
   rv = fileStream->Init(mFile, PR_RDONLY, 0664, 0);
   NS_ENSURE_SUCCESS(rv, rv);
 
+  int64_t fileSize;
+  rv = mFile->GetFileSize(&fileSize);
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  if (fileSize < 0) {
+    return NS_ERROR_FAILURE;
+  }
+
+  // The gmail 500KiB header limit seems like a reasonable one.
+  // https://support.google.com/a/answer/14016360
+  mozilla::Buffer<char> buffer(std::min(fileSize, int64_t(500 * 1024)));
   uint32_t count;
-  char buffer[8192];
-  rv = fileStream->Read(&buffer[0], 8192, &count);
+  rv = fileStream->Read(buffer.Elements(), buffer.Length(), &count);
   NS_ENSURE_SUCCESS(rv, rv);
 
   auto cb = [&](HeaderReader::Hdr const& hdr) {
     auto name = hdr.Name(buffer);
