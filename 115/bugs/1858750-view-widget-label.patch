# HG changeset patch
# User Martin Giger <martin@humanoids.be>
# Date 1697741652 -7200
# Node ID 08afc42e055422a0df17007f044011094499490a
# Parent  d36c6885a6ef3759c07818f89bd882b125ffa9ad
Bug 1858750 - Update label of unified toolbar view button to match current view. r=aleca

Differential Revision: https://phabricator.services.mozilla.com/D191112

diff --git a/mail/base/content/mailCommon.js b/mail/base/content/mailCommon.js
--- a/mail/base/content/mailCommon.js
+++ b/mail/base/content/mailCommon.js
@@ -1033,17 +1033,19 @@ var dbViewWrapperListener = {
     let tab = tabmail?.currentTabInfo;
     if (tab) {
       tabmail.setTabThinking(
         tab,
         false
       );
     }
   },
-  onMailViewChanged() {},
+  onMailViewChanged() {
+    window.dispatchEvent(new CustomEvent("MailViewChanged"));
+  },
   onSortChanged() {
     if (window.threadTree && gDBView.selection.count == 0) {
       // If there is no selection, scroll to the most relevant end.
       if (
         gViewWrapper.sortImpliesTemporalOrdering &&
         gViewWrapper.isSortedAscending
       ) {
         window.threadTree.scrollToIndex(gDBView.rowCount - 1, true);
diff --git a/mail/base/content/mailCore.js b/mail/base/content/mailCore.js
--- a/mail/base/content/mailCore.js
+++ b/mail/base/content/mailCore.js
@@ -266,21 +266,16 @@ function MailToolboxCustomizeDone(aEvent
   // Update global UI elements that may have been added or removed
 
   // Re-enable parts of the UI we disabled during the dialog
   var menubar = document.getElementById("mail-menubar");
   for (var i = 0; i < menubar.children.length; ++i) {
     menubar.children[i].setAttribute("disabled", false);
   }
 
-  // make sure the mail views search box is initialized
-  if (document.getElementById("mailviews-container")) {
-    ViewPickerOnLoad();
-  }
-
   var customizePopup = document.getElementById(customizePopupId);
   customizePopup.removeAttribute("disabled");
 
   let toolbox = document.querySelector('[doCustomization="true"]');
   if (toolbox) {
     toolbox.removeAttribute("doCustomization");
 
     // The GetMail button is stuck in a strange state right now, since the
diff --git a/mail/base/content/mailWindowOverlay.js b/mail/base/content/mailWindowOverlay.js
--- a/mail/base/content/mailWindowOverlay.js
+++ b/mail/base/content/mailWindowOverlay.js
@@ -348,17 +348,17 @@ function view_init(event) {
 
   document.getElementById("viewMessageViewMenu").disabled =
     accountCentralVisible;
 
   document.getElementById("viewMessagesMenu").disabled = accountCentralVisible;
 
   // Hide the "View > Messages" menu item if the user doesn't have the "Views"
   // (aka "Mail Views") toolbar button in the main toolbar. (See bug 1563789.)
-  var viewsToolbarButton = document.getElementById("mailviews-container");
+  var viewsToolbarButton = ViewPickerBinding?.isVisible;
   document.getElementById("viewMessageViewMenu").hidden = !viewsToolbarButton;
 
   // Initialize the Message Body menuitem
   document.getElementById("viewBodyMenu").hidden = isFeed;
 
   // Initialize the Show Feed Summary menu
   let viewFeedSummary = document.getElementById("viewFeedSummary");
   viewFeedSummary.hidden = !isFeed;
diff --git a/mail/components/unifiedtoolbar/content/items/view-picker-button.mjs b/mail/components/unifiedtoolbar/content/items/view-picker-button.mjs
new file mode 100644
--- /dev/null
+++ b/mail/components/unifiedtoolbar/content/items/view-picker-button.mjs
@@ -0,0 +1,40 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, you can obtain one at http://mozilla.org/MPL/2.0/. */
+
+import { MailTabButton } from "chrome://messenger/content/unifiedtoolbar/mail-tab-button.mjs";
+
+class ViewPickerButton extends MailTabButton {
+  observed3PaneEvents = ["folderURIChanged", "MailViewChanged"];
+
+  observedAboutMessageEvents = [];
+
+  /**
+   * Update the label and icon of the button from the currently selected folder
+   * in the local 3pane.
+   */
+  onCommandContextChange() {
+    const { gViewWrapper } =
+      document.getElementById("tabmail").currentAbout3Pane ?? {};
+    if (!gViewWrapper) {
+      this.disabled = true;
+      return;
+    }
+    this.disabled = false;
+    const viewPickerPopup = document.getElementById(this.getAttribute("popup"));
+    const value = window.ViewPickerBinding.currentViewValue;
+    let selectedItem = viewPickerPopup.querySelector(`[value="${value}"]`);
+    if (!selectedItem) {
+      // We may have a new item, so refresh to make it show up.
+      window.RefreshAllViewPopups(viewPickerPopup, true);
+      selectedItem = viewPickerPopup.querySelector(`[value="${value}"]`);
+    }
+    this.label.textContent = selectedItem?.getAttribute("label");
+    if (!this.label.textContent) {
+      document.l10n.setAttributes(this.label, "toolbar-view-picker-label");
+    }
+  }
+}
+customElements.define("view-picker-button", ViewPickerButton, {
+  extends: "button",
+});
diff --git a/mail/components/unifiedtoolbar/content/unifiedToolbarCustomizableItems.inc.xhtml b/mail/components/unifiedtoolbar/content/unifiedToolbarCustomizableItems.inc.xhtml
--- a/mail/components/unifiedtoolbar/content/unifiedToolbarCustomizableItems.inc.xhtml
+++ b/mail/components/unifiedtoolbar/content/unifiedToolbarCustomizableItems.inc.xhtml
@@ -213,19 +213,18 @@
           popup="toolbarMarkPopup"
           observes="cmd_tag"
           label-id="toolbar-mark-as-label"
           data-l10n-id="toolbar-mark-as"></button>
 </html:template>
 
 <html:template id="viewPickerTemplate"
                xmlns="http://www.w3.org/1999/xhtml">
-  <button is="mail-tab-button"
+  <button is="view-picker-button"
           popup="toolbarViewPickerPopup"
-          label-id="toolbar-view-picker-label"
           data-l10n-id="toolbar-view-picker"></button>
 </html:template>
 
 <html:template id="addressBookTemplate"
                xmlns="http://www.w3.org/1999/xhtml">
   <button is="space-button"
           space="addressbook"
           label-id="toolbar-address-book-label"
diff --git a/mail/components/unifiedtoolbar/jar.mn b/mail/components/unifiedtoolbar/jar.mn
--- a/mail/components/unifiedtoolbar/jar.mn
+++ b/mail/components/unifiedtoolbar/jar.mn
@@ -11,16 +11,17 @@ messenger.jar:
     content/messenger/unifiedtoolbar/compact-folder-button.mjs         (content/items/compact-folder-button.mjs)
     content/messenger/unifiedtoolbar/delete-button.mjs                 (content/items/delete-button.mjs)
     content/messenger/unifiedtoolbar/folder-location-button.mjs        (content/items/folder-location-button.mjs)
     content/messenger/unifiedtoolbar/get-messages-button.mjs           (content/items/get-messages-button.mjs)
     content/messenger/unifiedtoolbar/global-search-bar.mjs             (content/items/global-search-bar.mjs)
     content/messenger/unifiedtoolbar/mail-go-button.mjs                (content/items/mail-go-button.mjs)
     content/messenger/unifiedtoolbar/quick-filter-bar-toggle.mjs       (content/items/quick-filter-bar-toggle.mjs)
     content/messenger/unifiedtoolbar/space-button.mjs                  (content/items/space-button.mjs)
+    content/messenger/unifiedtoolbar/view-picker-button.mjs            (content/items/view-picker-button.mjs)
     content/messenger/unifiedtoolbar/extension-action-button.mjs       (content/extension-action-button.mjs)
     content/messenger/unifiedtoolbar/list-box-selection.mjs            (content/list-box-selection.mjs)
     content/messenger/unifiedtoolbar/mail-tab-button.mjs               (content/mail-tab-button.mjs)
     content/messenger/unifiedtoolbar/search-bar.mjs                    (content/search-bar.mjs)
     content/messenger/unifiedtoolbar/unified-toolbar.mjs               (content/unified-toolbar.mjs)
     content/messenger/unifiedtoolbar/unified-toolbar-button.mjs        (content/unified-toolbar-button.mjs)
     content/messenger/unifiedtoolbar/unified-toolbar-customization.mjs (content/unified-toolbar-customization.mjs)
     content/messenger/unifiedtoolbar/unified-toolbar-customization-pane.mjs (content/unified-toolbar-customization-pane.mjs)
diff --git a/mail/components/unifiedtoolbar/modules/CustomizableItemsDetails.mjs b/mail/components/unifiedtoolbar/modules/CustomizableItemsDetails.mjs
--- a/mail/components/unifiedtoolbar/modules/CustomizableItemsDetails.mjs
+++ b/mail/components/unifiedtoolbar/modules/CustomizableItemsDetails.mjs
@@ -325,17 +325,17 @@ export default [
     ],
   },
   {
     id: "view-picker",
     labelId: "toolbar-view-picker",
     spaces: ["mail"],
     templateId: "viewPickerTemplate",
     requiredModules: [
-      "chrome://messenger/content/unifiedtoolbar/mail-tab-button.mjs",
+      "chrome://messenger/content/unifiedtoolbar/view-picker-button.mjs",
     ],
   },
   {
     id: "print",
     labelId: "toolbar-print",
     spaces: ["mail"],
     templateId: "printTemplate",
     requiredModules: [
diff --git a/mail/extensions/mailviews/content/msgViewPickerOverlay.js b/mail/extensions/mailviews/content/msgViewPickerOverlay.js
--- a/mail/extensions/mailviews/content/msgViewPickerOverlay.js
+++ b/mail/extensions/mailviews/content/msgViewPickerOverlay.js
@@ -39,57 +39,50 @@ function ViewChange(aValue) {
   let about3Pane = document.getElementById("tabmail").currentAbout3Pane;
   let viewWrapper = about3Pane.gViewWrapper;
   if (!viewWrapper) {
     return;
   }
 
   if (aValue == kViewItemCustomize || aValue == kViewItemVirtual) {
     // restore to the previous view value, in case they cancel
-    ViewPickerBinding.updateDisplay();
     if (aValue == kViewItemCustomize) {
       LaunchCustomizeDialog();
     } else {
       about3Pane.folderPane.newVirtualFolder(
         ViewPickerBinding.currentViewLabel,
-        viewWrapper.search.viewTerms
+        viewWrapper.search.viewTerms,
+        about3Pane.gFolder
       );
     }
     return;
   }
 
   // tag menuitem values are of the form :<keyword>
   if (isNaN(aValue)) {
     // split off the tag key
     var tagkey = aValue.substr(kViewTagMarker.length);
     viewWrapper.setMailView(kViewItemTags, tagkey);
   } else {
     var numval = Number(aValue);
     viewWrapper.setMailView(numval, null);
   }
-  ViewPickerBinding.updateDisplay();
 }
 
 function ViewChangeByMenuitem(aMenuitem) {
   // Mac View menu menuitems don't have XBL bindings
   ViewChange(aMenuitem.getAttribute("value"));
 }
 
 /**
  * Mediates interaction with the #viewPickerPopup.  In theory this should be
  *  an XBL binding, but for the insanity where the view picker may not be
  *  visible at all times (or ever).  No view picker widget, no binding.
  */
 var ViewPickerBinding = {
-  _init() {
-    window.addEventListener("MailViewChanged", function (aEvent) {
-      ViewPickerBinding.updateDisplay(aEvent);
-    });
-  },
-
   /**
    * Return true if the view picker is visible.  This is used by the
    *  FolderDisplayWidget to know whether or not to actually use mailviews. (The
    *  idea is that if we are not visible, then it would be confusing to the user
    *  if we filtered their mail since they would have no feedback about this and
    *  no way to change it.)
    */
   get isVisible() {
@@ -120,42 +113,17 @@ var ViewPickerBinding = {
   /**
    * @returns The label for the current mail view value.
    */
   get currentViewLabel() {
     return document.querySelector(
       `#toolbarViewPickerPopup [value="${this.currentViewValue}"]`
     )?.label;
   },
-
-  /**
-   * The effective view has changed, update the widget.
-   */
-  updateDisplay(event) {
-    let viewPicker = document.getElementById("viewPicker");
-    if (viewPicker) {
-      let value = this.currentViewValue;
-
-      let viewPickerPopup = document.getElementById("viewPickerPopup");
-      let selectedItem = viewPickerPopup.querySelector(
-        '[value="' + value + '"]'
-      );
-      if (!selectedItem) {
-        // We may have a new item, so refresh to make it show up.
-        RefreshAllViewPopups(viewPickerPopup, true);
-        selectedItem = viewPickerPopup.querySelector('[value="' + value + '"]');
-      }
-      viewPicker.setAttribute(
-        "label",
-        selectedItem && selectedItem.getAttribute("label")
-      );
-    }
-  },
 };
-ViewPickerBinding._init();
 
 function LaunchCustomizeDialog() {
   OpenOrFocusWindow(
     {},
     "mailnews:mailviewlist",
     "chrome://messenger/content/mailViewList.xhtml"
   );
 }
@@ -311,17 +279,8 @@ function RefreshTagsPopup(parent, elemen
 
     item.addEventListener("command", () =>
       ViewChange(kViewTagMarker + tagInfo.key)
     );
 
     parent.appendChild(item);
   });
 }
-
-function ViewPickerOnLoad() {
-  var viewPickerPopup = document.getElementById("viewPickerPopup");
-  if (viewPickerPopup) {
-    RefreshAllViewPopups(viewPickerPopup, true);
-  }
-}
-
-window.addEventListener("load", ViewPickerOnLoad);
diff --git a/mail/modules/DBViewWrapper.jsm b/mail/modules/DBViewWrapper.jsm
--- a/mail/modules/DBViewWrapper.jsm
+++ b/mail/modules/DBViewWrapper.jsm
@@ -2079,18 +2079,17 @@ DBViewWrapper.prototype = {
         //  anyways.
         dbFolderInfo.setCharProperty(
           MailViewConstants.kViewCurrentTag,
           this._mailViewData ? ":" + this._mailViewData : ""
         );
       }
     }
 
-    // we don't need to notify the view picker to update because the makeActive
-    //  that cascades out of the view update will do it for us.
+    this.listener.onMailViewChanged();
   },
 
   /**
    * @returns true if the row at the given index contains a collapsed thread,
    *     false if the row is a collapsed group or anything else.
    */
   isCollapsedThreadAtIndex(aViewIndex) {
     let flags = this.dbView.getFlagsAt(aViewIndex);
diff --git a/mail/themes/windows/mail/mailWindow1.css b/mail/themes/windows/mail/mailWindow1.css
--- a/mail/themes/windows/mail/mailWindow1.css
+++ b/mail/themes/windows/mail/mailWindow1.css
@@ -377,23 +377,16 @@ treechildren::-moz-tree-row(dummy, selec
 
 @media (prefers-contrast) {
   :root:not(:-moz-lwtheme)
     treechildren::-moz-tree-image(selected) {
     color: inherit;
   }
 }
 
-@media (-moz-windows-non-native-menus) {
-  #viewPickerPopup > menu,
-  #viewPickerPopup > menuitem {
-    padding-inline-start: 1em;
-  }
-}
-
 @media (-moz-windows-default-theme) {
   :root:not([lwt-tree],:-moz-lwtheme) #folderTree {
     background-color: #fafafa;
   }
 }
 
 @media (-moz-platform: windows-win7) and (-moz-windows-default-theme) {
   @media (-moz-windows-glass: 0) {
