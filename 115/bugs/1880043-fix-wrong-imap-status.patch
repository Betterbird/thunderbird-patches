# HG changeset patch
# User Gene Smith <gds@chartertn.net>
# Date 1709828465 -3600
# Parent  bff7ea746ba0c5698b183b2bbc89e9a95103ef59
Bug 1880043 - fix wrong IMAP status messages.

diff --git a/mailnews/imap/src/nsImapMailFolder.cpp b/mailnews/imap/src/nsImapMailFolder.cpp
--- a/mailnews/imap/src/nsImapMailFolder.cpp
+++ b/mailnews/imap/src/nsImapMailFolder.cpp
@@ -6283,11 +6283,12 @@ nsImapMailFolder::PercentProgress(nsIIma
             nsAutoString current;
             current.AppendInt(aCurrentProgress);
             nsAutoString expected;
             expected.AppendInt(aMaxProgress);
-            nsAutoString mailbox(aMailboxName);
-            AutoTArray<nsString, 3> params = {current, expected, mailbox};
-
+            // Use the localized name and not the the standard IMAP name.
+            nsAutoString prettyName;
+            GetPrettyName(prettyName);
+            AutoTArray<nsString, 3> params = {current, expected, prettyName};
             nsCOMPtr<nsIStringBundle> bundle;
             nsresult rv = IMAPGetStringBundle(getter_AddRefs(bundle));
             NS_ENSURE_SUCCESS(rv, rv);
 
diff --git a/mailnews/imap/src/nsImapProtocol.cpp b/mailnews/imap/src/nsImapProtocol.cpp
--- a/mailnews/imap/src/nsImapProtocol.cpp
+++ b/mailnews/imap/src/nsImapProtocol.cpp
@@ -2863,13 +2863,18 @@ void nsImapProtocol::ProcessSelectedStat
           if (HandlingMultipleMessages(messageIdString) ||
               m_imapAction == nsIImapUrl::nsImapMsgDownloadForOffline ||
               m_imapAction == nsIImapUrl::nsImapMsgPreview) {
             // multiple messages, fetch them all
-            SetProgressString(IMAP_MESSAGES_STRING_INDEX);
-
-            m_progressCurrentNumber[m_stringIndex] = 0;
-            m_progressExpectedNumber =
-                CountMessagesInIdString(messageIdString.get());
+            if (m_imapAction != nsIImapUrl::nsImapMsgDownloadForOffline) {
+              // Autosync does its own progress. Don't do progress here.
+              // Avoids lots of "1 of 1", "1 of 3" etc. interspersed with
+              // autosync progress.
+              SetProgressString(IMAP_MESSAGES_STRING_INDEX);
+
+              m_progressCurrentNumber[m_stringIndex] = 0;
+              m_progressExpectedNumber =
+                  CountMessagesInIdString(messageIdString.get());
+            }
 
             FetchMessage(messageIdString,
                          (m_imapAction == nsIImapUrl::nsImapMsgPreview)
                              ? kBodyStart
