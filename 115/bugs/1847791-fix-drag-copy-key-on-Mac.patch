# HG changeset patch
# User Geoff Lankow <geoff@darktrojan.net>
# Date 1695149838 -7200
# Parent  26e8eb768b9219bbbfe76b31b3adacd2140c91cc
Bug 1847791 - Check correct key when dragging over the folder tree in macOS.

diff --git a/mail/base/content/about3Pane.js b/mail/base/content/about3Pane.js
--- a/mail/base/content/about3Pane.js
+++ b/mail/base/content/about3Pane.js
@@ -22,16 +22,19 @@
 /* globals analyzeMessagesForJunk deleteJunkInFolder filterFolderForJunk */
 
 // quickFilterBar.js
 /* globals quickFilterBar */
 
 // utilityOverlay.js
 /* globals validateFileName */
 
+var { AppConstants } = ChromeUtils.importESModule(
+  "resource://gre/modules/AppConstants.sys.mjs"
+);
 var { FolderTreeProperties } = ChromeUtils.import(
   "resource:///modules/FolderTreeProperties.jsm"
 );
 var { MailServices } = ChromeUtils.import(
   "resource:///modules/MailServices.jsm"
 );
 var { UIDensity } = ChromeUtils.import("resource:///modules/UIDensity.jsm");
 var { UIFontSize } = ChromeUtils.import("resource:///modules/UIFontSize.jsm");
@@ -2734,16 +2737,19 @@ var folderPane = {
       return;
     }
 
     event.dataTransfer.mozSetDataAt("text/x-moz-folder", folder, 0);
     event.dataTransfer.effectAllowed = "copyMove";
   },
 
   _onDragOver(event) {
+    const accelKey =
+      AppConstants.platform == "macosx" ? event.altKey : event.ctrlKey;
+
     event.dataTransfer.dropEffect = "none";
     event.preventDefault();
 
     let row = event.target.closest("li");
     this._timedExpand(row);
     if (!row) {
       return;
     }
@@ -2762,33 +2768,33 @@ var folderPane = {
         let msgHdr = top.messenger.msgHdrFromURI(
           event.dataTransfer.mozGetDataAt("text/x-moz-message", i)
         );
         // Don't allow drop onto original folder.
         if (msgHdr.folder == targetFolder) {
           return;
         }
       }
-      event.dataTransfer.dropEffect = event.ctrlKey ? "copy" : "move";
+      event.dataTransfer.dropEffect = accelKey ? "copy" : "move";
     } else if (types.includes("text/x-moz-folder")) {
       // If cannot create subfolders then don't allow drop here.
       if (!targetFolder.canCreateSubfolders) {
         return;
       }
 
       let sourceFolder = event.dataTransfer
         .mozGetDataAt("text/x-moz-folder", 0)
         .QueryInterface(Ci.nsIMsgFolder);
 
       // Don't allow to drop on itself.
       if (targetFolder == sourceFolder) {
         return;
       }
       // Don't copy within same server.
-      if (sourceFolder.server == targetFolder.server && event.ctrlKey) {
+      if (sourceFolder.server == targetFolder.server && accelKey) {
         return;
       }
       // Don't allow immediate child to be dropped onto its parent.
       if (targetFolder == sourceFolder.parent) {
         return;
       }
       // Don't allow dragging of virtual folders across accounts.
       if (
@@ -2805,17 +2811,17 @@ var folderPane = {
       // dropped if it is not to "Local Folders" or is to the same account.
       if (
         !sourceFolder.canRename &&
         (targetFolder.server.type != "none" ||
           sourceFolder.server == targetFolder.server)
       ) {
         return;
       }
-      event.dataTransfer.dropEffect = event.ctrlKey ? "copy" : "move";
+      event.dataTransfer.dropEffect = accelKey ? "copy" : "move";
     } else if (types.includes("application/x-moz-file")) {
       if (targetFolder.isServer || !targetFolder.canFileMessages) {
         return;
       }
       for (let i = 0; i < event.dataTransfer.mozItemCount; i++) {
         let extFile = event.dataTransfer
           .mozGetDataAt("application/x-moz-file", i)
           .QueryInterface(Ci.nsIFile);
