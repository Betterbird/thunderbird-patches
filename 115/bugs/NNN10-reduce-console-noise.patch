# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1707941260 -3600
# Parent  58c9fe21267597c2a41c5e0eb0eec70772d451c7
NNN10 - Reduce more console noise, ext-tabs.js:75.

diff --git a/mail/base/content/mailCommon.js b/mail/base/content/mailCommon.js
--- a/mail/base/content/mailCommon.js
+++ b/mail/base/content/mailCommon.js
@@ -1065,17 +1065,19 @@ var dbViewWrapperListener = {
       if (window.threadPane.scrollToNewMessage) {
         try {
           let index = gDBView.findIndexOfMsgHdr(gFolder.firstNewMessage, true);
           if (index != nsMsgViewIndex_None) {
             window.threadTree.scrollToIndex(index, true);
             newMessageFound = true;
           }
         } catch (ex) {
-          console.error(ex);
+          console.warn(
+            `Finding first new message for folder ${gFolder.URI} failed with ${ex.message}`
+          );
         }
         window.threadPane.scrollToNewMessage = false;
       }
       window.threadTree.reset();
       if (!newMessageFound && !window.threadPane.scrollDetected) {
         window.threadPane.scrollToLatestRowIfNoSelection();
       }
     }
diff --git a/mail/components/extensions/parent/ext-tabs.js b/mail/components/extensions/parent/ext-tabs.js
--- a/mail/components/extensions/parent/ext-tabs.js
+++ b/mail/components/extensions/parent/ext-tabs.js
@@ -67,16 +67,17 @@ let tabListener = {
    */
   awaitTabReady(nativeTabInfo) {
     let deferred = this.tabReadyPromises.get(nativeTabInfo);
     if (!deferred) {
       deferred = PromiseUtils.defer();
       let browser = getTabBrowser(nativeTabInfo);
       if (
         !this.initializingTabs.has(nativeTabInfo) &&
+        browser &&
         (browser.innerWindowID ||
           ["about:blank", "about:blank?compose"].includes(
             browser.currentURI.spec
           ))
       ) {
         deferred.resolve(nativeTabInfo);
       } else {
         this.initTabReady();
