# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1683321184 -7200
# Parent  7aef6b5d8679d55485b75359c3c0fb40805b613d
Bug 1831500 - Reinstate feedback during search.

diff --git a/mail/base/content/mailCommon.js b/mail/base/content/mailCommon.js
--- a/mail/base/content/mailCommon.js
+++ b/mail/base/content/mailCommon.js
@@ -747,17 +747,29 @@ var dbViewWrapperListener = {
   },
   get shouldDeferMessageDisplayUntilAfterServerConnect() {
     return false;
   },
   shouldMarkMessagesReadOnLeavingFolder(msgFolder) {
     return false;
   },
   onFolderLoading(isFolderLoading) {},
-  onSearching(isSearching) {},
+  onSearching(isSearching) {
+    let tabmail = top.document.getElementById("tabmail");
+    let tab = tabmail?.currentTabInfo;
+    if (tab) {
+      let searchBundle = Services.strings.createBundle(
+        "chrome://messenger/locale/search.properties"
+      );
+      tabmail.setTabThinking(
+        tab,
+        isSearching && searchBundle.GetStringFromName("searchingMessage")
+      );
+    }
+  },
   onCreatedView() {
     if (window.threadTree) {
       window.threadPane.setTreeView(gViewWrapper.dbView);
 
       if (
         gViewWrapper.sortImpliesTemporalOrdering &&
         gViewWrapper.isSortedAscending
       ) {
@@ -780,16 +792,25 @@ var dbViewWrapperListener = {
   },
   onDisplayingFolder() {},
   onLeavingFolder() {},
   onMessagesLoaded(all) {
     if (all) {
       window.threadTree?.invalidate();
     }
     window.quickFilterBar?.onMessagesChanged();
+
+    let tabmail = top.document.getElementById("tabmail");
+    let tab = tabmail?.currentTabInfo;
+    if (tab) {
+      tabmail.setTabThinking(
+        tab,
+        false
+      );
+    }
   },
   onMailViewChanged() {},
   onSortChanged() {
     window.threadTree?.invalidate();
   },
   onMessagesRemoved() {
     window.quickFilterBar?.onMessagesChanged();
 
diff --git a/mail/base/content/tabmail.js b/mail/base/content/tabmail.js
--- a/mail/base/content/tabmail.js
+++ b/mail/base/content/tabmail.js
@@ -1775,16 +1775,17 @@ var { UIFontSize } = ChromeUtils.import(
     _setActiveThinkingState(aThinkingState) {
       if (aThinkingState) {
         statusFeedback.showProgress(0);
         if (typeof aThinkingState == "string") {
           statusFeedback.showStatusString(aThinkingState);
         }
       } else {
         statusFeedback.showProgress(0);
+        statusFeedback.showStatusString("");
       }
     }
 
     setTabThinking(aTabNodeOrInfo, aThinking) {
       let [iTab, tab, tabNode] = this._getTabContextForTabbyThing(
         aTabNodeOrInfo,
         false
       );
