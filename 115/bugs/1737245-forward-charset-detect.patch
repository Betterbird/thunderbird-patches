# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1639346592 -3600
# Parent  6e9dadaae1fe5204df35d9ed25c8be51acc653d0
Bug 1737245 - Add charset detection also for the 'forward/edit as new' codepath.

diff --git a/mailnews/mime/src/mimedrft.cpp b/mailnews/mime/src/mimedrft.cpp
--- a/mailnews/mime/src/mimedrft.cpp
+++ b/mailnews/mime/src/mimedrft.cpp
@@ -1167,19 +1167,18 @@ static void mime_parse_stream_complete(n
 
     NS_ASSERTION(mdd->options == mdd->obj->options,
                  "mime draft options not same as obj->options");
     mime_free(mdd->obj);
     mdd->obj = 0;
     if (mdd->options) {
       // save the override flag before it's unavailable
       charsetOverride = mdd->options->override_charset;
-      if ((!mdd->mailcharset || charsetOverride) &&
-          mdd->options->default_charset) {
-        PR_Free(mdd->mailcharset);
+      if (charsetOverride && mdd->options->default_charset) {
+        PR_FREEIF(mdd->mailcharset);
         mdd->mailcharset = strdup(mdd->options->default_charset);
       }
 
       // mscott: aren't we leaking a bunch of strings here like the charset
       // strings and such?
       delete mdd->options;
       mdd->options = 0;
     }
@@ -1396,16 +1395,27 @@ static void mime_parse_stream_complete(n
           // Convert the body to UTF-8
           char* mimeCharset = nullptr;
           // Get a charset from the header if no override is set.
           if (!charsetOverride)
             mimeCharset = MimeHeaders_get_parameter(
                 mdd->messageBody->m_type.get(), "charset", nullptr, nullptr);
           // If no charset is specified in the header then use the default.
           char* bodyCharset = mimeCharset ? mimeCharset : mdd->mailcharset;
+          // This is a little hacky: The following needs to be declared
+          // in the same scope as `bodyCharset` since the variable will
+          // point to the internal buffer of the smart string.
+          nsAutoCString detectedCharset;
+          if (!bodyCharset) {
+            // We need to detect it.
+            rv = MIME_detect_charset(body, bodyLen, detectedCharset);
+            if (NS_SUCCEEDED(rv) && !detectedCharset.IsEmpty()) {
+              bodyCharset = (char*)detectedCharset.get();
+            }
+          }
           if (bodyCharset) {
             nsAutoString tmpUnicodeBody;
             rv = nsMsgI18NConvertToUnicode(nsDependentCString(bodyCharset),
                                            nsDependentCString(body),
                                            tmpUnicodeBody);
             if (NS_FAILED(rv))  // Tough luck, ASCII/ISO-8859-1 then...
               CopyASCIItoUTF16(nsDependentCString(body), tmpUnicodeBody);
 
