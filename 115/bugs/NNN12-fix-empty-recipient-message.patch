# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Parent  6c3a3bee45fa849eccef606d73a31b47eb3e54ef
NNN12 - Skip empty recipients in non-ASCII test so they don't produce a misleading error without text insert.

There are non-ASCII characters in the local part of the recipient address %s and your server does not support SMTPUTF8.

diff --git a/mailnews/compose/src/SmtpClient.jsm b/mailnews/compose/src/SmtpClient.jsm
--- a/mailnews/compose/src/SmtpClient.jsm
+++ b/mailnews/compose/src/SmtpClient.jsm
@@ -242,9 +242,34 @@ class SmtpClient {
             firstInvalid = i;
             break;
           }
         }
-        if (!recipient || firstInvalid != null) {
+        // The UI doesn't allow empty recipients, but this case happens in the
+        // wild, likely due to a rogue add-on, maybe "Send Later".
+        // This will break test_sendMailAddressIDN.js.
+        if (!recipient) {
+          console.warn("Skipping empty recipient for non-SMTPUTF8 server");
+          continue;
+        }
+        // This used to read:
+        // if (!recipient || firstInvalid != null) {
+        // so empty recipients produced this message:
+        //   There are non-ASCII characters in the local part of the recipient
+        //   address %s and your server does not support SMTPUTF8.
+        // Obviously the string wasn't supplied. The code was added here
+        // https://hg.mozilla.org/comm-central/rev/8aa30c8f177d#l1.12
+        // to fix the chronically broken test_sendMailAddressIDN.js.
+        // There is even code that relies on that the fact that the insert is
+        // missing:
+        // https://hg.mozilla.org/comm-central/rev/a3174b5d4d07#l1.30
+        // The original test expectation was NS_ERROR_BUT_DONT_SHOW_ALERT
+        // https://hg.mozilla.org/comm-central/rev/96d7f4197146#l2.44
+        // but that got changed here:
+        // https://hg.mozilla.org/comm-central/rev/2f10dc922768#l2.52
+        // Interesting reading also here:
+        // https://hg.mozilla.org/comm-central/rev/5be6a8a9d8b1
+        // In summary: A total mess :-(
+        if (firstInvalid != null) {
           if (!lastAt) {
             // Invalid char found in the localpart, throw error until we implement RFC 6532.
             this._onNsError(MsgUtils.NS_ERROR_ILLEGAL_LOCALPART, recipient);
             return;
