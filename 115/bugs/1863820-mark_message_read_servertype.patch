# HG changeset patch
# User Gene Smith <gds@chartertn.net>
# Date 1709832030 -3600
# Node ID 0d90f48314f583c9d23ae53dfca62e4e68951454
# Parent  ae86e1916c22c5c9af001b92567fcfbf9df5d0e6
Bug 1863820 - Restore mailnews.mark_message_read.<servertype> functionality removed in 115. r=mkmelin

Now you can again create a new pref, e.g., mailnews.mark_message_read.rss set true so that
when any rss folder is exited, all messages are marked read. This capability was removed
from 115 for unknown reasons. In addition to rss folders, you can make this apply to
other folder types by setting the pref ending to nntp, imap, none (for Local Folders),
and pop3. Multiple prefs can be created to apply this to more than one folder type.
TODO: Consider retiring this feature in favor of an folders.onLeavingFolder API event
(or something similar) that add-ons could hook into.

Differential Revision: https://phabricator.services.mozilla.com/D196643

diff --git a/mail/base/content/folderDisplay.js b/mail/base/content/folderDisplay.js
--- a/mail/base/content/folderDisplay.js
+++ b/mail/base/content/folderDisplay.js
@@ -879,20 +879,8 @@ FolderDisplayWidget.prototype = {
     return passwordPromptRequired;
   },
 
   /**
-   * Let the viewWrapper know if it should mark the messages read when leaving
-   *  the provided folder.
-   *
-   * @returns true if the preference is set for the folder's server type.
-   */
-  shouldMarkMessagesReadOnLeavingFolder(aMsgFolder) {
-    return Services.prefs.getBoolPref(
-      "mailnews.mark_message_read." + aMsgFolder.server.type
-    );
-  },
-
-  /**
    * The view wrapper tells us when it starts loading a folder, and we set the
    *  cursor busy.  Setting the cursor busy on a per-tab basis is us being
    *  nice to the future. Loading a folder is a blocking operation that is going
    *  to make us unresponsive and accordingly make it very hard for the user to
diff --git a/mail/base/content/mailCommon.js b/mail/base/content/mailCommon.js
--- a/mail/base/content/mailCommon.js
+++ b/mail/base/content/mailCommon.js
@@ -954,10 +954,24 @@ var dbViewWrapperListener = {
   },
   get shouldDeferMessageDisplayUntilAfterServerConnect() {
     return false;
   },
+
+  /**
+   * Let the viewWrapper know if it should mark the messages read when leaving
+   * the provided folder.
+   *
+   * TODO: Consider retiring this in favor of an folders.onLeavingFolder API
+   * event (or something similar) that add-ons could hook into.
+   *
+   * @returns {boolean} true if we should mark this folder as read when leaving
+   * it.
+   */
   shouldMarkMessagesReadOnLeavingFolder(msgFolder) {
-    return false;
+    return Services.prefs.getBoolPref(
+      `mailnews.mark_message_read.${msgFolder.server.type}`,
+      false
+    );
   },
   onFolderLoading(isFolderLoading) {},
   onSearching(isSearching) {},
   onCreatedView() {
diff --git a/mail/modules/DBViewWrapper.jsm b/mail/modules/DBViewWrapper.jsm
--- a/mail/modules/DBViewWrapper.jsm
+++ b/mail/modules/DBViewWrapper.jsm
@@ -335,24 +335,8 @@ IDBViewWrapperListener.prototype = {
   get shouldDeferMessageDisplayUntilAfterServerConnect() {
     return false;
   },
 
-  /**
-   * Should we mark all messages in a folder as read on exit?
-   * This is nominally controlled by the "mailnews.mark_message_read.SERVERTYPE"
-   *  preference (on a per-server-type basis).
-   * For the record, this functionality should not remotely be in the core.
-   *
-   * @param aMsgFolder The folder we are leaving and are unsure if we should
-   *     mark all its messages read.  I pass the folder instead of the server
-   *     type because having a crazy feature like this will inevitably lead to
-   *     a more full-featured crazy feature (why not on a per-folder basis, eh?)
-   * @returns true if we should mark all the dudes as read, false if not.
-   */
-  shouldMarkMessagesReadOnLeavingFolder(aMsgFolder) {
-    return false;
-  },
-
   /* ===== Event Notifications ===== */
   /* === Status Changes === */
   /**
    * We tell you when we start and stop loading the folder.  This is a good
