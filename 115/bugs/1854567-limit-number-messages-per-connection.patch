# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1702750099 -3600
# Parent  46082e99a160c749586de91339b760bac3f5a7ab
Bug 1854567 - Optionally limit the number of messages sent per connection.

Some ideas in this patch from Magnus Melin in https://phabricator.services.mozilla.com/D189676

diff --git a/mailnews/compose/src/SmtpClient.jsm b/mailnews/compose/src/SmtpClient.jsm
--- a/mailnews/compose/src/SmtpClient.jsm
+++ b/mailnews/compose/src/SmtpClient.jsm
@@ -39,16 +39,20 @@ var { MailStringUtils } = ChromeUtils.im
 var { SmtpAuthenticator } = ChromeUtils.import(
   "resource:///modules/MailAuthenticator.jsm"
 );
 var { MsgUtils } = ChromeUtils.import(
   "resource:///modules/MimeMessageUtils.jsm"
 );
 
 class SmtpClient {
+  // Number of messages sent with this client and max. number it can send.
+  messagesSent = 0;
+  maxMessagesPerConnection = 0;
+
   /**
    * The number of RCPT TO commands sent on the connection by this client.
    * This can count-up over multiple messages.
    */
   rcptCount = 0;
 
   /**
    * Set true only when doing a retry.
@@ -136,16 +140,20 @@ class SmtpClient {
       this.socket = new TCPSocket(hostname, port, {
         binaryType: "arraybuffer",
         useSecureTransport: this._secureTransport,
       });
 
       this.socket.onerror = this._onError;
       this.socket.onopen = this._onOpen;
     }
+    this.messagesSent++;
+    this.logger.debug(
+      `Connected to send message #${this.messagesSent} (limit: ${this.maxMessagesPerConnection})`
+    );
     this._freed = false;
   }
 
   /**
    * Sends QUIT
    */
   quit() {
     this._authenticating = false;
@@ -544,16 +552,17 @@ class SmtpClient {
   }
 
   /**
    * Indicates that the socket has been closed
    */
   _onClose = () => {
     this.logger.debug("Socket closed.");
     this._free();
+    this.messagesSent = 0;
     this.rcptCount = 0;
     if (this._authenticating) {
       // In some cases, socket is closed for invalid username/password.
       this._onAuthFailed({ data: "Socket closed." });
     }
   };
 
   /**
diff --git a/mailnews/compose/src/SmtpServer.jsm b/mailnews/compose/src/SmtpServer.jsm
--- a/mailnews/compose/src/SmtpServer.jsm
+++ b/mailnews/compose/src/SmtpServer.jsm
@@ -476,16 +476,20 @@ class SmtpServer {
       ? this.maximumConnectionsNumber
       : 1;
     if (
       this._freeConnections.length + this._busyConnections.length <
       maxConns
     ) {
       // Create a new client if the pool is not full.
       client = new lazy.SmtpClient(this);
+      client.maxMessagesPerConnection = this._getIntPrefWithDefault(
+        "max_messages_per_connection",
+        0
+      );
       this._busyConnections.push(client);
       return client;
     }
     // Wait until a connection is available.
     await new Promise(resolve => this._connectionWaitingQueue.push(resolve));
     return this._getNextClient();
   }
   /**
@@ -500,17 +504,25 @@ class SmtpServer {
       this._busyConnections = this._busyConnections.filter(c => c != client);
       // Per RFC, the minimum total number of recipients that MUST be buffered
       // is 100 recipients.
       // @see https://datatracker.ietf.org/doc/html/rfc5321#section-4.5.3.1.8
       // So use a new connection for the next message to avoid running into
       // recipient limits.
       // If user has set SMTP pref max_cached_connection to less than 1,
       // use a new connection for each message.
-      if (this.maximumConnectionsNumber == 0 || client.rcptCount > 99) {
+      if (
+        this.maximumConnectionsNumber == 0 ||
+        client.rcptCount > 99 ||
+        (client.maxMessagesPerConnection > 0 &&
+          client.messagesSent >= client.maxMessagesPerConnection)
+      ) {
+        client.logger.debug(
+          `Sent #${client.messagesSent} messages (limit: ${client.maxMessagesPerConnection}), quitting.`
+        );
         // Send QUIT, server will then terminate the connection
         client.quit();
       } else {
         // Keep using this connection
         this._freeConnections.push(client);
         // Resolve the first waiting in queue.
         this._connectionWaitingQueue.shift()?.();
       }
diff --git a/mailnews/mailnews.js b/mailnews/mailnews.js
--- a/mailnews/mailnews.js
+++ b/mailnews/mailnews.js
@@ -524,16 +524,19 @@ pref("mail.server.default.clientid", "")
 pref("mail.smtpserver.default.clientid", "");
 
 // This is not to be enabled by default until the prerequisite
 // changes are completed. See here for details:
 //  https://bugzilla.mozilla.org/show_bug.cgi?id=1565379
 pref("mail.server.default.clientidEnabled", false);
 pref("mail.smtpserver.default.clientidEnabled", false);
 pref("mail.smtpserver.default.max_cached_connections", 3);
+// Some servers don't like too many messages on the same connection.
+// In this case, set the pref to a value greater than 0.
+pref("mail.smtpserver.default.max_messages_per_connection", 0);
 
 pref("mail.smtpservers", "");
 pref("mail.accountmanager.accounts", "");
 
 // Last used account key value
 pref("mail.account.lastKey", 0);
 
 pref("mail.server.default.port", -1);
