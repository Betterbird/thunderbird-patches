# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1705522465 -3600
# Parent  5e3868b3cd143ca7ad90fb0b68c9de17f7775d5e
NNN6 - Wait until image has a width before setting 'overflowing' attribute.

diff --git a/mail/base/content/aboutMessage.js b/mail/base/content/aboutMessage.js
--- a/mail/base/content/aboutMessage.js
+++ b/mail/base/content/aboutMessage.js
@@ -39,29 +39,36 @@ const messengerBundle = Services.strings
 
 var gMessage, gMessageURI;
 var autodetectCharset;
 
 function getMessagePaneBrowser() {
   return document.getElementById("messagepane");
 }
 
-function messagePaneOnResize() {
+async function messagePaneOnResize() {
   const doc = getMessagePaneBrowser().contentDocument;
   // Bail out if it's http content or we don't have images.
   if (doc?.URL.startsWith("http") || !doc?.images) {
     return;
   }
 
   for (let img of doc.images) {
-    img.toggleAttribute(
-      "overflowing",
-      img.clientWidth - doc.body.offsetWidth >= 0 &&
-        (img.clientWidth <= img.naturalWidth || !img.naturalWidth)
-    );
+    let count = 0;
+    // This may throw "TypeError: can't access dead object".
+    try {
+      while (count++ < 5 && img.clientWidth == 0) {
+        await new Promise(resolve => setTimeout(resolve, 100));
+      }
+      img.toggleAttribute(
+        "overflowing",
+        img.clientWidth - doc.body.offsetWidth >= 0 &&
+          (img.clientWidth <= img.naturalWidth || !img.naturalWidth)
+      );
+    } catch (ex) {}
   }
 }
 
 function onHeaderSplitterAction(event) {
   onSplitterAction(event);
   if (
     event.keyCode != KeyEvent.DOM_VK_RETURN &&
     event.type != "dblclick" &&
