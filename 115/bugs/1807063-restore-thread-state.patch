# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1696612149 -7200
# Parent  6b7f1a470336a2adfd2d0c602988fc2053870a56
Bug 1807063 - Restore thread state when selecting folder.

Based on https://phabricator.services.mozilla.com/D190137 by welpy-cw <h.w.forms@arcor.de>
but hacked to work for local folders and avoiding multiple calls to restore the selection.

diff --git a/mail/base/content/about3Pane.js b/mail/base/content/about3Pane.js
--- a/mail/base/content/about3Pane.js
+++ b/mail/base/content/about3Pane.js
@@ -2573,17 +2573,17 @@ var folderPane = {
 
       // At this point `dbViewWrapperListener.onCreatedView` gets called,
       // setting up gDBView and scrolling threadTree to the right end.
 
       threadPane.updateListRole(
         !gViewWrapper?.showThreaded && !gViewWrapper?.showGroupedBySort
       );
       threadPane.restoreSortIndicator();
-      threadPane.restoreSelection();
+      threadPane.requestRestoreThreadStateAndSelection();
       threadPaneHeader.onFolderSelected();
     }
 
     this._updateStatusQuota();
 
     window.dispatchEvent(
       new CustomEvent("folderURIChanged", { bubbles: true, detail: uri })
     );
@@ -4478,16 +4478,34 @@ var threadPane = {
     threadTree.addEventListener("collapsed", this);
   },
 
   uninit() {
     Services.prefs.removeObserver("mailnews.tags.", this);
     Services.obs.removeObserver(this, "addrbook-displayname-changed");
   },
 
+  // This function bundles all the calls to restoring the thread state
+  // or selection and runs those functions only once after 200 ms.
+  discardSelection: false,
+  requestInProgress: false,
+  requestRestoreThreadStateAndSelection(discard = true) {
+    this.discardSelection ||= discard;
+    if (this.requestInProgress) {
+      return;
+    }
+    this.requestInProgress = true;
+    setTimeout(() => {
+      this.restoreThreadState();
+      this.restoreSelection(this.discardSelection, undefined, true);
+      this.requestInProgress = false;
+      this.discardSelection = false;
+    }, 200);
+  },
+
   handleEvent(event) {
     switch (event.type) {
       case "contextmenu":
         this._onContextMenu(event);
         break;
       case "dblclick":
         this._onDoubleClick(event);
         break;
@@ -5032,27 +5050,29 @@ var threadPane = {
 
   /**
    * Restore the previously saved thread tree selection.
    *
    * @param {boolean} [discard=true] - If false, the selection data should be
    *   kept after restoring the selection, otherwise it is forgotten.
    * @param {boolean} [notify=true] - Whether a change in "select" event
    *   should be fired.
-   */
-  restoreSelection(discard = true, notify = true) {
+   * @param {boolean} [expand=false] - Try to expand threads containing selected
+   *   messages.
+   */
+  restoreSelection(discard = true, notify = true, expand = false) {
     if (!this._savedSelections.has(gFolder?.URI) || !threadTree.view) {
       return;
     }
 
     let { currentKey, selectedKeys } = this._savedSelections.get(gFolder.URI);
     let currentIndex = nsMsgViewIndex_None;
     let indices = new Set();
     for (let key of selectedKeys) {
-      let index = gDBView.findIndexFromKey(key, false);
+      let index = gDBView.findIndexFromKey(key, expand);
       if (index != nsMsgViewIndex_None) {
         indices.add(index);
         if (key == currentKey) {
           currentIndex = index;
         }
         continue;
       }
 
diff --git a/mail/base/content/mailCommon.js b/mail/base/content/mailCommon.js
--- a/mail/base/content/mailCommon.js
+++ b/mail/base/content/mailCommon.js
@@ -1004,25 +1004,25 @@ var dbViewWrapperListener = {
     }
   },
   onLoadingFolder(dbFolderInfo) {
     window.quickFilterBar?.onFolderChanged();
   },
   onDisplayingFolder() {},
   onLeavingFolder() {},
   onMessagesLoaded(all) {
-    // Try to restore what was selected. Keep the saved selection (if there is
-    // one) until we have all of the messages.
-    window.threadPane?.restoreSelection(all);
-
     if (all) {
       window.threadTree?.invalidate();
     }
     window.quickFilterBar?.onMessagesChanged();
 
+    // Try to restore what was selected. Keep the saved selection (if there is
+    // one) until we have all of the messages.
+    window.threadPane?.requestRestoreThreadStateAndSelection(all);
+
     let tabmail = top.document.getElementById("tabmail");
     let tab = tabmail?.currentTabInfo;
     if (tab) {
       tabmail.setTabThinking(
         tab,
         false
       );
     }
