# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1696535946 -7200
# Parent  6b7f1a470336a2adfd2d0c602988fc2053870a56
Bug 1807063 - Restore thread state when selecting folder.

Based on https://phabricator.services.mozilla.com/D190137 by welpy-cw <h.w.forms@arcor.de>
but hacked to work for local folders and avoiding multiple calls to restore the selection.

diff --git a/mail/base/content/about3Pane.js b/mail/base/content/about3Pane.js
--- a/mail/base/content/about3Pane.js
+++ b/mail/base/content/about3Pane.js
@@ -60,16 +60,19 @@ const messengerBundle = Services.strings
 
 const { getDefaultColumns } = ChromeUtils.importESModule(
   "chrome://messenger/content/thread-pane-columns.mjs"
 );
 
 // As defined in nsMsgDBView.h.
 const MSG_VIEW_FLAG_DUMMY = 0x20000000;
 
+var selectionLastRestored = Date.now();
+var threadStateLastRestored = Date.now();
+
 /**
  * The TreeListbox widget that displays folders.
  */
 var folderTree;
 /**
  * The TreeView widget that displays the message list.
  */
 var threadTree;
@@ -2573,17 +2576,19 @@ var folderPane = {
 
       // At this point `dbViewWrapperListener.onCreatedView` gets called,
       // setting up gDBView and scrolling threadTree to the right end.
 
       threadPane.updateListRole(
         !gViewWrapper?.showThreaded && !gViewWrapper?.showGroupedBySort
       );
       threadPane.restoreSortIndicator();
-      threadPane.restoreSelection();
+      threadPane.restoreThreadState();
+      // ... but expand threads containing selected messages
+      threadPane.restoreSelection(undefined, undefined, true);
       threadPaneHeader.onFolderSelected();
     }
 
     this._updateStatusQuota();
 
     window.dispatchEvent(
       new CustomEvent("folderURIChanged", { bubbles: true, detail: uri })
     );
@@ -5032,27 +5037,42 @@ var threadPane = {
 
   /**
    * Restore the previously saved thread tree selection.
    *
    * @param {boolean} [discard=true] - If false, the selection data should be
    *   kept after restoring the selection, otherwise it is forgotten.
    * @param {boolean} [notify=true] - Whether a change in "select" event
    *   should be fired.
-   */
-  restoreSelection(discard = true, notify = true) {
+   * @param {boolean} [expand=false] - Try to expand threads containing selected
+   *   messages.
+   */
+  restoreSelection(discard = true, notify = true, expand = false) {
+    // Here we go for our daily dose of madness.
+    // This function is called from `_onSelect()` above and it's called from
+    // `onMessagesLoaded()` in `dbViewWrapperListener.onMessagesLoaded()` in mailCommon.js.
+    // For every click on a folder, it's called at least twice, normally three times.
+    // We leave it to the Thunderbird developers to work out what's going on.
+    // Let's do a hack!
+    let now = Date.now();
+    if (now - selectionLastRestored < 100) {
+      // If we last restored this less than 100 milliseconds ago, return!
+      return;
+    }
+    selectionLastRestored = now;
+
     if (!this._savedSelections.has(gFolder?.URI) || !threadTree.view) {
       return;
     }
 
     let { currentKey, selectedKeys } = this._savedSelections.get(gFolder.URI);
     let currentIndex = nsMsgViewIndex_None;
     let indices = new Set();
     for (let key of selectedKeys) {
-      let index = gDBView.findIndexFromKey(key, false);
+      let index = gDBView.findIndexFromKey(key, expand);
       if (index != nsMsgViewIndex_None) {
         indices.add(index);
         if (key == currentKey) {
           currentIndex = index;
         }
         continue;
       }
 
@@ -5085,16 +5105,23 @@ var threadPane = {
       this._savedSelections.delete(gFolder.URI);
     }
   },
 
   /**
    * Restore the collapsed or expanded state of threads.
    */
   restoreThreadState() {
+    let now = Date.now();
+    if (now - threadStateLastRestored < 100) {
+      // If we last restored this less than 100 milliseconds ago, return!
+      return;
+    }
+    threadStateLastRestored = now;
+
     if (
       gViewWrapper._threadExpandAll &&
       !(gViewWrapper.dbView.viewFlags & Ci.nsMsgViewFlagsType.kExpandAll)
     ) {
       gViewWrapper.dbView.doCommand(Ci.nsMsgViewCommandType.expandAll);
     }
     if (
       !gViewWrapper._threadExpandAll &&
diff --git a/mail/base/content/mailCommon.js b/mail/base/content/mailCommon.js
--- a/mail/base/content/mailCommon.js
+++ b/mail/base/content/mailCommon.js
@@ -1006,17 +1006,18 @@ var dbViewWrapperListener = {
   onLoadingFolder(dbFolderInfo) {
     window.quickFilterBar?.onFolderChanged();
   },
   onDisplayingFolder() {},
   onLeavingFolder() {},
   onMessagesLoaded(all) {
     // Try to restore what was selected. Keep the saved selection (if there is
     // one) until we have all of the messages.
-    window.threadPane?.restoreSelection(all);
+    window.threadPane?.restoreThreadState();
+    window.threadPane?.restoreSelection(all, undefined, true);
 
     if (all) {
       window.threadTree?.invalidate();
     }
     window.quickFilterBar?.onMessagesChanged();
 
     let tabmail = top.document.getElementById("tabmail");
     let tab = tabmail?.currentTabInfo;
