# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Parent  14cc833da8664b57eef31d22a053eb3e93779b63
Backed out changeset d47d74d41259: Bug 1898084 - beta appeal.

diff --git a/mail/app/profile/all-thunderbird.js b/mail/app/profile/all-thunderbird.js
--- a/mail/app/profile/all-thunderbird.js
+++ b/mail/app/profile/all-thunderbird.js
@@ -1407,15 +1407,8 @@ pref("services.sync.engine.prefs", false
 pref("app.donation.eoy.version", 5);
 pref("app.donation.eoy.version.viewed", 0);
 pref("app.donation.eoy.url", "https://www.thunderbird.net/thunderbird/115.0/spring24/");
 
-// Beta appeal
-pref("app.beta_appeal.version", 3);
-pref("app.beta_appeal.version.viewed", 0);
-pref("app.beta_appeal.url", "https://www.thunderbird.net/thunderbird/115.0/beta-appeal/?locale=%LOCALE%&version=%VERSION%&channel=%CHANNEL%&os=%OS%&buildid=%APPBUILDID%");
-// June 21st expiry.
-pref("app.beta_appeal.expiry", 1718902800);
-
 // IMAP-JS disabled, Bug 1707547.
 pref("mailnews.imap.jsmodule", false);
 
 // Unified toolbar
diff --git a/mail/base/content/messenger.js b/mail/base/content/messenger.js
--- a/mail/base/content/messenger.js
+++ b/mail/base/content/messenger.js
@@ -414,13 +414,8 @@ var gMailInit = {
     if (this.shouldShowEOYDonationAppeal()) {
       // Add a timeout to prevent opening the browser immediately at startup.
       setTimeout(this.showEOYDonationAppeal, 2000);
     }
-
-    if (AppConstants.platform == "win" && this.shouldShowBetaAppeal()) {
-      // A little later than donation appeal.
-      setTimeout(() => this.showBetaAppeal(), 5000);
-    }
   },
 
   /**
    * Called by messenger.xhtml:onunload, the 3-pane window inside of tabs window.
@@ -481,76 +476,8 @@ var gMailInit = {
 
     let currentEOY = Services.prefs.getIntPref("app.donation.eoy.version", 1);
     Services.prefs.setIntPref("app.donation.eoy.version.viewed", currentEOY);
   },
-
-  /**
-   * Check if we can trigger the opening of the beta appeal page.
-   *
-   * @returns {boolean} - True if the beta appeal page should be opened.
-   */
-  shouldShowBetaAppeal() {
-    const currentBetaAppeal = Services.prefs.getIntPref(
-      "app.beta_appeal.version",
-      1
-    );
-    const viewedBetaAppeal = Services.prefs.getIntPref(
-      "app.beta_appeal.version.viewed",
-      0
-    );
-
-    // True if the user never saw the beta appeal, this is not a new
-    // profile, and we're not running tests.
-    const applicable =
-      viewedBetaAppeal < currentBetaAppeal &&
-      !specialTabs.shouldShowPolicyNotification() &&
-      !Cu.isInAutomation;
-    if (!applicable) {
-      return false;
-    }
-
-    // Check expiry date.
-    const now = Math.floor(Date.now() / 1000);
-    const expiry = Services.prefs.getIntPref("app.beta_appeal.expiry", now);
-
-    // Never shown, filter to 50% of users.
-    const factor = Math.random() * 100;
-    if (factor > 50 || now > expiry) {
-      this.markBetaAppealVersion();
-      return false;
-    }
-
-    return true;
-  },
-
-  /**
-   * Open the beta appeal in a new window to ensure the user can download it
-   * correctly.
-   */
-  showBetaAppeal() {
-    const url = Services.urlFormatter.formatURLPref("app.beta_appeal.url");
-    const protocolSvc = Cc[
-      "@mozilla.org/uriloader/external-protocol-service;1"
-    ].getService(Ci.nsIExternalProtocolService);
-    protocolSvc.loadURI(Services.io.newURI(url));
-
-    this.markBetaAppealVersion();
-  },
-
-  /**
-   * Mark the viewed version of the beta appeal as the latest version
-   * stored in the schema.
-   */
-  markBetaAppealVersion() {
-    const currentBetaAppeal = Services.prefs.getIntPref(
-      "app.beta_appeal.version",
-      1
-    );
-    Services.prefs.setIntPref(
-      "app.beta_appeal.version.viewed",
-      currentBetaAppeal
-    );
-  },
 };
 
 /**
  * Called at startup to verify if we have ny existing account, even if invalid,
