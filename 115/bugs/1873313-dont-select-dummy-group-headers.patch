# HG changeset patch
# User welpy-cw <h.w.forms@arcor.de>
# Date 1709828313 -3600
# Parent  a32613d2bc3feb3922aae0dad762514de744da74
Bug 1873313 - Prevent multiselecting and dragging expanded Grouped By headers.

diff --git a/mail/base/content/about3Pane.js b/mail/base/content/about3Pane.js
--- a/mail/base/content/about3Pane.js
+++ b/mail/base/content/about3Pane.js
@@ -4766,8 +4766,17 @@ var threadPane = {
               let uri = gDBView.getURIForViewIndex(threadTree.currentIndex);
               messagePane.displayMessage(uri);
             } catch (ex) {}
           } else {
+            if (gViewWrapper.showGroupedBySort) {
+              const savedIndex = threadTree.currentIndex;
+              threadTree.selectedIndices
+                .filter(i => gViewWrapper.isExpandedGroupedByHeaderAtIndex(i))
+                .forEach(i =>
+                  threadTree.toggleSelectionAtIndex(i, false, false)
+                );
+              threadTree.currentIndex = savedIndex;
+            }
             messagePane.displayMessages(gDBView.getSelectedMsgHdrs());
           }
           threadPaneHeader.updateSelectedCount();
           break;
@@ -4790,15 +4799,19 @@ var threadPane = {
    * Handle threadPane drag events.
    */
   _onDragStart(event) {
     let row = event.target.closest(`tr[is^="thread-"]`);
-    if (!row) {
+    if (!row || gViewWrapper.isExpandedGroupedByHeaderAtIndex(row.index)) {
       event.preventDefault();
       return;
     }
 
     let messageURIs = gDBView.getURIsForSelection();
     if (!threadTree.selectedIndices.includes(row.index)) {
+      if (gViewWrapper.isGroupedByHeaderAtIndex(row.index)) {
+        event.preventDefault();
+        return;
+      }
       messageURIs = [gDBView.getURIForViewIndex(row.index)];
     }
 
     let noSubjectString = messengerBundle.GetStringFromName(
diff --git a/mail/modules/DBViewWrapper.jsm b/mail/modules/DBViewWrapper.jsm
--- a/mail/modules/DBViewWrapper.jsm
+++ b/mail/modules/DBViewWrapper.jsm
@@ -2119,8 +2119,24 @@ DBViewWrapper.prototype = {
     );
   },
 
   /**
+   * Check if the row at the given index is the header (dummy row) of an
+   * expanded group, or if the row is anything else..
+   *
+   * @param {integer} aViewIndex - The index of a selected row.
+   * @returns {boolean}
+   */
+  isExpandedGroupedByHeaderAtIndex(aViewIndex) {
+    const flags = this.dbView.getFlagsAt(aViewIndex);
+    return (
+      !(flags & Ci.nsMsgMessageFlags.Elided) &&
+      flags & MSG_VIEW_FLAG_DUMMY &&
+      this.dbView.isContainer(aViewIndex)
+    );
+  },
+
+  /**
    * @returns true if the row at the given index is a grouped view dummy header
    *     row, false if anything else.
    */
   isGroupedByHeaderAtIndex(aViewIndex) {
