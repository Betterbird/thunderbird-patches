# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1699889199 -3600
# Parent  2afb6a13a02a2d0f5e3adaea5aa78f91b4f891fa
Bug 1861372 - Skip empty update manifests and improve logging.

diff --git a/toolkit/mozapps/extensions/internal/AddonUpdateChecker.sys.mjs b/toolkit/mozapps/extensions/internal/AddonUpdateChecker.sys.mjs
--- a/toolkit/mozapps/extensions/internal/AddonUpdateChecker.sys.mjs
+++ b/toolkit/mozapps/extensions/internal/AddonUpdateChecker.sys.mjs
@@ -255,17 +255,17 @@ function UpdateParser(aId, aUrl, aObserv
     this.request.channel.loadFlags |= Ci.nsIRequest.INHIBIT_CACHING;
     this.request.overrideMimeType("text/plain");
     this.request.timeout = TIMEOUT;
     this.request.addEventListener("load", () => this.onLoad());
     this.request.addEventListener("error", () => this.onError());
     this.request.addEventListener("timeout", () => this.onTimeout());
     this.request.send(null);
   } catch (e) {
-    logger.error("Failed to request update manifest", e);
+    logger.error("Failed to request update manifest for ${this.id}", e);
   }
 }
 
 UpdateParser.prototype = {
   id: null,
   observer: null,
   request: null,
   url: null,
@@ -304,31 +304,45 @@ UpdateParser.prototype = {
           channel.responseStatus +
           ": " +
           channel.responseStatusText
       );
       this.notifyError(lazy.AddonManager.ERROR_DOWNLOAD_ERROR);
       return;
     }
 
+    // If the add-on doesn't exist, the update server
+    // may return an empty response.
+    if (request.responseText.trim() == "{}") {
+      logger.warn(`Received empty update manifest for ${this.id}`);
+      this.notifyError(lazy.AddonManager.ERROR_DOWNLOAD_ERROR);
+      return;
+    }
+
     let results;
     try {
       let json = JSON.parse(request.responseText);
       results = parseJSONManifest(this.id, request, json);
     } catch (e) {
-      logger.warn("onUpdateCheckComplete failed to parse update manifest", e);
+      logger.warn(
+        `onUpdateCheckComplete failed to parse update manifest for ${this.id}`,
+        e
+      );
       this.notifyError(lazy.AddonManager.ERROR_PARSE_ERROR);
       return;
     }
 
     if ("onUpdateCheckComplete" in this.observer) {
       try {
         this.observer.onUpdateCheckComplete(results);
       } catch (e) {
-        logger.warn("onUpdateCheckComplete notification failed", e);
+        logger.warn(
+          `onUpdateCheckComplete notification failed for ${this.id}`,
+          e
+        );
       }
     } else {
       logger.warn(
         "onUpdateCheckComplete may not properly cancel",
         new Error("stack marker")
       );
     }
   },
