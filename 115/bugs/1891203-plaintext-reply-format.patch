# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1716068615 -7200
# Parent  9f49f642142200a3aab6b7908f54e464235ea740
Bug 1891203 - Fix formatting in plaintext reply (regressions from bug 1818683 or bug 1839226).

diff --git a/mailnews/compose/src/nsMsgComposeService.cpp b/mailnews/compose/src/nsMsgComposeService.cpp
--- a/mailnews/compose/src/nsMsgComposeService.cpp
+++ b/mailnews/compose/src/nsMsgComposeService.cpp
@@ -233,9 +233,9 @@ nsMsgComposeService::DetermineComposeHTM
   return NS_OK;
 }
 
 MOZ_CAN_RUN_SCRIPT_FOR_DEFINITION nsresult
-nsMsgComposeService::GetOrigWindowSelection(MSG_ComposeType type,
+nsMsgComposeService::GetOrigWindowSelection(bool isPre,
                                             mozilla::dom::Selection* selection,
                                             nsACString& aSelHTML) {
   nsresult rv;
 
@@ -302,11 +302,14 @@ nsMsgComposeService::GetOrigWindowSelect
   }
 
   nsAutoString selHTML;
   IgnoredErrorResult rv2;
-  selection->ToStringWithFormat(u"text/html"_ns,
-                                nsIDocumentEncoder::SkipInvisibleContent, 0,
-                                selHTML, rv2);
+  uint32_t flags = nsIDocumentEncoder::SkipInvisibleContent;
+  if (isPre) {
+    // No wrapping if this is a plaintext reply.
+    flags |= nsIDocumentEncoder::OutputRaw;
+  }
+  selection->ToStringWithFormat(u"text/html"_ns, flags, 0, selHTML, rv2);
   if (rv2.Failed()) {
     return NS_ERROR_FAILURE;
   }
 
@@ -395,22 +398,27 @@ nsMsgComposeService::OpenComposeWindow(
            type == nsIMsgCompType::ReplyToGroup ||
            type == nsIMsgCompType::ReplyToSenderAndGroup ||
            type == nsIMsgCompType::ReplyToList)) {
         nsAutoCString selHTML;
-        if (NS_SUCCEEDED(GetOrigWindowSelection(type, selection, selHTML))) {
-          nsCOMPtr<nsINode> node = selection->GetFocusNode();
-          NS_ENSURE_TRUE(node, NS_ERROR_FAILURE);
+        bool isPre = false;
+        nsCOMPtr<nsINode> node = selection->GetFocusNode();
+        if (node) {
           IgnoredErrorResult er;
-
           if ((node->LocalName().IsEmpty() ||
                node->LocalName().EqualsLiteral("pre")) &&
               node->OwnerDoc()->QuerySelector(
                   "body > div:first-of-type.moz-text-plain"_ns, er)) {
+            isPre = true;
+          }
+        }
+        if (NS_SUCCEEDED(GetOrigWindowSelection(isPre, selection, selHTML))) {
+          if (isPre) {
             // Treat the quote as <pre> for selections in moz-text-plain bodies.
             // If focusNode.localName isn't empty, we had e.g. body selected
             // and should not add <pre>.
-            pMsgComposeParams->SetHtmlToQuote("<pre>"_ns + selHTML +
-                                              "</pre>"_ns);
+            pMsgComposeParams->SetHtmlToQuote(
+                "<pre wrap class=\"moz-quote-pre\">"_ns + selHTML +
+                "</pre>"_ns);
           } else {
             pMsgComposeParams->SetHtmlToQuote(selHTML);
           }
         }
diff --git a/mailnews/compose/src/nsMsgComposeService.h b/mailnews/compose/src/nsMsgComposeService.h
--- a/mailnews/compose/src/nsMsgComposeService.h
+++ b/mailnews/compose/src/nsMsgComposeService.h
@@ -56,9 +56,9 @@ class nsMsgComposeService : public nsIMs
 
   // When doing a reply and the settings are enabled, get the HTML of the
   // selected text in the original message window so that it can be quoted
   // instead of the entire message.
-  nsresult GetOrigWindowSelection(MSG_ComposeType type,
+  nsresult GetOrigWindowSelection(bool isPre,
                                   mozilla::dom::Selection* selection,
                                   nsACString& aSelHTML);
 
 #ifdef MSGCOMP_TRACE_PERFORMANCE
