# HG changeset patch
# User Magnus Melin <mkmelin+mozilla@iki.fi>
# Date 1699008935 -3600
# Node ID 23ceca0d46dc0442e15185c662253b644757c9e1
# Parent  e942d504465fdb3345bd21df2aad6727dce99d62
Bug 1858733 - "Read Messages" button in account central should trigger getting mail. r=freaktechnik

Re-enable getting of new mail when this button is hit.
If the account is a feed or nntp account, get messages for the account and show first folder/group.
If there are no folders, show the subscription dialog instead.

Differential Revision: https://phabricator.services.mozilla.com/D191393

diff --git a/mailnews/base/content/msgAccountCentral.js b/mailnews/base/content/msgAccountCentral.js
--- a/mailnews/base/content/msgAccountCentral.js
+++ b/mailnews/base/content/msgAccountCentral.js
@@ -8,16 +8,18 @@ var { MailServices } = ChromeUtils.impor
 );
 var { MailUtils } = ChromeUtils.import("resource:///modules/MailUtils.jsm");
 var { UIDensity } = ChromeUtils.import("resource:///modules/UIDensity.jsm");
 var { UIFontSize } = ChromeUtils.import("resource:///modules/UIFontSize.jsm");
 
 var gSelectedServer = null;
 var gSelectedFolder = null;
 
+window.addEventListener("DOMContentLoaded", OnInit);
+
 /**
  * Set up the whole page depending on the selected folder/account.
  * The folder is passed in via the document URL.
  */
 function OnInit() {
   let el = document.getElementById("setupTitle");
 
   document.l10n.setAttributes(el, "setup-title", {
@@ -77,29 +79,22 @@ function updateAccountCentralUI() {
   }
 
   // Is this a RSS account?
   let isRssAccount = gSelectedServer?.type == "rss";
 
   // Is this an NNTP account?
   let isNNTPAccount = gSelectedServer?.type == "nntp";
 
-  // It can read messages (does it have an Inbox)?.
-  let canGetMessages = false;
-  try {
-    canGetMessages = protocolInfo && protocolInfo.canGetMessages;
-    document
-      .getElementById("readButton")
-      .toggleAttribute(
-        "hidden",
-        !canGetMessages || isRssAccount || isNNTPAccount
-      );
-  } catch (e) {
-    exceptions.push(e);
-  }
+  // Is this a Local Folders account?
+  let isLocalFoldersAccount = gSelectedServer?.type == "none";
+
+  document
+    .getElementById("readButton")
+    .toggleAttribute("hidden", !getReadMessagesFolder());
 
   // It can compose messages.
   let showComposeMsgLink = false;
   try {
     showComposeMsgLink = protocolInfo && protocolInfo.showComposeMsgLink;
     document
       .getElementById("composeButton")
       .toggleAttribute("hidden", !showComposeMsgLink);
@@ -137,40 +132,55 @@ function updateAccountCentralUI() {
       .toggleAttribute("hidden", !canHaveFilters);
   } catch (e) {
     exceptions.push(e);
   }
 
   // It can have End-to-end Encryption.
   document
     .getElementById("e2eButton")
-    .toggleAttribute("hidden", !canGetMessages || isRssAccount);
+    .toggleAttribute(
+      "hidden",
+      isNNTPAccount || isRssAccount || isLocalFoldersAccount
+    );
 
   // Check if we collected any exception.
   while (exceptions.length) {
     console.error(
       "Error in setting AccountCentral Items: " + exceptions.pop() + "\n"
     );
   }
 }
 
 /**
- * Open the Inbox for selected server. If needed, open the twisty and
- * select the Inbox menuitem.
+ * For the selected server, check for new messges and display first
+ * suitable folder (genrally Inbox) for reading.
  */
 function readMessages() {
-  if (!gSelectedServer) {
-    return;
-  }
+  let folder = getReadMessagesFolder();
+  top.MsgGetMessage([folder]);
+  parent.displayFolder(folder);
+}
 
-  try {
-    parent.displayFolder(MailUtils.getInboxFolder(gSelectedServer));
-  } catch (ex) {
-    console.error("Error opening Inbox for server: " + ex + "\n");
+/**
+ * Find the folder Read Messages should use.
+ *
+ * @returns {?nsIMsgFolder} folder to use, if we have a suitable one.
+ */
+function getReadMessagesFolder() {
+  let folder = MailUtils.getInboxFolder(gSelectedServer);
+  if (folder) {
+    return folder;
   }
+  // For feeds and nntp, show the first non-trash folder. Don't use Outbox.
+  return gSelectedServer.rootFolder.descendants.find(
+    f =>
+      !(f.flags & Ci.nsMsgFolderFlags.Trash) &&
+      !(f.flags & Ci.nsMsgFolderFlags.Queue)
+  );
 }
 
 /**
  * Open the AccountManager to view the settings for a given account.
  *
  * @param {string} selectPage - The xhtml file name for the viewing page,
  *   null for the account main page, other pages are 'am-server.xhtml',
  *   'am-copies.xhtml', 'am-offline.xhtml', 'am-addressing.xhtml',
diff --git a/mailnews/base/content/msgAccountCentral.xhtml b/mailnews/base/content/msgAccountCentral.xhtml
--- a/mailnews/base/content/msgAccountCentral.xhtml
+++ b/mailnews/base/content/msgAccountCentral.xhtml
@@ -1,31 +1,36 @@
 <?xml version="1.0"?>
 <!-- This Source Code Form is subject to the terms of the Mozilla Public
    - License, v. 2.0. If a copy of the MPL was not distributed with this
    - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
 
 <?xml-stylesheet href="chrome://messenger/skin/accountCentral.css" type="text/css"?>
 
 <!DOCTYPE html>
-
 <html
   xmlns="http://www.w3.org/1999/xhtml"
   windowtype="mail:accountcentral"
   lightweightthemes="true"
 >
   <head>
     <link rel="localization" href="branding/brand.ftl" />
     <link rel="localization" href="messenger/accountCentral.ftl" />
 
-    <script src="chrome://communicator/content/utilityOverlay.js"></script>
-    <script src="chrome://messenger/content/msgAccountCentral.js"></script>
+    <script
+      defer="defer"
+      src="chrome://communicator/content/utilityOverlay.js"
+    ></script>
+    <script
+      defer="defer"
+      src="chrome://messenger/content/msgAccountCentral.js"
+    ></script>
   </head>
 
-  <body onload="OnInit();">
+  <body>
     <main id="accountCentral">
       <header
         id="headerFirstRun"
         class="account-central-header"
         hidden="hidden"
       >
         <img
           id="brandLogo"
@@ -71,40 +76,39 @@
             onclick="viewSettings(null);"
           ></button>
         </aside>
       </header>
 
       <section id="accountFeaturesSection" class="account-central-section">
         <aside class="row-container account-options">
           <button
+            id="readButton"
+            type="button"
+            data-l10n-id="read"
+            class="btn-link btn-inline"
+            onclick="readMessages();"
+          ></button>
+          <button
             id="nntpSubscriptionButton"
             type="button"
             data-l10n-id="nntp-subscription"
             class="btn-link btn-inline"
             onclick="subscribe();"
             hidden="hidden"
           ></button>
           <button
             id="rssSubscriptionButton"
             type="button"
             data-l10n-id="rss-subscription"
             class="btn-link btn-inline"
             onclick="subscribe();"
             hidden="hidden"
           ></button>
           <button
-            id="readButton"
-            type="button"
-            data-l10n-id="read"
-            class="btn-link btn-inline"
-            onclick="readMessages();"
-            hidden="hidden"
-          ></button>
-          <button
             id="composeButton"
             type="button"
             data-l10n-id="compose"
             class="btn-link btn-inline"
             onclick="window.browsingContext.topChromeWindow.MsgNewMessage(event);"
             hidden="hidden"
           ></button>
           <button
