# HG changeset patch
# User welpy-cw <h.w.forms@arcor.de>
# Date 1714224013 -7200
# Parent  d5c3a2cb4ed730b2ed37de8544de5cbf3e66e289
Bug 1893793 - Fix setting view flags for cross-folder search views.

diff --git a/mail/modules/DBViewWrapper.jsm b/mail/modules/DBViewWrapper.jsm
--- a/mail/modules/DBViewWrapper.jsm
+++ b/mail/modules/DBViewWrapper.jsm
@@ -1416,9 +1416,8 @@ DBViewWrapper.prototype = {
    *  currently don't have a view, we save the view flags for later usage when
    *  the view gets (re)built.  If we have a view, depending on what's happening
    *  we may re-create the view or just set the bits.  The rules/reasons are:
    * - XFVF views can handle the flag changes, just set the flags.
-   * - XFVF threaded/unthreaded change must re-sort, the backend forgot.
    * - Single-folder virtual folders (quicksearch) can handle viewFlag changes,
    *    to/from grouped included, so set it.
    * - Single-folder threaded/unthreaded can handle a change to/from unthreaded/
    *    threaded, so set it.
@@ -1443,15 +1442,8 @@ DBViewWrapper.prototype = {
     let oldFlags = this.dbView.viewFlags;
     let changedFlags = oldFlags ^ aViewFlags;
 
     if (this.isVirtual) {
-      if (
-        this.isMultiFolder &&
-        changedFlags & Ci.nsMsgViewFlagsType.kThreadedDisplay &&
-        !(changedFlags & Ci.nsMsgViewFlagsType.kGroupBySort)
-      ) {
-        reSort = true;
-      }
       if (this.isSingleFolder) {
         // ugh, and the single folder case needs us to re-apply his sort...
         reSort = true;
       }
diff --git a/mailnews/base/src/nsMsgXFVirtualFolderDBView.cpp b/mailnews/base/src/nsMsgXFVirtualFolderDBView.cpp
--- a/mailnews/base/src/nsMsgXFVirtualFolderDBView.cpp
+++ b/mailnews/base/src/nsMsgXFVirtualFolderDBView.cpp
@@ -494,13 +494,17 @@ nsMsgXFVirtualFolderDBView::GetMsgFolder
 NS_IMETHODIMP
 nsMsgXFVirtualFolderDBView::SetViewFlags(nsMsgViewFlagsTypeValue aViewFlags) {
   nsresult rv = NS_OK;
   // If the grouping/threading has changed, rebuild the view.
-  if ((m_viewFlags & (nsMsgViewFlagsType::kGroupBySort |
-                      nsMsgViewFlagsType::kThreadedDisplay)) !=
-      (aViewFlags & (nsMsgViewFlagsType::kGroupBySort |
-                     nsMsgViewFlagsType::kThreadedDisplay))) {
+  constexpr nsMsgViewFlagsTypeValue groupedOrThreaded =
+      (nsMsgViewFlagsType::kGroupBySort | nsMsgViewFlagsType::kThreadedDisplay);
+  if ((m_viewFlags & groupedOrThreaded) != (aViewFlags & groupedOrThreaded)) {
     rv = RebuildView(aViewFlags);
+    // Changing back to unthreaded needs resorting.
+    if (!(aViewFlags & groupedOrThreaded)) {
+      m_sortValid = false;
+      Sort(m_sortType, m_sortOrder);
+    }
   }
 
   nsMsgDBView::SetViewFlags(aViewFlags);
   return rv;
