# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1726699350 -7200
# Parent  0fd587d0978926a3d31d767d8a96ffdd0b2e1074
Bug 1870376/1903090 - Backport some hunks to get 'hasNew' property.

diff --git a/mailnews/base/src/nsMsgDBView.cpp b/mailnews/base/src/nsMsgDBView.cpp
--- a/mailnews/base/src/nsMsgDBView.cpp
+++ b/mailnews/base/src/nsMsgDBView.cpp
@@ -1232,8 +1232,17 @@ nsMsgDBView::GetRowProperties(int32_t in
     uint32_t numUnreadChildren;
     thread->GetNumUnreadChildren(&numUnreadChildren);
     if (numUnreadChildren > 0) properties.AppendLiteral(" hasUnread");
 
+    uint32_t numNewChildren;
+    thread->GetNumNewChildren(&numNewChildren);
+    // If only one message is new and is the parent message, don't mark the
+    // child thread with hasNew.
+    if (numNewChildren == 1 && flags & nsMsgMessageFlags::New) {
+      numNewChildren--;
+    }
+    if (numNewChildren > 0) properties.AppendLiteral(" hasNew");
+
     // For threaded display add the ignore/watch properties to the
     // thread top row. For non-threaded add it to all rows.
     if (!(m_viewFlags & nsMsgViewFlagsType::kThreadedDisplay) ||
         ((m_viewFlags & nsMsgViewFlagsType::kThreadedDisplay) &&
@@ -1407,9 +1416,9 @@ nsMsgDBView::GetCellProperties(int32_t a
   if (NS_SUCCEEDED(rv) && thread) {
     uint32_t numUnreadChildren;
     thread->GetNumUnreadChildren(&numUnreadChildren);
     if (numUnreadChildren > 0) properties.AppendLiteral(" hasUnread");
-
+    
     // For threaded display add the ignore/watch properties to the
     // thread top row. For non-threaded add it to all rows.
     if (!(m_viewFlags & nsMsgViewFlagsType::kThreadedDisplay) ||
         ((m_viewFlags & nsMsgViewFlagsType::kThreadedDisplay) &&
diff --git a/mailnews/base/src/nsMsgGroupView.cpp b/mailnews/base/src/nsMsgGroupView.cpp
--- a/mailnews/base/src/nsMsgGroupView.cpp
+++ b/mailnews/base/src/nsMsgGroupView.cpp
@@ -738,8 +738,12 @@ nsMsgGroupView::GetCellProperties(int32_
     uint32_t numUnrMsg = 0;
     groupThread->GetNumUnreadChildren(&numUnrMsg);
     if (numUnrMsg > 0) aProperties.AppendLiteral(" hasUnread");
 
+    uint32_t numNewMsg = 0;
+    groupThread->GetNumNewChildren(&numNewMsg);
+    if (numNewMsg > 0) aProperties.AppendLiteral(" hasNew");
+
     return NS_OK;
   }
 
   return nsMsgDBView::GetCellProperties(aRow, aCol, aProperties);
