# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1709828439 -3600
# Parent  be91a83585e1a86270e9dc7e8304eac449f301b2
Bug 1775376 - Delay setting of dictionaries in InitEditor() until initial spell check is done.

diff --git a/mail/components/compose/content/MsgComposeCommands.js b/mail/components/compose/content/MsgComposeCommands.js
--- a/mail/components/compose/content/MsgComposeCommands.js
+++ b/mail/components/compose/content/MsgComposeCommands.js
@@ -6037,8 +6037,9 @@ function ComposeUnload() {
 
   // In some tests, the window is closed so quickly that the observer
   // hasn't fired and removed itself yet, so let's remove it here.
   spellCheckReadyObserver.removeObserver();
+  checkerReadyObserver.removeObserver();
   // Stop spell checker so personal dictionary is saved.
   enableInlineSpellCheck(false);
 
   EditorCleanup();
@@ -11705,9 +11706,22 @@ function InitEditor() {
       .map(lang => lang.trim());
   }
 
   let dictionaries = getValidSpellcheckerDictionaries(draftLanguages);
-  ComposeChangeLanguage(dictionaries).catch(console.error);
+  // We can only set new dictionaries after the initial spell check
+  // triggered by switching on the inline spell checker is finished.
+  if (!gSpellCheckingEnabled) {
+    ComposeChangeLanguage(dictionaries).catch(console.error);
+  } else {
+    (function setDicts() {
+      if (checkerReadyObserver.isReady()) {
+        checkerReadyObserver.removeObserver();
+        ComposeChangeLanguage(dictionaries).catch(console.error);
+      } else {
+        setTimeout(setDicts, 100);
+      }
+    })();
+  }
 }
 
 function setFontSize(event) {
   // Increase Font Menuitem and Decrease Font Menuitem from the main menu
@@ -11728,10 +11742,48 @@ function setParagraphState(event) {
 function updateDocumentLanguage(e) {
   ComposeChangeLanguage(e.detail.dictionaries).catch(console.error);
 }
 
+var checkerReadyObserver = {
+  _topic: "inlineSpellChecker-spellCheck-ended",
+  _isReady: false,
+
+  observe(aSubject, aTopic, aData) {
+    if (aTopic != this._topic) {
+      return;
+    }
+    this._isReady = true;
+  },
+
+  _isAdded: false,
+
+  addObserver() {
+    if (this._isAdded) {
+      return;
+    }
+
+    Services.obs.addObserver(this, this._topic);
+    this._isAdded = true;
+  },
+
+  removeObserver() {
+    if (!this._isAdded) {
+      return;
+    }
+
+    Services.obs.removeObserver(this, this._topic);
+    this._isAdded = false;
+    this._isReady = false;
+  },
+
+  isReady() {
+    return this._isReady;
+  },
+};
+
 function toggleSpellCheckingEnabled() {
   enableInlineSpellCheck(!gSpellCheckingEnabled);
+  checkerReadyObserver.removeObserver();
 }
 
 // This function is called either at startup (see InitEditor above), or when
 // the user clicks on one of the two menu items that allow them to toggle the
@@ -11744,8 +11796,12 @@ function enableInlineSpellCheck(aEnableI
   if (gSpellCheckingEnabled != aEnableInlineSpellCheck) {
     // If state of spellchecker is about to change, clear any pending observer.
     spellCheckReadyObserver.removeObserver();
   }
+  checkerReadyObserver.removeObserver();
+  if (aEnableInlineSpellCheck) {
+    checkerReadyObserver.addObserver();
+  }
 
   gSpellCheckingEnabled = checker.enableRealTimeSpell = aEnableInlineSpellCheck;
   document
     .getElementById("msgSubject")
