# HG changeset patch
# User Magnus Melin <mkmelin+mozilla@iki.fi>
# Date 1696609294 0
# Node ID a80df7f75566778ded497ba28217006ea499915c
# Parent  b2d8eaf576f55a0f19f264696eea4ee06b1d3335
Bug 1857196 - CalIcsParser error with empty ATTENDEE:. r=leftmostcat

Differential Revision: https://phabricator.services.mozilla.com/D190271

diff --git a/calendar/base/src/calItemBase.js b/calendar/base/src/calItemBase.js
--- a/calendar/base/src/calItemBase.js
+++ b/calendar/base/src/calItemBase.js
@@ -563,18 +563,17 @@ calItemBase.prototype = {
       if (this.mIsProxy) {
         return this.mParentItem.getParameterNames(aPropName);
       }
       throw new Error("Property " + aPropName + " not set");
     }
     return Object.keys(this.mPropertyParams[propName]);
   },
 
-  // void getAttendees(out PRUint32 count,
-  //                   [array,size_is(count),retval] out calIAttendee attendees);
+  // Array<calIAttendee> getAttendees();
   getAttendees() {
     if (!this.mAttendees && this.mIsProxy) {
       this.mAttendees = this.mParentItem.getAttendees();
     }
     if (this.mAttendees) {
       return Array.from(this.mAttendees); // clone
     }
     return [];
@@ -617,16 +616,20 @@ calItemBase.prototype = {
   // void removeAllAttendees();
   removeAllAttendees() {
     this.modify();
     this.mAttendees = [];
   },
 
   // void addAttendee(in calIAttendee attendee);
   addAttendee(attendee) {
+    if (!attendee.id) {
+      cal.LOG("Tried to add invalid attendee");
+      return;
+    }
     // the duplicate check is migration code for bug 1204255
     let exists = this.getAttendeeById(attendee.id);
     if (exists) {
       cal.LOG(
         "Ignoring attendee duplicate for item " + this.id + " (" + this.title + "): " + exists.id
       );
       if (
         exists.participationStatus == "NEEDS-ACTION" ||
