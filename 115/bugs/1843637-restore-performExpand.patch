# HG changeset patch
# User Gene Smith <gds@chartertn.net>
# Date 1690181371 -7200
# Parent  222a10a1378b881514c508757f676a163d22527b
Bug 1843637 - Restore calling performExpand() when expanding node in folder tree. Needed for IMAP.

diff --git a/mail/base/content/about3Pane.js b/mail/base/content/about3Pane.js
--- a/mail/base/content/about3Pane.js
+++ b/mail/base/content/about3Pane.js
@@ -770,16 +770,26 @@ var folderPane = {
           );
           return;
         }
 
         let parentRow = folderPane.getRowForFolder(parentFolder, this.name);
         if (!parentRow) {
           console.error("no parentRow for ", parentFolder.URI, childFolder.URI);
         }
+        // To auto-expand non-root imap folders, imap URL "discoverchildren" is
+        // triggered -- but actually only occurs if server settings configured
+        // to ignore subscriptions. (This also occurs in _onExpanded() for
+        // manual folder expansion.)
+        if (parentFolder.server.type == "imap") {
+          if (!parentFolder.isServer) {
+            let imapFolder = parentFolder.QueryInterface(Ci.nsIMsgImapMailFolder);
+            imapFolder.performExpand(top.msgWindow);  // trigger URL
+          }
+        }
         folderTree.expandRow(parentRow);
         let childRow = folderPane._createFolderRow(this.name, childFolder);
         folderPane._addSubFolders(childFolder, childRow, "all");
         parentRow.insertChildInOrder(childRow);
       },
 
       removeFolder(parentFolder, childFolder) {
         folderPane.getRowForFolder(childFolder, this.name)?.remove();
@@ -2570,16 +2580,28 @@ var folderPane = {
 
   _onExpanded({ target }) {
     if (target.uri) {
       let mode = target.closest("[data-mode]").dataset.mode;
       FolderTreeProperties.setIsExpanded(target.uri, mode, true);
     }
     target.updateUnreadMessageCount();
     target.updateTotalMessageCount();
+
+    // Get server type. IMAP is the only server type that does folder discovery.
+    let folder = MailServices.folderLookup.getFolderForURL(target.uri);
+    if (folder.server.type == "imap") {
+      // Trigger folder discovery.
+      if (folder.isServer) {
+        folder.server.performExpand(top.msgWindow);
+      } else {
+        let imapFolder = folder.QueryInterface(Ci.nsIMsgImapMailFolder);
+        imapFolder.performExpand(top.msgWindow);
+      }
+    }
   },
 
   _onDragStart(event) {
     let row = event.target.closest(`li[is="folder-tree-row"]`);
     if (!row) {
       event.preventDefault();
       return;
     }
