# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1705791719 -3600
# Parent  5293c7b279807f8f7f8d9a7ec7b25552c66e62be
NNN7 - Fix wrong folder selection at startup.

When restoring the first tab, sometimes the top-most folder gets selected before
later the right folder is selected. Putting the "select" event dispatch on a timeout
seems to fix this issue.

diff --git a/mail/base/content/about3Pane.js b/mail/base/content/about3Pane.js
--- a/mail/base/content/about3Pane.js
+++ b/mail/base/content/about3Pane.js
@@ -91,16 +91,18 @@ var messageBrowser;
  */
 var multiMessageBrowser;
 /**
  * A XUL browser that displays Account Central when an account's root folder
  * is selected.
  */
 var accountCentralBrowser;
 
+var isFirstSelectEvent = false;
+
 window.addEventListener("DOMContentLoaded", async event => {
   if (event.target != document) {
     return;
   }
 
   UIDensity.registerWindow(window);
   UIFontSize.registerWindow(window);
 
@@ -124,16 +126,44 @@ window.addEventListener("DOMContentLoade
     console.warn(`Couldn't restore state: ${e.message}`, e);
   }
   delete window.openingState;
 
   // Finally, add the folderTree listener and trigger it. Earlier events
   // (triggered by `folderPane.init` and possibly `restoreState`) are ignored
   // to avoid unnecessarily loading the thread tree or Account Central.
   folderTree.addEventListener("select", folderPane);
+
+  // In some cases `folderTree.selectedIndex` isn't set correctly when the event is
+  // handled, so the wrong folder is selected at first. We've seen
+  // index 0, so in a unified view, that will be the unified inbox as the top-most row.
+  // If that's grouped-by-sort, then long delays are expected.
+  // Fixing the long delays in https://bugzilla.mozilla.org/show_bug.cgi?id=1875577
+  // will paper over the issue some more.
+  // Sadly folderPane.init() initializes the index to 0, so if it's 0 here after
+  // `restoreState()`, either 0 was indeed the desired the selection or it's not
+  // correctly initialized yet.
+  let count = 0;
+  let timeWaited = 0;
+  while (count++ < 5 && folderTree.selectedIndex === 0) {
+    timeWaited += 100;
+    await new Promise(resolve => setTimeout(resolve, 100));
+  }
+  if (timeWaited) {
+    if (folderTree.selectedIndex === 0) {
+      console.info(
+        `3pane init: Waited ${timeWaited} ms and index of selected folder remained 0`
+      );
+      isFirstSelectEvent = true;
+    } else {
+      console.info(
+        `3pane init: Waited ${timeWaited} ms and index of selected folder is ${folderTree.selectedIndex}`
+      );
+    }
+  }
   folderTree.dispatchEvent(new CustomEvent("select"));
 
   // Attach the progress listener for the webBrowser. For the messageBrowser this
   // happens in the "aboutMessageLoaded" event from aboutMessage.js.
   // For the webBrowser, we can do it here directly.
   top.contentProgress.addProgressListenerToBrowser(webBrowser);
 
   mailContextMenu.init();
@@ -2659,16 +2689,23 @@ var folderPane = {
 
     let uri = folderTree.rows[folderTree.selectedIndex]?.uri;
     if (!uri) {
       gFolder = null;
       return;
     }
     gFolder = MailServices.folderLookup.getFolderForURL(uri);
 
+    if (isFirstSelectEvent) {
+      isFirstSelectEvent = false;
+      if (folderTree.selectedIndex === 0) {
+        console.info(`Selected index 0 in folder pane for folder ${uri}`);
+      }
+    }
+
     // Bail out if this is synthetic view, such as a gloda search.
     if (isSynthetic) {
       return;
     }
 
     document.head.querySelector(`link[rel="icon"]`).href =
       FolderUtils.getFolderIcon(gFolder);
 
