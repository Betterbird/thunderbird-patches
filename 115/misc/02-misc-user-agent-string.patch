# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1682887334 -7200
# Parent  68663d55ae011691c32fdadbe418f9dcbff52911
Misc: Change user agent string.

diff --git a/mailnews/compose/src/MimeMessage.jsm b/mailnews/compose/src/MimeMessage.jsm
--- a/mailnews/compose/src/MimeMessage.jsm
+++ b/mailnews/compose/src/MimeMessage.jsm
@@ -168,21 +168,23 @@ class MimeMessage {
       if (Services.prefs.getBoolPref("mailnews.headers.useMinimalUserAgent")) {
         headers.set(
           "user-agent",
           Services.strings
             .createBundle("chrome://branding/locale/brand.properties")
             .GetStringFromName("brandFullName")
         );
       } else {
+        // Since we didn't change MOZ_APP_BASENAME, we need to hack the
+        // user agent here. Not so nice if they used an override.
         headers.set(
           "user-agent",
           Cc["@mozilla.org/network/protocol;1?name=http"].getService(
             Ci.nsIHttpProtocolHandler
-          ).userAgent
+          ).userAgent.replace("Thunderbird", "Betterbird")
         );
       }
     }
 
     for (let headerName of [...this._compFields.headerNames]) {
       let headerContent = this._compFields.getRawHeader(headerName);
       if (headerContent) {
         headers.set(headerName, headerContent);
diff --git a/mailnews/compose/src/nsMsgCompUtils.cpp b/mailnews/compose/src/nsMsgCompUtils.cpp
--- a/mailnews/compose/src/nsMsgCompUtils.cpp
+++ b/mailnews/compose/src/nsMsgCompUtils.cpp
@@ -320,19 +320,24 @@ nsresult mime_generate_headers(nsIMsgCom
     } else {
       nsCOMPtr<nsIHttpProtocolHandler> pHTTPHandler =
           do_GetService(NS_NETWORK_PROTOCOL_CONTRACTID_PREFIX "http", &rv);
       if (NS_SUCCEEDED(rv) && pHTTPHandler) {
         nsAutoCString userAgentString;
         // Ignore error since we're testing the return value.
         mozilla::Unused << pHTTPHandler->GetUserAgent(userAgentString);
 
-        if (!userAgentString.IsEmpty())
+        if (!userAgentString.IsEmpty()) {
+          // Since we didn't change MOZ_APP_BASENAME, we need to hack the user agent
+          // here. Not so nice if they used an override.
+          int32_t ind = userAgentString.Find("Thunderbird"_ns);
+          if (ind != kNotFound) userAgentString.Replace(ind, 11, "Betterbird"_ns);
           finalHeaders->SetUnstructuredHeader(
               "User-Agent", NS_ConvertUTF8toUTF16(userAgentString));
+        }
       }
     }
   }
 
   finalHeaders->SetUnstructuredHeader("MIME-Version", u"1.0"_ns);
 
   nsAutoCString newsgroups;
   finalHeaders->GetRawHeader("Newsgroups", newsgroups);
diff --git a/mailnews/extensions/mdn/nsMsgMdnGenerator.cpp b/mailnews/extensions/mdn/nsMsgMdnGenerator.cpp
--- a/mailnews/extensions/mdn/nsMsgMdnGenerator.cpp
+++ b/mailnews/extensions/mdn/nsMsgMdnGenerator.cpp
@@ -620,16 +620,21 @@ nsresult nsMsgMdnGenerator::CreateSecond
           }
         }
       } else {
         nsAutoCString userAgentString;
         // Ignore error since we're testing the return value.
         mozilla::Unused << pHTTPHandler->GetUserAgent(userAgentString);
 
         if (!userAgentString.IsEmpty()) {
+          // Since we didn't change MOZ_APP_BASENAME, we need to hack the user agent
+          // here. Not so nice if they used an override.
+          int32_t ind = userAgentString.Find("Thunderbird"_ns);
+          if (ind != kNotFound) userAgentString.Replace(ind, 11, "Betterbird"_ns);
+
           // Prepend the product name with the dns name according to RFC 3798.
           char hostName[256];
           PR_GetSystemInfo(PR_SI_HOSTNAME_UNTRUNCATED, hostName,
                            sizeof hostName);
           if ((hostName[0] != '\0') && (strchr(hostName, '.') != NULL)) {
             userAgentString.InsertLiteral("; ", 0);
             userAgentString.Insert(nsDependentCString(hostName), 0);
           }
