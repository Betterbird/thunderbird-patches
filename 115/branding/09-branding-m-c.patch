# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1682545567 -7200
#      Sat Aug 21 11:36:53 2021 +0200
# Node ID e97d4217f08b6c0464e65013aa1f1b1575f298ab
# Parent  08375cfad18de12c539d2ce70deb378f0c132433
Branding 9: Hack appname some more.

diff --git a/toolkit/xre/nsAppRunner.cpp b/toolkit/xre/nsAppRunner.cpp
--- a/toolkit/xre/nsAppRunner.cpp
+++ b/toolkit/xre/nsAppRunner.cpp
@@ -2089,17 +2089,17 @@ static void DumpHelp() {
       "X11 options\n"
       "  --display=DISPLAY  X display to use\n"
       "  --sync             Make X calls synchronous\n");
 #endif
 #ifdef XP_UNIX
   printf(
       "  --g-fatal-warnings Make all warnings fatal\n"
       "\n%s options\n",
-      (const char*)gAppData->name);
+      (const char*)"Betterbird");
 #endif
 
   printf(
       "  -h or --help       Print this message.\n"
       "  -v or --version    Print %s version.\n"
       "  --full-version     Print %s version, build and platform build ids.\n"
       "  -P <profile>       Start with <profile>.\n"
       "  --profile <path>   Start with profile at <path>.\n"
@@ -2120,54 +2120,54 @@ static void DumpHelp() {
       "                     overrides it.\n"
       "  --MOZ_LOG_FILE=<file> Treated as MOZ_LOG_FILE=<file> environment "
       "variable,\n"
       "                     overrides it. If MOZ_LOG_FILE is not specified as "
       "an\n"
       "                     argument or as an environment variable, logging "
       "will be\n"
       "                     written to stdout.\n",
-      (const char*)gAppData->name, (const char*)gAppData->name);
+      (const char*)"Betterbird", (const char*)"Betterbird");
 
 #if defined(XP_WIN)
   printf("  --console          Start %s with a debugging console.\n",
-         (const char*)gAppData->name);
+         (const char*)"Betterbird");
 #endif
 
 #if defined(XP_WIN) || defined(MOZ_WIDGET_GTK) || defined(XP_MACOSX)
   printf("  --headless         Run without a GUI.\n");
 #endif
 
   // this works, but only after the components have registered.  so if you drop
   // in a new command line handler, --help won't not until the second run. out
   // of the bug, because we ship a component.reg file, it works correctly.
   DumpArbitraryHelp();
 }
 
 static inline void DumpVersion() {
   if (gAppData->vendor && *gAppData->vendor) {
     printf("%s ", (const char*)gAppData->vendor);
   }
-  printf("%s ", (const char*)gAppData->name);
+  printf("%s ", (const char*)"Betterbird");
 
   // Use the displayed version
   // For example, for beta, we would display 42.0b2 instead of 42.0
   printf("%s", MOZ_STRINGIFY(MOZ_APP_VERSION_DISPLAY));
 
   if (gAppData->copyright && *gAppData->copyright) {
     printf(", %s", (const char*)gAppData->copyright);
   }
   printf("\n");
 }
 
 static inline void DumpFullVersion() {
   if (gAppData->vendor && *gAppData->vendor) {
     printf("%s ", (const char*)gAppData->vendor);
   }
-  printf("%s ", (const char*)gAppData->name);
+  printf("%s ", (const char*)"Betterbird");
 
   // Use the displayed version
   // For example, for beta, we would display 42.0b2 instead of 42.0
   printf("%s ", MOZ_STRINGIFY(MOZ_APP_VERSION_DISPLAY));
 
   printf("%s ", (const char*)gAppData->buildID);
   printf("%s ", (const char*)PlatformBuildID());
   if (gAppData->copyright && *gAppData->copyright) {
@@ -2651,17 +2651,17 @@ static nsresult ProfileMissingDialog(nsI
     nsCOMPtr<nsIStringBundleService> sbs =
         mozilla::components::StringBundle::Service();
     NS_ENSURE_TRUE(sbs, NS_ERROR_FAILURE);
 
     nsCOMPtr<nsIStringBundle> sb;
     sbs->CreateBundle(kProfileProperties, getter_AddRefs(sb));
     NS_ENSURE_TRUE_LOG(sbs, NS_ERROR_FAILURE);
 
-    NS_ConvertUTF8toUTF16 appName(gAppData->name);
+    NS_ConvertUTF8toUTF16 appName("Betterbird");
     AutoTArray<nsString, 2> params = {appName, appName};
 
     // profileMissing
     nsAutoString missingMessage;
     rv = sb->FormatStringFromName("profileMissing", params, missingMessage);
     NS_ENSURE_SUCCESS(rv, NS_ERROR_ABORT);
 
     nsAutoString missingTitle;
@@ -2706,17 +2706,17 @@ static ReturnAbortOnError ProfileLockedD
     nsCOMPtr<nsIStringBundleService> sbs =
         mozilla::components::StringBundle::Service();
     NS_ENSURE_TRUE(sbs, NS_ERROR_FAILURE);
 
     nsCOMPtr<nsIStringBundle> sb;
     sbs->CreateBundle(kProfileProperties, getter_AddRefs(sb));
     NS_ENSURE_TRUE_LOG(sbs, NS_ERROR_FAILURE);
 
-    NS_ConvertUTF8toUTF16 appName(gAppData->name);
+    NS_ConvertUTF8toUTF16 appName("Betterbird");
     AutoTArray<nsString, 3> params = {appName, appName, appName};
 
     nsAutoString killMessage;
 #ifndef XP_MACOSX
     rv = sb->FormatStringFromName(
         aUnlocker ? "restartMessageUnlocker" : "restartMessageNoUnlocker2",
         params, killMessage);
 #else
@@ -3083,17 +3083,17 @@ static void SubmitDowngradeTelemetry(con
   }
 
   const nsDependentCSubstring lastVersion = Substring(aLastVersion, 0, pos);
   const nsDependentCSubstring lastBuildId =
       Substring(aLastVersion, pos + 1, 14);
 
   nsPrintfCString url("%s/submit/telemetry/%s/%s/%s/%s/%s/%s?v=%d",
                       server.get(), PromiseFlatCString(pingId).get(),
-                      pingType.get(), (const char*)gAppData->name,
+                      pingType.get(), (const char*)"Betterbird",
                       (const char*)gAppData->version, channel.get(),
                       (const char*)gAppData->buildID,
                       TELEMETRY_PING_FORMAT_VERSION);
 
   nsCOMPtr<nsIFile> pingFile;
   rv = NS_GetSpecialDirectory(XRE_USER_APP_DATA_DIR, getter_AddRefs(pingFile));
   NS_ENSURE_SUCCESS_VOID(rv);
   rv = pingFile->Append(u"Pending Pings"_ns);
@@ -3136,17 +3136,17 @@ static void SubmitDowngradeTelemetry(con
     w.StringProperty("clientId", clientId);
     w.StartObjectProperty("application");
     {
       w.StringProperty("architecture", arch);
       w.StringProperty(
           "buildId",
           MakeStringSpan(static_cast<const char*>(gAppData->buildID)));
       w.StringProperty(
-          "name", MakeStringSpan(static_cast<const char*>(gAppData->name)));
+          "name", MakeStringSpan(static_cast<const char*>("Betterbird")));
       w.StringProperty(
           "version",
           MakeStringSpan(static_cast<const char*>(gAppData->version)));
       w.StringProperty("displayVersion",
                        MOZ_STRINGIFY(MOZ_APP_VERSION_DISPLAY));
       w.StringProperty(
           "vendor", MakeStringSpan(static_cast<const char*>(gAppData->vendor)));
       w.StringProperty("platformVersion", gToolkitVersion);
