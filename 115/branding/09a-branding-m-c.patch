# HG changeset patch
# Parent  d3a9cb846e656ff46601abc84ebfe94278ae1411
Branding 9: Hack appname some more, and again.

diff --git a/toolkit/xre/nsAppRunner.cpp b/toolkit/xre/nsAppRunner.cpp
--- a/toolkit/xre/nsAppRunner.cpp
+++ b/toolkit/xre/nsAppRunner.cpp
@@ -4748,9 +4748,9 @@ int XREMain::XRE_mainStartup(bool* aExit
     gRemoteService = mRemoteService;
   }
 #endif
 #if defined(MOZ_WIDGET_GTK)
-  g_set_application_name(mAppData->name);
+  g_set_application_name("Betterbird");
 
 #endif /* defined(MOZ_WIDGET_GTK) */
 #ifdef MOZ_X11
   // Do this after initializing GDK, or GDK will install its own handler.
diff --git a/widget/gtk/nsWindow.cpp b/widget/gtk/nsWindow.cpp
--- a/widget/gtk/nsWindow.cpp
+++ b/widget/gtk/nsWindow.cpp
@@ -6347,9 +6347,9 @@ nsresult nsWindow::Create(nsIWidget* aPa
       mGdkWindow, GetX11Window());
 
   // Set default application name when it's empty.
   if (mGtkWindowAppName.IsEmpty()) {
-    mGtkWindowAppName = gAppData->name;
+    mGtkWindowAppName = "Betterbird";
   }
 
   return NS_OK;
 }
@@ -6369,9 +6369,9 @@ void nsWindow::RefreshWindowClass(void) 
     XClassHint* class_hint = XAllocClassHint();
     if (!class_hint) return;
 
     const char* res_name =
-        !mGtkWindowAppName.IsEmpty() ? mGtkWindowAppName.get() : gAppData->name;
+        !mGtkWindowAppName.IsEmpty() ? mGtkWindowAppName.get() : "Betterbird";
 
     const char* res_class = !mGtkWindowAppClass.IsEmpty()
                                 ? mGtkWindowAppClass.get()
                                 : gdk_get_program_class();
