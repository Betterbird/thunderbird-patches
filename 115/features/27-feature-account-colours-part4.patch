# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1731509722 -3600
# Parent  7ff8a89885df2351ebb4ce993629b7c2aa438f90
Feature: Account colours, part 4: No colours for virtual folders based on one account.

diff --git a/mail/base/content/about3Pane.js b/mail/base/content/about3Pane.js
--- a/mail/base/content/about3Pane.js
+++ b/mail/base/content/about3Pane.js
@@ -7587,9 +7587,9 @@ customElements.whenDefined("tree-view-ta
       // XPCOM calls here must be keep to a minimum. Collect all of the
       // required data in one go.
       let threadedDisplay =
         gViewWrapper._viewFlags & Ci.nsMsgViewFlagsType.kThreadedDisplay;
-      let getServerInfo = !gViewWrapper.isSingleFolder;
+      let getServerInfo = gViewWrapper.isMultiServer;
       let properties = {};
       let threadLevel = {};
       let numChildren = {};
       let hasNoSibling = {};
@@ -7891,9 +7891,9 @@ customElements.whenDefined("tree-view-ta
       super.index = index;
 
       // XPCOM calls here must be keep to a minimum. Collect all of the
       // required data in one go.
-      let getServerInfo = !gViewWrapper.isSingleFolder;
+      let getServerInfo = gViewWrapper.isMultiServer;
       let properties = {};
       let threadLevel = {};
       let numChildren = {};
       let hasNextSibling = {};
diff --git a/mail/modules/DBViewWrapper.jsm b/mail/modules/DBViewWrapper.jsm
--- a/mail/modules/DBViewWrapper.jsm
+++ b/mail/modules/DBViewWrapper.jsm
@@ -519,8 +519,9 @@ function DBViewWrapper(aListener) {
   this.displayedFolder = null;
   this.listener = aListener;
 
   this._underlyingData = this.kUnderlyingNone;
+  this._underlyingServers = this.kUnderlyingNone;
   this._underlyingFolders = null;
   this._syntheticView = null;
 
   this._viewUpdateDepth = 0;
@@ -587,8 +588,10 @@ DBViewWrapper.prototype = {
    *  displayedFolder.  We differ from kUnderlyingSynthetic in that we are
    *  not just a bunch of message headers randomly crammed in.
    */
   kUnderlyingSearchView: 4,
+  kUnderlyingSingleServer: 5,
+  kUnderlyingMultipleServer: 6,
 
   /**
    * @returns true if the folder being displayed is backed by a single 'real'
    *     folder.  This folder can be a saved search on that folder or just
@@ -609,8 +612,12 @@ DBViewWrapper.prototype = {
       this._underlyingData == this.kUnderlyingSearchView
     );
   },
 
+  get isMultiServer() {
+    return this._underlyingServers == this.kUnderlyingMultipleServer;
+  },
+
   /**
    * @returns true if the folder being displayed is not a real folder at all,
    *     but rather the result of an un-scoped search, such as a gloda search.
    */
@@ -1078,16 +1085,21 @@ DBViewWrapper.prototype = {
       this._underlyingData =
         this._underlyingFolders.length > 1
           ? this.kUnderlyingMultipleFolder
           : this.kUnderlyingRealFolder;
+      this._underlyingServers =
+        new Set(this._underlyingFolders.map(f => f.server.serverURI)).size > 1
+          ? this.kUnderlyingMultipleServer
+          : this.kUnderlyingSingleServer;
 
       // figure out if we are using online IMAP searching
       this.search.onlineSearch = virtFolder.onlineSearch;
 
       // retrieve and chew the search query
       this.search.virtualFolderTerms = virtFolder.searchTerms;
     } else {
       this._underlyingData = this.kUnderlyingRealFolder;
+      this._underlyingServers = this.kUnderlyingSingleServer;
       this._underlyingFolders = [this.displayedFolder];
     }
 
     FolderNotificationHelper.stalkFolders(
