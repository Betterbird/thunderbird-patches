# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1683317022 -7200
# Parent  448d7929e8fdb0e70d4ea268852f150ce8a2c9e4
Feature: Implement pref mail.tabs.firstTab.startupURI.

diff --git a/mail/app/profile/all-thunderbird.js b/mail/app/profile/all-thunderbird.js
--- a/mail/app/profile/all-thunderbird.js
+++ b/mail/app/profile/all-thunderbird.js
@@ -554,16 +554,17 @@ pref("mail.openMessageBehavior.version",
 pref("mail.tabs.loadInBackground", true);
 
 // Tabs
 pref("mail.tabs.tabMinWidth", 100);
 pref("mail.tabs.tabMaxWidth", 250);
 pref("mail.tabs.tabClipWidth", 140);
 pref("mail.tabs.autoHide", true);
 pref("mail.tabs.closeWindowWithLastTab", true);
+pref("mail.tabs.firstTab.startupURI", "");
 
 // Allow the tabs to be in the titlebar on supported systems
 pref("mail.tabs.drawInTitlebar", true);
 
 // The breakpad report server to link to in about:crashes
 pref("breakpad.reportURL", "https://crash-stats.mozilla.com/report/index/");
 
 // OS Integrated Search and Indexing
diff --git a/mail/base/content/about3Pane.js b/mail/base/content/about3Pane.js
--- a/mail/base/content/about3Pane.js
+++ b/mail/base/content/about3Pane.js
@@ -423,16 +423,30 @@ var folderPaneContextMenu = {
 
     showItem("folderPaneContext-favoriteFolder", !isServer);
     if (!isServer) {
       checkItem(
         "folderPaneContext-favoriteFolder",
         flags & Ci.nsMsgFolderFlags.Favorite
       );
     }
+    // --- Set up startup folder menu item.
+    // Currently you can only select one folder, so this will change
+    // when you can select many.
+    if (!isServer) {  // was: numSelected == 1 && !folders[0].isServer
+      let startup = Services.prefs.getStringPref(
+        "mail.tabs.firstTab.startupURI",
+        ""
+      );
+      checkItem(
+        "folderPaneContext-startupFolder",
+        gFolder.URI == startup
+      );
+    }
+    showItem("folderPaneContext-startupFolder", !isServer);
     showItem("folderPaneContext-properties", !isServer);
     showItem("folderPaneContext-markAllFoldersRead", isServer);
 
     showItem("folderPaneContext-settings", isServer);
 
     let lastItem;
     for (let child of document.getElementById("folderPaneContext").children) {
       if (child.localName == "menuseparator") {
@@ -498,16 +512,29 @@ var folderPaneContextMenu = {
         folderPane.emptyJunk(gFolder);
         break;
       case "folderPaneContext-sendUnsentMessages":
         topChromeWindow.SendUnsentMessages();
         break;
       case "folderPaneContext-favoriteFolder":
         gFolder.toggleFlag(Ci.nsMsgFolderFlags.Favorite);
         break;
+      case "folderPaneContext-startupFolder":
+        let startup = Services.prefs.getStringPref(
+          "mail.tabs.firstTab.startupURI",
+          ""
+        );
+        let newval;
+        if (gFolder.URI == startup) {
+          newval = "";
+        } else {
+          newval = gFolder.URI;
+        }
+        Services.prefs.setStringPref("mail.tabs.firstTab.startupURI", newval);
+        break;
       case "folderPaneContext-properties":
         folderPane.editFolder(gFolder);
         break;
       case "folderPaneContext-markAllFoldersRead":
         topChromeWindow.MsgMarkAllFoldersRead([gFolder]);
         break;
       case "folderPaneContext-settings":
         folderPane.editFolder(gFolder);
diff --git a/mail/base/content/about3Pane.xhtml b/mail/base/content/about3Pane.xhtml
--- a/mail/base/content/about3Pane.xhtml
+++ b/mail/base/content/about3Pane.xhtml
@@ -353,16 +353,19 @@
               class="menuitem-iconic"
               label="&folderContextSendUnsentMessages.label;"
               accesskey="&folderContextSendUnsentMessages.accesskey;"/>
     <menuseparator/>
     <menuitem id="folderPaneContext-favoriteFolder"
               type="checkbox"
               label="&folderContextFavoriteFolder.label;"
               accesskey="&folderContextFavoriteFolder.accesskey;"/>
+    <menuitem id="folderPaneContext-startupFolder"
+              type="checkbox"
+              label="&folderContextStartupFolder.label;"/>
     <menuitem id="folderPaneContext-properties"
               class="menuitem-iconic"
               label="&folderContextProperties2.label;"
               accesskey="&folderContextProperties2.accesskey;"/>
     <menuitem id="folderPaneContext-markAllFoldersRead"
               class="menuitem-iconic"
               label="&folderContextMarkAllFoldersRead.label;"/>
     <menuseparator/>
diff --git a/mail/base/content/mailTabs.js b/mail/base/content/mailTabs.js
--- a/mail/base/content/mailTabs.js
+++ b/mail/base/content/mailTabs.js
@@ -228,16 +228,28 @@ var newMailTabType = {
         return {
           firstTab: tab.first,
           folderPaneVisible: tab.folderPaneVisible,
           folderURI: tab.folder.URI,
           messagePaneVisible: tab.messagePaneVisible,
         };
       },
       restoreTab(tabmail, persistedState) {
+        if (persistedState.firstTab) {
+          let startup = Services.prefs.getStringPref(
+            "mail.tabs.firstTab.startupURI",
+            ""
+          );
+          if (startup) {
+            let f = MailUtils.getExistingFolder(startup);
+            if (f) {
+              persistedState.folderURI = f.URI;
+            }
+          }
+        }
         if (!persistedState.firstTab) {
           tabmail.openTab("mail3PaneTab", persistedState);
           return;
         }
 
         let { chromeBrowser, closed } = tabmail.tabInfo[0];
         if (
           chromeBrowser.contentDocument.readyState == "complete" &&
diff --git a/mail/locales/en-US/chrome/messenger/messenger.dtd b/mail/locales/en-US/chrome/messenger/messenger.dtd
--- a/mail/locales/en-US/chrome/messenger/messenger.dtd
+++ b/mail/locales/en-US/chrome/messenger/messenger.dtd
@@ -644,16 +644,17 @@
 <!ENTITY folderContextSubscribe.label "Subscribe…">
 <!ENTITY folderContextSubscribe.accesskey "b">
 <!ENTITY folderContextSearchForMessages.label "Search Messages…">
 <!ENTITY folderContextSearchForMessages.accesskey "S">
 <!ENTITY folderContextProperties2.label "Properties">
 <!ENTITY folderContextProperties2.accesskey "P">
 <!ENTITY folderContextFavoriteFolder.label "Favorite Folder">
 <!ENTITY folderContextFavoriteFolder.accesskey "a">
+<!ENTITY folderContextStartupFolder.label "Startup Folder">
 <!ENTITY folderContextSettings2.label "Settings">
 <!ENTITY folderContextSettings2.accesskey "e">
 
 <!-- Search Bar -->
 <!ENTITY SearchNameOrEmail.label "Name or Email contains:">
 <!ENTITY SearchNameOrEmail.accesskey "N">
 
 <!-- Gloda Search Bar -->
