# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1709828290 -3600
# Parent  699687caa143f37c9fab085d3a23bdab419c505b
Feature: Linux systray: Adding activation for Xfce, from
https://github.com/AyatanaIndicators/libayatana-appindicator/pull/71#issuecomment-1704357887:

Work by GaÃ«l Bonithon (Tamaranch) <gael@xfce.org>

diff --git a/third_party/appindicator/app-indicator.c b/third_party/appindicator/app-indicator.c
--- a/third_party/appindicator/app-indicator.c
+++ b/third_party/appindicator/app-indicator.c
@@ -88,8 +88,9 @@ typedef struct {
     gchar                *tooltip_title;
     gchar                *tooltip_body;
     DbusmenuServer       *menuservice;
     GtkWidget            *menu;
+    gboolean              item_is_menu;
     GtkWidget            *sec_activate_target;
     gboolean              sec_activate_enabled;
     guint32               ordering_index;
     gchar *               title;
@@ -149,8 +150,9 @@ enum {
     PROP_ORDERING_INDEX,
     PROP_DBUS_MENU_SERVER,
     PROP_TITLE,
     PROP_MENU,
+    PROP_ITEM_IS_MENU,
     PROP_TOOLTIP_ICON_NAME,
     PROP_TOOLTIP_TITLE,
     PROP_TOOLTIP_BODY
 };
@@ -169,9 +171,10 @@ enum {
 #define PROP_LABEL_GUIDE_S           "label-guide"
 #define PROP_ORDERING_INDEX_S        "ordering-index"
 #define PROP_DBUS_MENU_SERVER_S      "dbus-menu-server"
 #define PROP_TITLE_S                 "title"
-#define PROP_MENU_S                 "menu"
+#define PROP_MENU_S                  "menu"
+#define PROP_ITEM_IS_MENU_S          "item-is-menu"
 #define PROP_TOOLTIP_ICON_NAME_S     "tooltip-icon-name"
 #define PROP_TOOLTIP_TITLE_S         "tooltip-title"
 #define PROP_TOOLTIP_BODY_S          "tooltip-body"
 
@@ -580,8 +583,21 @@ app_indicator_class_init (AppIndicatorCl
                                                           "The text body of a tooltip assocaited with the application indicator.",
                                                           NULL,
                                                           G_PARAM_READWRITE | G_PARAM_STATIC_STRINGS));
 
+    /**
+     * AppIndicator:item-is-menu:
+     *
+     * Whether the application indicator only supports the context menu.
+     */
+    g_object_class_install_property(object_class,
+                                    PROP_ITEM_IS_MENU,
+                                    g_param_spec_boolean (PROP_ITEM_IS_MENU_S,
+                                                          "Whether the application indicator only supports the context menu",
+                                                          "If TRUE the visualization should prefer showing the menu or sending ContextMenu() instead of Activate().",
+                                                          FALSE,
+                                                          G_PARAM_READWRITE | G_PARAM_STATIC_STRINGS));
+
     /* Signals */
 
     /**
      * AppIndicator::new-icon:
@@ -777,8 +793,9 @@ app_indicator_init (AppIndicator *self)
     priv->attention_icon_name = NULL;
     priv->icon_theme_path = NULL;
     priv->absolute_icon_theme_path = get_real_theme_path (self);
     priv->menu = NULL;
+    priv->item_is_menu = FALSE;
     priv->menuservice = NULL;
     priv->ordering_index = 0;
     priv->title = NULL;
     priv->label = NULL;
@@ -1196,8 +1213,12 @@ G_GNUC_END_IGNORE_DEPRECATIONS
             g_clear_object (&priv->menu);
             priv->menu = GTK_WIDGET (g_value_dup_object(value));
             break;
 
+        case PROP_ITEM_IS_MENU:
+            priv->item_is_menu = g_value_get_boolean(value);
+            break;
+
         default:
           G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
           break;
         }
@@ -1298,8 +1319,12 @@ app_indicator_get_property (GObject * ob
         case PROP_TOOLTIP_BODY:
             g_value_set_string(value, priv->tooltip_body);
             break;
 
+        case PROP_ITEM_IS_MENU:
+            g_value_set_boolean(value, priv->item_is_menu);
+            break;
+
         default:
           G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
           break;
         }
@@ -1459,8 +1484,10 @@ bus_get_prop (GDBusConnection * connecti
             return var;
         } else {
             return g_variant_new("o", "/");
         }
+    } else if (g_strcmp0(property, "ItemIsMenu") == 0) {
+        return g_variant_new_boolean(priv->item_is_menu);
     } else if (g_strcmp0(property, "XAyatanaLabel") == 0) {
         return g_variant_new_string(priv->label ? priv->label : "");
     } else if (g_strcmp0(property, "XAyatanaLabelGuide") == 0) {
         return g_variant_new_string(priv->label_guide ? priv->label_guide : "");
diff --git a/third_party/appindicator/gen-notification-item.xml.c b/third_party/appindicator/gen-notification-item.xml.c
--- a/third_party/appindicator/gen-notification-item.xml.c
+++ b/third_party/appindicator/gen-notification-item.xml.c
@@ -16,8 +16,9 @@ const char * _notification_item =
 "		<!-- An additional path to add to the theme search path\n"
 "		     to find the icons specified above. -->\n"
 "		<property name=\"IconThemePath\" type=\"s\" access=\"read\" />\n"
 "		<property name=\"Menu\" type=\"o\" access=\"read\" />\n"
+"		<property name=\"ItemIsMenu\" type=\"b\" access=\"read\" />\n"
 "		<property name=\"XAyatanaLabel\" type=\"s\" access=\"read\" />\n"
 "		<property name=\"XAyatanaLabelGuide\" type=\"s\" access=\"read\" />\n"
 "		<property name=\"XAyatanaOrderingIndex\" type=\"u\" access=\"read\" />\n"
 "\n"
