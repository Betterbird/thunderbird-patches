# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1708033288 -3600
# Parent  e7439da4306b1fd4ab2a85268a66f89d785d80d0
Feature: Re-implementation of the two-line view with columns for BB 115.
* * *
Feature: Re-implementation of the two-line view: Make correspondents column pixel perfect.
* * *
Feature: Reduce row height in multi-line view to match height of cards.

diff --git a/mail/app/profile/all-thunderbird.js b/mail/app/profile/all-thunderbird.js
--- a/mail/app/profile/all-thunderbird.js
+++ b/mail/app/profile/all-thunderbird.js
@@ -330,16 +330,17 @@ pref("mail.ui-rdf.version", 0);
 pref("mail.showCondensedAddresses", true); // show the friendly display name for people I know
 // 1: Show display name, 2: Show e-mail address, 3: Show both.
 pref("mail.addressDisplayAuthor", 1);
 pref("mail.addressDisplayRecipients", 1);
 
 pref("mailnews.attachments.display.start_expanded", false);
 // hidden pref for changing how we present attachments in the message pane
 pref("mail.pane_config.dynamic",            0);
+pref("mail.pane_config.multiline_all", false);
 pref("mailnews.reuse_thread_window2",     true);
 pref("editor.singleLine.pasteNewlines", 4);  // substitute commas for new lines in single line text boxes
 pref("editor.CR_creates_new_p", true);
 pref("mail.compose.default_to_paragraph", true);
 
 // If true, when pasting a URL, paste the Open Graph / Twitter Card details
 // we can extract from the URL instead.
 pref("mail.compose.add_link_preview", false);
diff --git a/mail/base/content/about3Pane.js b/mail/base/content/about3Pane.js
--- a/mail/base/content/about3Pane.js
+++ b/mail/base/content/about3Pane.js
@@ -4527,16 +4527,17 @@ var threadPane = {
 
   cardColumns: getDefaultColumnsForCardsView(gFolder),
 
   async init() {
     quickFilterBar.init();
 
     this.setUpTagStyles();
     Services.prefs.addObserver("mailnews.tags.", this);
+    Services.prefs.addObserver("mail.pane_config.multiline_all", this);
 
     Services.obs.addObserver(this, "addrbook-displayname-changed");
 
     // Ensure TreeView and its classes are properly defined.
     await customElements.whenDefined("tree-view-table-row");
 
     threadTree = document.getElementById("threadTree");
     this.treeTable = threadTree.table;
@@ -4556,16 +4557,23 @@ var threadPane = {
       this,
       "selectDelay",
       "mailnews.threadpane_select_delay",
       null,
       (name, oldValue, newValue) => (threadTree.dataset.selectDelay = newValue)
     );
     threadTree.dataset.selectDelay = this.selectDelay;
 
+    // Setup multi-line.
+    let multiline = Services.prefs.getBoolPref(
+      "mail.pane_config.multiline_all",
+      false
+    );
+    customElements.get("thread-row").MULTILINE = multiline;
+
     window.addEventListener("uidensitychange", () => {
       this.densityChange();
       threadTree.reset();
     });
     this.densityChange();
 
     XPCOMUtils.defineLazyGetter(this, "notificationBox", () => {
       let container = document.getElementById("threadPaneNotificationBox");
@@ -4692,17 +4700,27 @@ var threadPane = {
           break;
         }
         this.scrollDetected = true;
         break;
     }
   },
   observe(subject, topic, data) {
     if (topic == "nsPref:changed") {
-      this.setUpTagStyles();
+      if (data == "mail.pane_config.multiline_all") {
+        let multiline = Services.prefs.getBoolPref(
+          "mail.pane_config.multiline_all",
+          false
+        );
+        customElements.get("thread-row").MULTILINE = multiline;
+        this.densityChange();
+        threadTree.reset();
+      } else {
+        this.setUpTagStyles();
+      }
     } else if (topic == "addrbook-displayname-changed") {
       // This runs the when mail.displayname.version preference observer is
       // notified/the mail.displayname.version number has been updated.
       threadTree.invalidate();
     }
   },
 
   /**
@@ -5192,25 +5210,25 @@ var threadPane = {
    */
   densityChange() {
     // The class ThreadRow can't be referenced because it's declared in a
     // different scope. But we can get it from customElements.
     let rowClass = customElements.get("thread-row");
     let cardClass = customElements.get("thread-card");
     switch (UIDensity.prefValue) {
       case UIDensity.MODE_COMPACT:
-        rowClass.ROW_HEIGHT = 18;
+        rowClass.ROW_HEIGHT = rowClass.MULTILINE ? 34 : 20;
         cardClass.ROW_HEIGHT = 40;
         break;
       case UIDensity.MODE_TOUCH:
-        rowClass.ROW_HEIGHT = 32;
+        rowClass.ROW_HEIGHT = rowClass.MULTILINE ? 52 : 32;
         cardClass.ROW_HEIGHT = 52;
         break;
       default:
-        rowClass.ROW_HEIGHT = 26;
+        rowClass.ROW_HEIGHT = rowClass.MULTILINE ? 46 : 26;
         cardClass.ROW_HEIGHT = 46;
         break;
     }
   },
 
   /**
    * Store the current thread tree selection.
    */
@@ -5428,16 +5446,20 @@ var threadPane = {
   /**
    * Update the current columns to match a previously saved state.
    *
    * @param {JSON} columnStates - The parsed JSON of a previously saved state.
    */
   applyPersistedColumnsState(columnStates) {
     this.columns.forEach(c => {
       c.hidden = !columnStates[c.id]?.visible;
+      // Clear traces of old multi-line via hidden subject.
+      if (c.id == "subjectCol") {
+        c.hidden = false;
+      }
       c.ordinal = columnStates[c.id]?.ordinal ?? 0;
     });
     // Sort columns by ordinal.
     this.columns.sort(function (a, b) {
       return a.ordinal - b.ordinal;
     });
   },
 
@@ -6351,27 +6373,37 @@ var folderListener = {
   },
 };
 
 /**
  * Custom element for rows in the thread tree.
  */
 customElements.whenDefined("tree-view-table-row").then(() => {
   class ThreadRow extends customElements.get("tree-view-table-row") {
-    static ROW_HEIGHT = 22;
+    static ROW_HEIGHT = 0; // Will be set via density.
+    static MULTILINE = false;
 
     connectedCallback() {
       if (this.hasConnected) {
         return;
       }
 
       super.connectedCallback();
 
       this.setAttribute("draggable", "true");
       this.appendChild(threadPane.rowTemplate.content.cloneNode(true));
+
+      let table = this.parentNode.parentNode;
+      if (ThreadRow.MULTILINE) {
+        this.setAttribute("multiline", "true");
+        table.setAttribute("multiline", "true");
+      } else {
+        this.removeAttribute("multiline");
+        table.removeAttribute("multiline");
+      }
     }
 
     get index() {
       return super.index;
     }
 
     set index(index) {
       super.index = index;
@@ -6410,27 +6442,29 @@ customElements.whenDefined("tree-view-ta
       // the message row aria-label.
       let ariaLabelPromises = [];
 
       const propertiesSet = new Set(properties.value.split(" "));
       const isDummyRow = propertiesSet.has("dummy");
 
       this.dataset.properties = properties.value.trim();
 
+      let seenSubjectColumn = false;
       for (let column of threadPane.columns) {
         // Skip this column if it's hidden or it's the "select" column, since
         // the selection state is communicated via the aria-activedescendant.
         if (column.hidden || column.select) {
           continue;
         }
         let cell = this.querySelector(`.${column.id.toLowerCase()}-column`);
         let textIndex = textColumns.indexOf(column.id);
 
         // Special case for the subject column.
         if (column.id == "subjectCol") {
+          seenSubjectColumn = true;
           const div = cell.querySelector(".subject-line");
 
           // Indent child message of this thread.
           div.style.setProperty(
             "--thread-level",
             gViewWrapper.showGroupedBySort ? 0 : threadLevel.value
           );
 
@@ -6444,16 +6478,27 @@ customElements.whenDefined("tree-view-ta
           }
 
           const span = div.querySelector("span");
           cell.title = span.textContent = cellTexts[textIndex];
           ariaLabelPromises.push(cellTexts[textIndex]);
           continue;
         }
 
+        if (seenSubjectColumn && !column.hidden) {
+          seenSubjectColumn = false;
+          cell.setAttribute("alignmentcolumn", "true");
+          cell.style.setProperty(
+            "--thread-level",
+            gViewWrapper.showGroupedBySort ? 0 : threadLevel.value
+          );
+        } else {
+          cell.removeAttribute("alignmentcolumn");
+        }
+
         if (column.id == "threadCol") {
           let buttonL10nId, labelString;
           if (propertiesSet.has("ignore")) {
             buttonL10nId = "tree-list-view-row-ignored-thread-button";
             labelString = "tree-list-view-row-ignored-thread";
           } else if (propertiesSet.has("ignoreSubthread")) {
             buttonL10nId = "tree-list-view-row-ignored-subthread-button";
             labelString = "tree-list-view-row-ignored-subthread";
@@ -6521,16 +6566,18 @@ customElements.whenDefined("tree-view-ta
             document.l10n.formatValue("threadpane-attachments-cell-label")
           );
           continue;
         }
 
         if (textIndex >= 0) {
           if (isDummyRow) {
             cell.textContent = "";
+            cell.removeAttribute("alignmentcolumn");
+            cell.style.removeProperty("--thread-level");
             continue;
           }
           cell.textContent = cellTexts[textIndex];
           ariaLabelPromises.push(cellTexts[textIndex]);
         }
       }
 
       Promise.allSettled(ariaLabelPromises).then(results => {
diff --git a/mail/base/content/about3Pane.xhtml b/mail/base/content/about3Pane.xhtml
--- a/mail/base/content/about3Pane.xhtml
+++ b/mail/base/content/about3Pane.xhtml
@@ -206,37 +206,37 @@
                 aria-hidden="true"
                 tabindex="-1">
           <img src="" alt="" />
         </button>
       </td>
       <td class="attachmentcol-column button-column" data-l10n-id="threadpane-cell-attachments">
         <img src="" data-l10n-id="tree-list-view-row-attach" />
       </td>
+      <td class="tree-view-row-unread unreadbuttoncolheader-column button-column" data-l10n-id="threadpane-cell-read-status">
+        <button type="button"
+                class="button-flat tree-button-unread"
+                aria-hidden="true"
+                tabindex="-1">
+          <img src="" alt="" />
+        </button>
+      </td>
       <td class="subjectcol-column" data-l10n-id="threadpane-cell-subject">
         <div class="thread-container">
           <button type="button"
                   class="button button-flat button-reset twisty"
                   aria-hidden="true"
                   tabindex="-1">
             <img src="" alt="" class="twisty-icon" />
           </button>
           <div class="subject-line" tabindex="-1">
             <img src="" alt="" /><span></span>
           </div>
         </div>
       </td>
-      <td class="tree-view-row-unread unreadbuttoncolheader-column button-column" data-l10n-id="threadpane-cell-read-status">
-        <button type="button"
-                class="button-flat tree-button-unread"
-                aria-hidden="true"
-                tabindex="-1">
-          <img src="" alt="" />
-        </button>
-      </td>
       <td class="sendercol-column" data-l10n-id="threadpane-cell-sender"></td>
       <td class="recipientcol-column" data-l10n-id="threadpane-cell-recipient"></td>
       <td class="correspondentcol-column" data-l10n-id="threadpane-cell-correspondents"></td>
       <td class="tree-view-row-spam junkstatuscol-column button-column" data-l10n-id="threadpane-cell-spam">
         <button type="button"
                 class="button-flat tree-button-spam"
                 aria-hidden="true"
                 tabindex="-1">
diff --git a/mail/base/content/mailWindowOverlay.js b/mail/base/content/mailWindowOverlay.js
--- a/mail/base/content/mailWindowOverlay.js
+++ b/mail/base/content/mailWindowOverlay.js
@@ -467,16 +467,25 @@ function InitViewLayoutStyleMenu(event, 
     ) !== "true"
   ) {
     parent
       .querySelector(`[name="threadheader"]`)
       .setAttribute("checked", "true");
   } else {
     parent.querySelector(`[name="threadheader"]`).removeAttribute("checked");
   }
+
+  let multiline = document.getElementById(
+    appmenu ? "appmenu_multilineAllFolders" : "multilineAllFolders"
+  );
+  if (Services.prefs.getBoolPref("mail.pane_config.multiline_all")) {
+    multiline.setAttribute("checked", "true");
+  } else {
+    multiline.removeAttribute("checked");
+  }
 }
 
 /**
  * Called when showing the menu_viewSortPopup menupopup, so it should always
  * be up-to-date.
  */
 function InitViewSortByMenu() {
   let tab = document.getElementById("tabmail")?.currentTabInfo;
@@ -1372,16 +1381,31 @@ function MsgFilters(emailAddress, folder
     }
   } else {
     // Just launch filterList dialog.
     args = { refresh: false, folder };
     MsgFilterList(args);
   }
 }
 
+function ToogleMultilineAll(appmenu) {
+  let multiline = document.getElementById(
+    appmenu ? "appmenu_multilineAllFolders" : "multilineAllFolders"
+  );
+  let isMultiline = Services.prefs.getBoolPref(
+    "mail.pane_config.multiline_all"
+  );
+  if (isMultiline) {
+    multiline.removeAttribute("checked");
+  } else {
+    multiline.setAttribute("checked", "true");
+  }
+  Services.prefs.setBoolPref("mail.pane_config.multiline_all", !isMultiline);
+}
+
 function MsgViewAllHeaders() {
   Services.prefs.setIntPref(
     "mail.show_headers",
     Ci.nsMimeHeaderDisplayTypes.AllHeaders
   );
 }
 
 function MsgViewNormalHeaders() {
diff --git a/mail/base/content/messenger-menubar.inc.xhtml b/mail/base/content/messenger-menubar.inc.xhtml
--- a/mail/base/content/messenger-menubar.inc.xhtml
+++ b/mail/base/content/messenger-menubar.inc.xhtml
@@ -362,16 +362,21 @@
       <menupopup id="view_layout_popup" onpopupshowing="InitViewLayoutStyleMenu(event)">
         <menuitem id="messagePaneClassic" type="radio" label="&messagePaneClassic.label;" name="viewlayoutgroup"
                   accesskey="&messagePaneClassic.accesskey;" command="cmd_viewClassicMailLayout"/>
         <menuitem id="messagePaneWide" type="radio" label="&messagePaneWide.label;" name="viewlayoutgroup"
                   accesskey="&messagePaneWide.accesskey;" command="cmd_viewWideMailLayout"/>
         <menuitem id="messagePaneVertical" type="radio" label="&messagePaneVertical.label;" name="viewlayoutgroup"
                   accesskey="&messagePaneVertical.accesskey;" command="cmd_viewVerticalMailLayout"/>
         <menuseparator id="viewMenuAfterPaneVerticalSeparator"/>
+        <menuitem id="multilineAllFolders"
+                  type="checkbox"
+                  data-l10n-id="menu-multi-line-all-folders"
+                  oncommand="ToogleMultilineAll(false);"/>
+        <menuseparator id="viewMenuBeforeShowFolderPaneSeparator"/>
         <menuitem id="menu_showFolderPane" type="checkbox" label="&showFolderPaneCmd.label;"
                   accesskey="&showFolderPaneCmd.accesskey;" command="cmd_toggleFolderPane"/>
         <menuitem id="menu_toggleThreadPaneHeader"
                   type="checkbox"
                   name="threadheader"
                   data-l10n-id="menu-view-toggle-thread-pane-header"
                   command="cmd_toggleThreadPaneHeader"/>
         <menuitem id="menu_showMessage" type="checkbox" label="&showMessageCmd.label;" key="key_toggleMessagePane"
diff --git a/mail/base/content/modules/thread-pane-columns.mjs b/mail/base/content/modules/thread-pane-columns.mjs
--- a/mail/base/content/modules/thread-pane-columns.mjs
+++ b/mail/base/content/modules/thread-pane-columns.mjs
@@ -69,38 +69,38 @@ const DEFAULT_COLUMNS = [
       menuitem: "threadpane-column-label-attachments",
     },
     ordinal: 4,
     sortKey: "byAttachments",
     icon: true,
     resizable: false,
   },
   {
+    id: "unreadButtonColHeader",
+    l10n: {
+      header: "threadpane-column-header-unread-button",
+      menuitem: "threadpane-column-label-unread-button",
+    },
+    ordinal: 5,
+    sortKey: "byUnread",
+    icon: true,
+    resizable: false,
+    unread: true,
+  },
+  {
     id: "subjectCol",
     l10n: {
       header: "threadpane-column-header-subject",
       menuitem: "threadpane-column-label-subject",
     },
-    ordinal: 5,
+    ordinal: 6,
     picker: false,
     sortKey: "bySubject",
   },
   {
-    id: "unreadButtonColHeader",
-    l10n: {
-      header: "threadpane-column-header-unread-button",
-      menuitem: "threadpane-column-label-unread-button",
-    },
-    ordinal: 6,
-    sortKey: "byUnread",
-    icon: true,
-    resizable: false,
-    unread: true,
-  },
-  {
     id: "senderCol",
     l10n: {
       header: "threadpane-column-header-sender",
       menuitem: "threadpane-column-label-sender",
     },
     ordinal: 7,
     sortKey: "byAuthor",
     hidden: true,
diff --git a/mail/components/customizableui/content/panelUI.inc.xhtml b/mail/components/customizableui/content/panelUI.inc.xhtml
--- a/mail/components/customizableui/content/panelUI.inc.xhtml
+++ b/mail/components/customizableui/content/panelUI.inc.xhtml
@@ -350,16 +350,22 @@
                        command="cmd_viewWideMailLayout"/>
         <toolbarbutton id="appmenu_messagePaneVertical"
                        class="subviewbutton subviewbutton-iconic"
                        type="radio"
                        label="&messagePaneVertical.label;"
                        name="viewlayoutgroup"
                        command="cmd_viewVerticalMailLayout"/>
         <toolbarseparator id="appmenu_viewMenuAfterPaneVerticalSeparator"/>
+        <toolbarbutton id="appmenu_multilineAllFolders"
+                       class="subviewbutton subviewbutton-iconic"
+                       type="checkbox"
+                       data-l10n-id="menu-multi-line-all-folders"
+                       oncommand="ToogleMultilineAll(true);"/>
+        <toolbarseparator id="appmenu_viewMenuBeforeShowFolderPaneSeparator"/>
         <toolbarbutton id="appmenu_showFolderPane"
                        class="subviewbutton subviewbutton-iconic"
                        type="checkbox"
                        closemenu="none"
                        label="&showFolderPaneCmd.label;"
                        command="cmd_toggleFolderPane"/>
         <toolbarbutton id="appmenu_toggleThreadPaneHeader"
                        class="subviewbutton subviewbutton-iconic"
diff --git a/mail/locales/en-US/messenger/menubar.ftl b/mail/locales/en-US/messenger/menubar.ftl
--- a/mail/locales/en-US/messenger/menubar.ftl
+++ b/mail/locales/en-US/messenger/menubar.ftl
@@ -107,16 +107,19 @@ menu-view-repair-text-encoding =
     .accesskey = c
 
 ## View / Folders
 
 menu-view-folders-toggle-header =
     .label = Folder Pane Header
     .accesskey = F
 
+menu-multi-line-all-folders =
+    .label = Multi-line View On All Folders
+
 ## View / Layout
 
 menu-view-toggle-thread-pane-header =
     .label = Message List Header
     .accesskey = H
 
 menu-font-size-label =
     .label = Font Size
diff --git a/mail/themes/shared/mail/threadPane.css b/mail/themes/shared/mail/threadPane.css
--- a/mail/themes/shared/mail/threadPane.css
+++ b/mail/themes/shared/mail/threadPane.css
@@ -384,28 +384,97 @@ tr[is="thread-row"] td > .thread-contain
 tr[is="thread-row"] .subject-line {
   margin-inline-start: calc(16px * var(--thread-level));
   pointer-events: none;
   /* Line height px exception to avoid vertical cut off of characters. This
      should follow and match the density variation height of the row. */
   line-height: 22px;
 }
 
+:root[uidensity="compact"] tr[is="thread-row"][multiline="true"] .subject-line {
+  line-height: 20px;
+}
+
+/* Override rules from tree-listbox.css */
+tr[is="thread-row"][multiline="true"] td div.thread-container,
+tr[is="thread-row"][multiline="true"] td div.subject-line {
+  overflow: visible !important;
+}
+tr[is="thread-row"][multiline="true"] td.subjectcol-column {
+  overflow: visible !important;
+}
+
+/* Indent "alignment column" as well. */
+tr[is="thread-row"][multiline="true"] td[alignmentcolumn="true"] {
+  padding-left: calc(6px + 16px * var(--thread-level));
+}
+
+/* Remove centering of the td */
+tr[is="thread-row"][multiline="true"] td {
+  vertical-align: top;
+}
+:root[uidensity="compact"] tr[is="thread-row"][multiline="true"] td {
+  padding-top: 2px;
+}
+:root[uidensity="compact"] tr[is="thread-row"][multiline="true"] td.subjectcol-column {
+  top: 7px;
+}
+tr[is="thread-row"][multiline="true"] td {
+  padding-top: 6px;
+}
+tr[is="thread-row"][multiline="true"] td.subjectcol-column {
+  top: 9px;
+}
+:root[uidensity="touch"] tr[is="thread-row"][multiline="true"] td {
+  padding-top: 8px;
+}
+:root[uidensity="touch"] tr[is="thread-row"][multiline="true"] td.subjectcol-column {
+  top: 10px;
+}
+
+/* Make the subject column header fixed width and remove the splitter */
+table[is="tree-view-table"][multiline="true"] #subjectCol {
+  width: 12px !important;
+  min-width: 12px !important;
+  outline: 1px solid var(--splitter-color);
+  border-right: 1px solid var(--splitter-color);
+}
+table[is="tree-view-table"][multiline="true"] #subjectColSplitter {
+  display: none !important;
+}
+table[is="tree-view-table"][multiline="true"] #subjectColButton {
+  content-visibility: hidden;
+  background-position-x: left 0;
+}
+tr[is="tree-view-table"][multiline="true"]:not([data-properties~="dummy"]) .subjectcol-column {
+  /* Italic is a matter of taste here. It can be removed in userChrome.css */
+  font-style: italic;
+}
+
+/* Centre the text of dummy rows (grouped view). */
+tr[is="thread-row"][multiline="true"][data-properties~="dummy"] td.subjectcol-column {
+  top: 2px !important;
+}
+
 [is="tree-view-table-body"][role="tree"] tr[is="thread-row"]:not(.children) .subject-line {
   padding-inline-start: 22px;
 }
 
 tr[is="thread-row"] .subject-line img {
   visibility: hidden;
   width: 16px;
   height: 16px;
   vertical-align: sub;
   margin-inline-end: 3px;
 }
 
+tr[is="thread-row"][multiline="true"] .subject-line img {
+  margin-inline-end: 4px;
+}
+
 tr[is="thread-row"]:not(.children):not(.singleton) .subject-line {
   background-position-x: 10px;
   background-image: url("chrome://messenger/skin/icons/search-row-more.svg");
   background-position-y: center;
   background-repeat: no-repeat;
   -moz-context-properties: fill, fill-opacity;
   fill: var(--tree-view-color);
   fill-opacity: 0.3;
@@ -605,18 +674,30 @@ tr[data-properties~="junk"] :is(.tree-vi
 
 .correspondentcol-column {
   background-repeat: no-repeat;
   background-position-x: 1px;
   background-position-y: center;
   padding-inline-start: var(--tree-header-cell-padding) !important;
   -moz-context-properties: stroke, fill-opacity;
   stroke: currentColor;
-  fill-opacity: 0.3;
+  fill-opacity: 0.7;
+}
+
+tr[is="thread-row"][multiline="true"] .correspondentcol-column {
+  background-position-x: calc(4px + 16px * var(--thread-level));
+  background-position-y: top 5px;
 }
+:root[uidensity="compact"] tr[is="thread-row"][multiline="true"] .correspondentcol-column {
+  background-position-y: top 1px;
+}
+:root[uidensity="touch"] tr[is="thread-row"][multiline="true"] .correspondentcol-column {
+  background-position-y: top 7px;
+}
+
 
 .correspondentcol-column:dir(rtl) {
   background-position-x: right 1px;
 }
 
 tr[data-properties~="outgoing"] .correspondentcol-column {
   background-image: var(--icon-nav-forward);
 }
diff --git a/mail/themes/shared/mail/tree-listbox.css b/mail/themes/shared/mail/tree-listbox.css
--- a/mail/themes/shared/mail/tree-listbox.css
+++ b/mail/themes/shared/mail/tree-listbox.css
@@ -14,17 +14,17 @@
   --table-row-cell-img-margin-inline-start: 6px;
   --table-row-cell-button-margin-inline-start: 4px;
 }
 
 :root[uidensity="compact"] {
   --tree-header-table-height: 27px;
   --tree-header-cell-padding: 3px;
   --tree-header-cell-indent: 3px;
-  --list-item-min-height: 18px;
+  --list-item-min-height: 20px;
   --list-item-buttons-size: 18px;
   --table-header-cell-icon-width: 18px;
   --table-header-cell-icon-min-width: 18px;
   --table-header-cell-icon-button-padding: 0;
   --table-row-cell-img-margin-inline-start: 3px;
   --table-row-cell-button-margin-inline-start: 1px;
 }
 
