# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1688938592 -7200
# Parent  5c5f6881e2da26b156932c79c27293148b3fd430
Bug 580252 - Introduce pref gloda.list.immediate to open Gloda result list immediately.

diff --git a/mail/app/profile/all-thunderbird.js b/mail/app/profile/all-thunderbird.js
--- a/mail/app/profile/all-thunderbird.js
+++ b/mail/app/profile/all-thunderbird.js
@@ -631,16 +631,20 @@ pref("media.autoplay.enabled", false);
 pref("gloda.facetview.hidetimeline", true);
 
 // Behavior of sort-by setting in search results:
 // 0 - default to "relevance", and don't remember user setting when it is changed (== old behavior)
 // 1 - default to "date", but don't remember user setting when it is changed
 // 2 - default to "relevance", but remember user preference when it is changed
 // 3 - default to "date", but remember user preference when it is changed
 pref("gloda.facetview.sortby", 2);
+// 0 - Open facet view
+// 1 - Open facet view and list view
+// 2 - Open list view only (closing facet view)
+pref("gloda.list.immediate", 0);
 
 // Enable gloda by default!
 pref("mailnews.database.global.indexer.enabled", true);
 // Limit the number of gloda message results
 pref("mailnews.database.global.search.msg.limit", 1000);
 
 // Serif fonts look dated.  Switching those language families to sans-serif
 // where we think it makes sense.  Worth investigating for other font families
diff --git a/mail/base/content/glodaFacetTab.js b/mail/base/content/glodaFacetTab.js
--- a/mail/base/content/glodaFacetTab.js
+++ b/mail/base/content/glodaFacetTab.js
@@ -82,16 +82,34 @@ var glodaFacetTabType = {
         "chrome://messenger/content/glodaFacetView.xhtml"
       );
 
       // Wire up the search input icon click event
       let searchInput = aTab.panel.querySelector(".remote-gloda-search");
       searchInput.focus();
     }
 
+    let listImmediate = Services.prefs.getIntPref("gloda.list.immediate", 0);
+    if (listImmediate > 0) {
+      aTab.iframe.contentWindow.addEventListener("DOMContentLoaded", async () => {
+        let win = aTab.iframe.contentDocument.getElementById("browser").contentWindow;
+        let count = 0;
+        while (count++ < 50 && !win.FacetContext?._readyToShow) {
+          await new Promise(r => top.window.setTimeout(r, 100));
+        }
+        if (!win.FacetContext?._readyToShow) {
+          return;
+        }
+        win.FacetContext.showActiveSetInTab();
+        if (listImmediate > 1) {
+          let tabmail = top.window.document.getElementById("tabmail");
+          tabmail.closeTab(aTab);
+        }
+      }, { once: true });
+    }
     aTab.iframe.contentWindow.addEventListener("load", xulLoadHandler, {
       capture: false,
       once: true,
     });
     aTab.iframe.setAttribute(
       "src",
       "chrome://messenger/content/glodaFacetViewWrapper.xhtml"
     );
diff --git a/mail/base/content/glodaFacetView.js b/mail/base/content/glodaFacetView.js
--- a/mail/base/content/glodaFacetView.js
+++ b/mail/base/content/glodaFacetView.js
@@ -457,16 +457,17 @@ ActiveNonSingularConstraint.prototype = 
   isExcludedGroup(aGroupValue) {
     let valId = aGroupValue[this.facetDef.groupIdAttr];
     return valId in this.excludedGroupIds;
   },
 };
 
 var FacetContext = {
   facetDriver: new FacetDriver(Gloda.lookupNounDef("message"), window),
+  _readyToShow: false,
 
   /**
    * The root collection which our active set is a subset of.  We hold onto this
    *  for garbage collection reasons, although the tab that owns us should also
    *  be holding on.
    */
   _collection: null,
   set collection(aCollection) {
@@ -703,16 +704,17 @@ var FacetContext = {
       }
     }
 
     if (!this._timelineShown) {
       this._hideTimeline(true);
     }
 
     this._showResults();
+    this._readyToShow = true;
 
     if (this._callbackOnFacetComplete) {
       let callback = this._callbackOnFacetComplete;
       this._callbackOnFacetComplete = null;
       callback();
     }
   },
 
