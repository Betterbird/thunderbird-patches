# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1709828358 -3600
# Parent  60fdf692e5170c861289a3d14689cd1e72ee6323
Bug 580252 - Introduce pref gloda.list.immediate to open Gloda result list immediately.

diff --git a/mail/app/profile/all-thunderbird.js b/mail/app/profile/all-thunderbird.js
--- a/mail/app/profile/all-thunderbird.js
+++ b/mail/app/profile/all-thunderbird.js
@@ -637,8 +637,12 @@ pref("gloda.facetview.hidetimeline", tru
 // 1 - default to "date", but don't remember user setting when it is changed
 // 2 - default to "relevance", but remember user preference when it is changed
 // 3 - default to "date", but remember user preference when it is changed
 pref("gloda.facetview.sortby", 2);
+// 0 - Open facet view
+// 1 - Open facet view and list view
+// 2 - Open list view only (closing facet view)
+pref("gloda.list.immediate", 0);
 
 // Enable gloda by default!
 pref("mailnews.database.global.indexer.enabled", true);
 // Limit the number of gloda message results
diff --git a/mail/base/content/glodaFacetTab.js b/mail/base/content/glodaFacetTab.js
--- a/mail/base/content/glodaFacetTab.js
+++ b/mail/base/content/glodaFacetTab.js
@@ -86,8 +86,31 @@ var glodaFacetTabType = {
       let searchInput = aTab.panel.querySelector(".remote-gloda-search");
       searchInput.focus();
     }
 
+    let listImmediate = Services.prefs.getIntPref("gloda.list.immediate", 0);
+    if (listImmediate > 0) {
+      aTab.iframe.contentWindow.addEventListener(
+        "DOMContentLoaded",
+        async () => {
+          let win =
+            aTab.iframe.contentDocument.getElementById("browser").contentWindow;
+          let count = 0;
+          while (count++ < 50 && !win.FacetContext?._readyToShow) {
+            await new Promise(r => top.window.setTimeout(r, 100));
+          }
+          if (!win.FacetContext?._readyToShow) {
+            return;
+          }
+          win.FacetContext.showActiveSetInTab();
+          if (listImmediate > 1) {
+            let tabmail = top.window.document.getElementById("tabmail");
+            tabmail.closeTab(aTab);
+          }
+        },
+        { once: true }
+      );
+    }
     aTab.iframe.contentWindow.addEventListener("load", xulLoadHandler, {
       capture: false,
       once: true,
     });
diff --git a/mail/base/content/glodaFacetView.js b/mail/base/content/glodaFacetView.js
--- a/mail/base/content/glodaFacetView.js
+++ b/mail/base/content/glodaFacetView.js
@@ -461,8 +461,9 @@ ActiveNonSingularConstraint.prototype = 
 };
 
 var FacetContext = {
   facetDriver: new FacetDriver(Gloda.lookupNounDef("message"), window),
+  _readyToShow: false,
 
   /**
    * The root collection which our active set is a subset of.  We hold onto this
    *  for garbage collection reasons, although the tab that owns us should also
@@ -707,8 +708,9 @@ var FacetContext = {
       this._hideTimeline(true);
     }
 
     this._showResults();
+    this._readyToShow = true;
 
     if (this._callbackOnFacetComplete) {
       let callback = this._callbackOnFacetComplete;
       this._callbackOnFacetComplete = null;
