# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1693866027 -7200
# Parent  12cdb632241a1a4b8fd74c1f1970bc031b4edf42
Feature: Linux systray: Adding activation via left-click, https://github.com/AyatanaIndicators/libayatana-appindicator/pull/71:

https://github.com/AyatanaIndicators/libayatana-appindicator/pull/71/commits/20591e6cf5068dde1f5371a60e7fc76700da9291

Work by Alexey Sokolov (DarthGandalf)

Betterbird added a few lines in the test program betterbird-systray-icon.c.

diff --git a/third_party/appindicator/app-indicator.c b/third_party/appindicator/app-indicator.c
--- a/third_party/appindicator/app-indicator.c
+++ b/third_party/appindicator/app-indicator.c
@@ -120,16 +120,17 @@ enum {
     NEW_ICON,
     NEW_ATTENTION_ICON,
     NEW_STATUS,
     NEW_LABEL,
     NEW_TOOLTIP,
     CONNECTION_CHANGED,
     NEW_ICON_THEME_PATH,
     SCROLL_EVENT,
+    ACTIVATE_EVENT,
     LAST_SIGNAL
 };
 
 static guint signals[LAST_SIGNAL] = { 0 };
 
 /* Enum for the properties so that they can be quickly
    found and looked up. */
 enum {
@@ -702,16 +703,32 @@ app_indicator_class_init (AppIndicatorCl
     signals[SCROLL_EVENT] = g_signal_new (APP_INDICATOR_SIGNAL_SCROLL_EVENT,
                                       G_TYPE_FROM_CLASS(klass),
                                       G_SIGNAL_RUN_LAST,
                                       G_STRUCT_OFFSET (AppIndicatorClass, scroll_event),
                                       NULL, NULL,
                                       _application_service_marshal_VOID__INT_UINT,
                                       G_TYPE_NONE, 2, G_TYPE_INT, GDK_TYPE_SCROLL_DIRECTION);
 
+    /**
+     * AppIndicator::activate-event:
+     * @arg0: The #AppIndicator object
+     * @arg1: X
+     * @arg2: Y
+     *
+     * Signaled when the #AppIndicator receives a scroll event.
+     */
+    signals[ACTIVATE_EVENT] = g_signal_new (APP_INDICATOR_SIGNAL_ACTIVATE_EVENT,
+                                      G_TYPE_FROM_CLASS(klass),
+                                      G_SIGNAL_RUN_LAST,
+                                      G_STRUCT_OFFSET (AppIndicatorClass, activate_event),
+                                      NULL, NULL,
+                                      _application_service_marshal_VOID__INT_UINT,
+                                      G_TYPE_NONE, 2, G_TYPE_INT, G_TYPE_INT);
+
     /* DBus interfaces */
     if (item_node_info == NULL) {
         GError * error = NULL;
 
         item_node_info = g_dbus_node_info_new_for_xml(_notification_item, &error);
         if (error != NULL) {
             g_error("Unable to parse Notification Item DBus interface: %s", error->message);
             g_error_free(error);
@@ -1343,17 +1360,20 @@ bus_method_call (GDBusConnection * conne
             direction = (delta >= 0) ? GDK_SCROLL_DOWN : GDK_SCROLL_UP;
         } else {
             g_dbus_method_invocation_return_value(invocation, retval);
             return;
         }
 
         delta = ABS(delta);
         g_signal_emit(app, signals[SCROLL_EVENT], 0, delta, direction);
-
+    } else if (g_strcmp0(method, "Activate") == 0) {
+        gint x, y;
+        g_variant_get(params, "(ii)", &x, &y);
+        g_signal_emit(app, signals[ACTIVATE_EVENT], 0, x, y);
     } else if (g_strcmp0(method, "SecondaryActivate") == 0 ||
                g_strcmp0(method, "XAyatanaSecondaryActivate") == 0) {
         GtkWidget *menuitem = priv->sec_activate_target;
 
         if (priv->sec_activate_enabled && menuitem &&
             gtk_widget_get_visible (menuitem) &&
             gtk_widget_get_sensitive (menuitem))
         {
diff --git a/third_party/appindicator/app-indicator.h b/third_party/appindicator/app-indicator.h
--- a/third_party/appindicator/app-indicator.h
+++ b/third_party/appindicator/app-indicator.h
@@ -112,24 +112,30 @@ G_BEGIN_DECLS
  *
  * String identifier for the #AppIndicator::new-icon-theme-path signal.
  */
 /**
  * APP_INDICATOR_SIGNAL_SCROLL_EVENT:
  *
  * String identifier for the #AppIndicator::scroll-event signal.
  */
+/**
+ * APP_INDICATOR_SIGNAL_ACTIVATE_EVENT:
+ *
+ * String identifier for the #AppIndicator::activate-event signal.
+ */
 #define APP_INDICATOR_SIGNAL_NEW_ICON            "new-icon"
 #define APP_INDICATOR_SIGNAL_NEW_ATTENTION_ICON  "new-attention-icon"
 #define APP_INDICATOR_SIGNAL_NEW_STATUS          "new-status"
 #define APP_INDICATOR_SIGNAL_NEW_LABEL           "new-label"
 #define APP_INDICATOR_SIGNAL_NEW_TOOLTIP         "new-tooltip"
 #define APP_INDICATOR_SIGNAL_CONNECTION_CHANGED  "connection-changed"
 #define APP_INDICATOR_SIGNAL_NEW_ICON_THEME_PATH "new-icon-theme-path"
 #define APP_INDICATOR_SIGNAL_SCROLL_EVENT        "scroll-event"
+#define APP_INDICATOR_SIGNAL_ACTIVATE_EVENT      "activate-event"
 
 /**
  * AppIndicatorCategory:
  * @APP_INDICATOR_CATEGORY_APPLICATION_STATUS: The indicator is used to display the status of the application.
  * @APP_INDICATOR_CATEGORY_COMMUNICATIONS: The application is used for communication with other people.
  * @APP_INDICATOR_CATEGORY_SYSTEM_SERVICES: A system indicator relating to something in the user's system.
  * @APP_INDICATOR_CATEGORY_HARDWARE: An indicator relating to the user's hardware.
  * @APP_INDICATOR_CATEGORY_OTHER: Something not defined in this enum, please don't use unless you really need it.
@@ -217,29 +223,33 @@ struct _AppIndicatorClass {
                                      gboolean          connected,
                                      gpointer          user_data);
 
     void (* scroll_event)           (AppIndicator * indicator,
                                      gint                  delta,
                                      GdkScrollDirection direction,
                                      gpointer          user_data);
 
+    void (* activate_event)         (AppIndicator * indicator,
+                                     gint                  x,
+                                     gint                  y,
+                                     gpointer          user_data);
+
     void (*app_indicator_reserved_ats)(void);
 
     /* Overridable Functions */
     GtkStatusIcon * (*fallback)     (AppIndicator * indicator);
     void (*unfallback)              (AppIndicator * indicator,
                                      GtkStatusIcon * status_icon);
 
     /* Reserved */
     void (*app_indicator_reserved_1)(void);
     void (*app_indicator_reserved_2)(void);
     void (*app_indicator_reserved_3)(void);
     void (*app_indicator_reserved_4)(void);
-    void (*app_indicator_reserved_5)(void);
 };
 
 /**
  * AppIndicator:
  * parent: Parent object.
  * priv: Internal data.
  *
  * An application indicator represents the values that are needed to show a
diff --git a/third_party/appindicator/betterbird-systray-icon.c b/third_party/appindicator/betterbird-systray-icon.c
--- a/third_party/appindicator/betterbird-systray-icon.c
+++ b/third_party/appindicator/betterbird-systray-icon.c
@@ -8,16 +8,20 @@
 #define TEXT_ICON_TOOLTIP "Text Icon Tooltip"
 
 GMainLoop * mainloop = NULL;
 static char icon_path0[PATH_MAX + 100];
 static char icon_pathN[PATH_MAX + 100];
 
 static int icon;
 
+static void activated (AppIndicator * self, gint x, gint y, gpointer data) {
+  fprintf(stderr, "*** Activated!!\n");
+}
+
 static gboolean change_icon0(AppIndicator *ci) {
   if (icon == 0) {
     fprintf(stderr, "Setting icon to %s and title to '%s 1'\n", icon_path0, TEXT_ICON_TITLE);
     app_indicator_set_icon_full(ci, icon_path0, NULL);
     app_indicator_set_title(ci, TEXT_ICON_TITLE " 1");
     app_indicator_set_tooltip_full(ci, NULL /* icon */, TEXT_ICON_TOOLTIP " 1", NULL);
     app_indicator_set_status(ci, APP_INDICATOR_STATUS_ACTIVE);
     icon = 1;
@@ -56,16 +60,18 @@ int main(int argc, char ** argv) {
 
   ci = app_indicator_new("Betterbird-systray-icon-test",
                          icon_path0,
                          APP_INDICATOR_CATEGORY_APPLICATION_STATUS);
 
   g_assert(IS_APP_INDICATOR(ci));
   g_assert(G_IS_OBJECT(ci));
 
+  g_signal_connect(ci, APP_INDICATOR_SIGNAL_ACTIVATE_EVENT, G_CALLBACK(activated), NULL);
+
   icon = 0;
   change_icon0(ci);
   g_timeout_add_seconds(5, change_icon, ci);
 
   mainloop = g_main_loop_new(NULL, FALSE);
   g_main_loop_run(mainloop);
 
   return 0;
diff --git a/third_party/appindicator/gen-notification-item.xml.c b/third_party/appindicator/gen-notification-item.xml.c
--- a/third_party/appindicator/gen-notification-item.xml.c
+++ b/third_party/appindicator/gen-notification-item.xml.c
@@ -21,16 +21,20 @@ const char * _notification_item =
 "		<property name=\"XAyatanaLabelGuide\" type=\"s\" access=\"read\" />\n"
 "		<property name=\"XAyatanaOrderingIndex\" type=\"u\" access=\"read\" />\n"
 "\n"
 "<!-- Methods -->\n"
 "		<method name=\"Scroll\">\n"
 "			<arg type=\"i\" name=\"delta\" direction=\"in\" />\n"
 "			<arg type=\"s\" name=\"orientation\" direction=\"in\" />\n"
 "		</method>\n"
+"		<method name=\"Activate\">\n"
+"			<arg type=\"i\" name=\"x\" direction=\"in\" />\n"
+"			<arg type=\"i\" name=\"y\" direction=\"in\" />\n"
+"		</method>\n"
 "		<method name=\"SecondaryActivate\">\n"
 "			<arg type=\"i\" name=\"x\" direction=\"in\" />\n"
 "			<arg type=\"i\" name=\"y\" direction=\"in\" />\n"
 "		</method>\n"
 "		<method name=\"XAyatanaSecondaryActivate\">\n"
 "			<arg type=\"u\" name=\"timestamp\" direction=\"in\" />\n"
 "		</method>\n"
 "\n"
