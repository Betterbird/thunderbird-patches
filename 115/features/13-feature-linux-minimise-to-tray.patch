# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1693170533 -10800
# Parent  220b3e9218f6ba4923e06e501c43315ce3248fdc
Feature: Minimise to tray for Linux.

Adapted from
https://hg.mozilla.org/comm-central/rev/d9c8e04388eb
and
https://hg.mozilla.org/comm-central/rev/0bc379dfb518

diff --git a/mail/app/profile/all-thunderbird.js b/mail/app/profile/all-thunderbird.js
--- a/mail/app/profile/all-thunderbird.js
+++ b/mail/app/profile/all-thunderbird.js
@@ -1338,19 +1338,22 @@ pref("toolkit.telemetry.updatePing.enabl
 pref("toolkit.telemetry.bhrPing.enabled", true);
 // Whether to enable Ecosystem Telemetry, requires a restart.
 #ifdef NIGHTLY_BUILD
   pref("toolkit.telemetry.ecosystemtelemetry.enabled", true);
 #else
   pref("toolkit.telemetry.ecosystemtelemetry.enabled", false);
 #endif
 
-#ifdef XP_WIN
+#if defined(XP_WIN) || defined(UNIX_BUT_NOT_MAC)
 pref("mail.minimizeToTray", false);
 #endif
+#ifdef UNIX_BUT_NOT_MAC
+pref("mail.minimizeToTray.supportedDesktops", "kde,gnome,xfce");
+#endif
 
 pref("prompts.defaultModalType", 3);
 pref("prompts.contentPromptSubDialog", false);
 
 // The URL for the privacy policy related to recommended extensions.
 pref("extensions.recommendations.privacyPolicyUrl", "https://www.mozilla.org/en-US/privacy/thunderbird/#addons");
 
 // Used by pdf.js to know the first time Thunderbird is run with it installed
diff --git a/mail/base/content/messenger.xhtml b/mail/base/content/messenger.xhtml
--- a/mail/base/content/messenger.xhtml
+++ b/mail/base/content/messenger.xhtml
@@ -143,19 +143,21 @@
   <script defer="defer" src="chrome://messenger/content/sync.js"></script>
 #endif
   <!-- panelUI.js is for the appmenus. -->
   <script defer="defer" src="chrome://messenger/content/panelUI.js"></script>
 #ifdef XP_MACOSX
   <script defer="defer" src="chrome://messenger/content/macMessengerMenu.js"></script>
   <script defer="defer" src="chrome://global/content/macWindowMenu.js"></script>
 #endif
-#ifdef XP_WIN
+#if defined(XP_WIN) || defined(XP_UNIX)
+#ifndef XP_MACOSX
   <script defer="defer" src="chrome://messenger/content/minimizeToTray.js"></script>
 #endif
+#endif
   <!-- calendar-management.js also needed for multiple calendar support and today pane -->
   <script defer="defer" src="chrome://calendar/content/calendar-management.js"></script>
   <script defer="defer" src="chrome://calendar/content/calendar-ui-utils.js"></script>
 
   <script defer="defer" src="chrome://calendar/content/calendar-tabs.js"></script>
   <script defer="defer" src="chrome://calendar/content/calendar-modes.js"></script>
 
   <script defer="defer" src="chrome://calendar/content/calendar-day-label.js"></script>
diff --git a/mail/base/content/minimizeToTray.js b/mail/base/content/minimizeToTray.js
--- a/mail/base/content/minimizeToTray.js
+++ b/mail/base/content/minimizeToTray.js
@@ -1,19 +1,23 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, you can obtain one at http://mozilla.org/MPL/2.0/. */
 
 /* globals docShell, Services, windowState */
 
+var { AppConstants } = ChromeUtils.import(
+  "resource://gre/modules/AppConstants.jsm"
+);
+
 addEventListener("sizemodechange", () => {
   if (
     windowState == window.STATE_MINIMIZED &&
     Services.prefs.getBoolPref("mail.minimizeToTray", false)
   ) {
     setTimeout(() => {
       var bw = docShell.treeOwner.QueryInterface(Ci.nsIBaseWindow);
       Cc["@mozilla.org/messenger/osintegration;1"]
-        .getService(Ci.nsIMessengerWindowsIntegration)
+        .getService(AppConstants.platform == "win" ? Ci.nsIMessengerWindowsIntegration : Ci.nsIMessengerUnixIntegration)
         .hideWindow(bw);
     });
   }
 });
diff --git a/mail/base/jar.mn b/mail/base/jar.mn
--- a/mail/base/jar.mn
+++ b/mail/base/jar.mn
@@ -52,17 +52,17 @@ messenger.jar:
     content/messenger/mailWindow.js                 (content/mailWindow.js)
     content/messenger/mailWindowOverlay.js          (content/mailWindowOverlay.js)
     content/messenger/messageWindow.js              (content/messageWindow.js)
 *   content/messenger/messageWindow.xhtml           (content/messageWindow.xhtml)
     content/messenger/messenger-customization.js    (content/messenger-customization.js)
     content/messenger/messenger.js                  (content/messenger.js)
 *   content/messenger/messenger.xhtml               (content/messenger.xhtml)
     content/messenger/webextensions.css             (content/webextensions.css)
-#ifdef XP_WIN
+#if defined(XP_WIN) || defined(XP_LINUX)
     content/messenger/minimizeToTray.js             (content/minimizeToTray.js)
 #endif
     content/messenger/migrationProgress.js          (content/migrationProgress.js)
     content/messenger/migrationProgress.xhtml       (content/migrationProgress.xhtml)
     content/messenger/msgHdrView.js                 (content/msgHdrView.js)
     content/messenger/msgSecurityPane.js            (content/msgSecurityPane.js)
     content/messenger/msgViewNavigation.js          (content/msgViewNavigation.js)
     content/messenger/multimessageview.js           (content/multimessageview.js)
diff --git a/mail/components/preferences/general.inc.xhtml b/mail/components/preferences/general.inc.xhtml
--- a/mail/components/preferences/general.inc.xhtml
+++ b/mail/components/preferences/general.inc.xhtml
@@ -99,22 +99,24 @@
                     unset-default-tooltip,
                     checkbox-email-label.label,
                     checkbox-newsgroups-label.label,
                     checkbox-feeds-label.label,
                     system-search-integration-label.label,
                     check-on-startup-label.label"/>
         </hbox>
       </hbox>
-#ifdef XP_WIN
+#if defined(XP_WIN) || defined(XP_UNIX)
+#ifndef XP_MACOSX
       <hbox align="start">
         <checkbox data-l10n-id="minimize-to-tray-label"
                   preference="mail.minimizeToTray"/>
       </hbox>
 #endif
+#endif
       <hbox id="searchIntegrationContainer">
         <checkbox id="searchIntegration"
                   preference="searchintegration.enable"
                   data-l10n-id="search-integration-label"/>
       </hbox>
       </vbox>
     </html:fieldset>
     </html:div>
diff --git a/mail/components/preferences/general.js b/mail/components/preferences/general.js
--- a/mail/components/preferences/general.js
+++ b/mail/components/preferences/general.js
@@ -91,17 +91,17 @@ Preferences.addAll([
   { id: "privacy.clearOnShutdown.cache", type: "bool" },
   { id: "layers.acceleration.disabled", type: "bool", inverted: true },
   { id: "searchintegration.enable", type: "bool" },
   { id: "mail.tabs.drawInTitlebar", type: "bool" },
   { id: "mail.tabs.autoHide", type: "bool" },
   { id: "mail.tabs.vertical", type: "bool" },
   { id: "mailnews.attachments.display.top", type: "bool" },
 ]);
-if (AppConstants.platform == "win") {
+if (AppConstants.platform == "win" || AppConstants.platform == "linux") {
   Preferences.add({ id: "mail.minimizeToTray", type: "bool" });
 }
 if (AppConstants.platform != "macosx") {
   Preferences.add({ id: "mail.biff.show_alert", type: "bool" });
 }
 
 var ICON_URL_APP = "";
 
diff --git a/mail/modules/MailUtils.jsm b/mail/modules/MailUtils.jsm
--- a/mail/modules/MailUtils.jsm
+++ b/mail/modules/MailUtils.jsm
@@ -357,16 +357,20 @@ var MailUtils = {
           return;
         }
       }
 
       if (Ci.nsIMessengerWindowsIntegration) {
         Cc["@mozilla.org/messenger/osintegration;1"]
           .getService(Ci.nsIMessengerWindowsIntegration)
           .showWindow(mail3PaneWindow);
+      } else if (Ci.nsIMessengerUnixIntegration) {
+        Cc["@mozilla.org/messenger/osintegration;1"]
+          .getService(Ci.nsIMessengerUnixIntegration)
+          .showWindow(mail3PaneWindow);
       }
       mail3PaneWindow.focus();
     } else {
       let args = { msgHdr };
       args.wrappedJSObject = args;
       Services.ww.openWindow(
         null,
         "chrome://messenger/content/messenger.xhtml",
diff --git a/mailnews/base/public/moz.build b/mailnews/base/public/moz.build
--- a/mailnews/base/public/moz.build
+++ b/mailnews/base/public/moz.build
@@ -65,16 +65,21 @@ XPIDL_SOURCES += [
     "nsMsgMessageFlags.idl",
 ]
 
 if CONFIG["OS_ARCH"] == "WINNT":
     XPIDL_SOURCES += [
         "nsIMessengerWindowsIntegration.idl",
     ]
 
+if CONFIG["OS_ARCH"] == "Linux":
+    XPIDL_SOURCES += [
+        "nsIMessengerUnixIntegration.idl",
+    ]
+
 XPIDL_MODULE = "msgbase"
 
 EXPORTS += [
     "MailNewsTypes.h",
     "msgCore.h",
     "nsMsgHeaderMasks.h",
     "nsMsgLocalFolderHdrs.h",
 ]
diff --git a/mailnews/base/public/nsIMessengerUnixIntegration.idl b/mailnews/base/public/nsIMessengerUnixIntegration.idl
new file mode 100644
--- /dev/null
+++ b/mailnews/base/public/nsIMessengerUnixIntegration.idl
@@ -0,0 +1,16 @@
+/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+interface mozIDOMWindowProxy;
+
+#include "nsIBaseWindow.idl"
+#include "nsIMessengerOSIntegration.idl"
+
+/* GUID from https://www.guidgenerator.com/online-guid-generator.aspx */
+[scriptable, uuid(ea26454c-2d5e-498c-87f0-95f93c51b8e6)]
+interface nsIMessengerUnixIntegration : nsIMessengerOSIntegration {
+  void hideWindow(in nsIBaseWindow aWindow);
+  void showWindow(in mozIDOMWindowProxy aWindow);
+};
diff --git a/mailnews/base/src/nsMessengerUnixIntegration.cpp b/mailnews/base/src/nsMessengerUnixIntegration.cpp
--- a/mailnews/base/src/nsMessengerUnixIntegration.cpp
+++ b/mailnews/base/src/nsMessengerUnixIntegration.cpp
@@ -1,66 +1,201 @@
 /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsMessengerUnixIntegration.h"
+#include "nsServiceManagerUtils.h"
+#include "nsCOMPtr.h"
+#include "nsCOMArray.h"
 #include "nsString.h"
 #include "../../../third_party/appindicator/app-indicator.h"
 #include "mozilla/Preferences.h"
+#include "mozIDOMWindow.h"
+#include "nsIBaseWindow.h"
+#include "nsIPrefService.h"
+#include "nsIWidget.h"
+#include "mozilla/WidgetUtilsGtk.h"
+#include "nsIWindowMediator.h"
+#include "nsPIDOMWindow.h"
+#include <time.h>
+
+#define SHOW_TRAY_ICON_PREF "mail.biff.show_tray_icon"
+#define SHOW_TRAY_ICON_ALWAYS_PREF "mail.biff.show_tray_icon_always"
+
+static nsCOMArray<nsIBaseWindow> sHiddenWindows;
+static uint32_t sLastUnreadCount;
+static nsAutoString sLastUnreadTooltip;
+static AppIndicator *ci = NULL;
+static struct timespec sTimeActivated;
+
+using namespace mozilla;
 
 nsMessengerUnixIntegration::nsMessengerUnixIntegration() {}
 
-NS_IMPL_ISUPPORTS(nsMessengerUnixIntegration, nsIMessengerOSIntegration)
+NS_IMPL_ADDREF(nsMessengerUnixIntegration)
+NS_IMPL_RELEASE(nsMessengerUnixIntegration)
+
+NS_INTERFACE_MAP_BEGIN(nsMessengerUnixIntegration)
+  NS_INTERFACE_MAP_ENTRY_AMBIGUOUS(nsISupports, nsIMessengerOSIntegration)
+  NS_INTERFACE_MAP_ENTRY(nsIMessengerUnixIntegration)
+  NS_INTERFACE_MAP_ENTRY(nsIMessengerOSIntegration)
+NS_INTERFACE_MAP_END
+
+static void activateWindow(mozIDOMWindowProxy* win) {
+  nsCOMPtr<nsPIDOMWindowOuter> privateWindow = nsPIDOMWindowOuter::From(win);
+  privateWindow->Focus(mozilla::dom::CallerType::System);
+}
+
+static void activated(AppIndicator* self, gint x, gint y, gpointer data) {
+  nsresult rv;
+  bool showTrayIcon = mozilla::Preferences::GetBool(SHOW_TRAY_ICON_PREF, false);
+  bool showTrayIconAlways = mozilla::Preferences::GetBool(SHOW_TRAY_ICON_ALWAYS_PREF, false);
+  if ((!showTrayIcon || !sLastUnreadCount) && !showTrayIconAlways) {
+    if (ci) {
+      app_indicator_set_status(ci, APP_INDICATOR_STATUS_PASSIVE);
+    }
+  }
+
+  // No minimized window, bring the most recent 3pane window to the front.
+  if (sHiddenWindows.Length() == 0) {
+    nsCOMPtr<nsIWindowMediator> windowMediator =
+        do_GetService(NS_WINDOWMEDIATOR_CONTRACTID, &rv);
+    NS_ENSURE_SUCCESS_VOID(rv);
+
+    nsCOMPtr<mozIDOMWindowProxy> domWindow;
+    rv = windowMediator->GetMostRecentWindow(u"mail:3pane",
+        getter_AddRefs(domWindow));
+    NS_ENSURE_SUCCESS_VOID(rv);
+    if (domWindow) {
+      activateWindow(domWindow);
+      return;
+    }
+  }
+
+  // Bring the minimized windows to the front.
+  for (uint32_t i = 0; i < sHiddenWindows.Length(); i++) {
+    auto window = sHiddenWindows.SafeElementAt(i);
+    if (!window) {
+      continue;
+    }
+    window->SetVisibility(true);
+
+    nsCOMPtr<nsIWidget> widget;
+    window->GetMainWidget(getter_AddRefs(widget));
+    if (!widget) {
+      continue;
+    }
+    // Raise the window, no good if it appears in the background.
+    // KDE works with just the `SetFocus()`, `gtk_window_present` was added for Gnome.
+    void* gtkWidget = widget->GetNativeData(NS_NATIVE_SHELLWIDGET);
+    //if (gtkWidget) gtk_window_present(GTK_WINDOW(gtkWidget));
+    if (gtkWidget) gtk_window_present_with_time(GTK_WINDOW(gtkWidget), (guint32)(g_get_monotonic_time() / 1000));
+    widget->SetFocus(nsIWidget::Raise::Yes, mozilla::dom::CallerType::System);
+  }
+
+  sHiddenWindows.Clear();
+  // Strangely we get "sizemodechange" event with STATE_MINIMIZED,
+  // so we ignore that for some milliseconds.
+  clock_gettime(CLOCK_MONOTONIC, &sTimeActivated);
+}
 
 NS_IMETHODIMP
 nsMessengerUnixIntegration::UpdateUnreadCount(uint32_t unreadCount,
                                               const nsAString& unreadTooltip) {
-  if (!mozilla::Preferences::GetBool("mail.biff.show_tray_icon", false)) return NS_OK;
+  sLastUnreadCount = unreadCount;
+  sLastUnreadTooltip = unreadTooltip;
 
-  static AppIndicator *ci = NULL;
+  if (!mozilla::Preferences::GetBool("mail.biff.show_tray_icon", false) &&
+      sHiddenWindows.Length() == 0) return NS_OK;
+
   static char icon_path0[PATH_MAX + 100];
   static char icon_pathN[PATH_MAX + 100];
 
   if (!ci) {
     // Find icon absolute path.
     size_t len = readlink("/proc/self/exe", icon_path0, PATH_MAX);
     char* q = icon_path0 + len - 1;
     while (*q != '/') q--;
     *q = 0;
     strcpy(icon_pathN, icon_path0);
     strcat(icon_path0, "/chrome/icons/default/default.svg");
     strcat(icon_pathN, "/chrome/icons/default/newmail.svg");
 
     ci = app_indicator_new("Betterbird-systray-icon",
                            unreadCount > 0 ? icon_pathN : icon_path0,
                            APP_INDICATOR_CATEGORY_APPLICATION_STATUS);
+    g_signal_connect(ci, APP_INDICATOR_SIGNAL_ACTIVATE_EVENT, G_CALLBACK(activated), NULL);
+
+    // Initialise to something non-zero, subtract a second
+    // so it predates any mimizing via "startup minimized".
+    clock_gettime(CLOCK_MONOTONIC, &sTimeActivated);
+    sTimeActivated.tv_sec--;
   }
 
   if (unreadCount > 0) {
     const nsCString& tooltip = NS_ConvertUTF16toUTF8(unreadTooltip);
     // Set both title and tooltip. It appears that some platforms do
     // one but not the other.
     app_indicator_set_title(ci, tooltip.get());
     app_indicator_set_tooltip_full(ci,
       NULL /* icon */, tooltip.get() /* title */, NULL /* body */
     );
     app_indicator_set_icon_full(ci, icon_pathN, NULL);
     app_indicator_set_status(ci, APP_INDICATOR_STATUS_ACTIVE);
   } else {
-    if (mozilla::Preferences::GetBool("mail.biff.show_tray_icon_always", false)) {
+    if (mozilla::Preferences::GetBool("mail.biff.show_tray_icon_always", false) ||
+      sHiddenWindows.Length() > 0) {
       app_indicator_set_title(ci, "Betterbird");
       app_indicator_set_tooltip_full(ci,
         NULL /* icon */, "Betterbird" /* title */, NULL /* body */
       );
       app_indicator_set_icon_full(ci, icon_path0, NULL);
       app_indicator_set_status(ci, APP_INDICATOR_STATUS_ACTIVE);
     } else {
       app_indicator_set_status(ci, APP_INDICATOR_STATUS_PASSIVE);
     }
   }
 
   return NS_OK;
 }
 
 NS_IMETHODIMP
 nsMessengerUnixIntegration::OnExit() { return NS_OK; }
+
+nsresult nsMessengerUnixIntegration::HideWindow(nsIBaseWindow* aWindow) {
+  NS_ENSURE_ARG(aWindow);
+  struct timespec now;
+  clock_gettime(CLOCK_MONOTONIC, &now);
+  // Ignore any hiding for 500ms.
+  int64_t timediff =
+    (now.tv_sec - sTimeActivated.tv_sec) * 1000 +
+    (now.tv_nsec - sTimeActivated.tv_nsec) / 1000000;
+  if (timediff < 500) {
+    return NS_OK;
+  }
+
+  nsAutoCString prefValue;
+  mozilla::Preferences::GetCString("mail.minimizeToTray.supportedDesktops", prefValue);
+  const nsCString& desktop = mozilla::widget::GetDesktopEnvironmentIdentifier();
+  if (!FindInReadable(desktop, prefValue)) {
+    fprintf(stderr, "Betterbird: Window NOT minimized to system tray!\n");
+    fprintf(stderr, "            You are using desktop environment %s.\n", desktop.get());
+    fprintf(stderr, "            Minimize to system tray is only supported for these desktops:\n");
+    fprintf(stderr, "            %s.\n", prefValue.get());
+    fprintf(stderr, "            As an experiment, add %s to preference\n", desktop.get());
+    fprintf(stderr, "            mail.minimizeToTray.supportedDesktops.\n");
+    fprintf(stderr, "            You might not be able to maximize the window again and\n");
+    fprintf(stderr, "            will have to kill Betterbird.\n");
+    fprintf(stderr, "            USE AT YOUR OWN RISK! If successful, contact support@betterbird.eu\n\n");
+    return NS_OK;
+  }
+  aWindow->SetVisibility(false);
+  sHiddenWindows.AppendElement(aWindow);
+  UpdateUnreadCount(sLastUnreadCount, sLastUnreadTooltip);
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+nsMessengerUnixIntegration::ShowWindow(mozIDOMWindowProxy* aWindow) {
+  activateWindow(aWindow);
+  return NS_OK;
+}
diff --git a/mailnews/base/src/nsMessengerUnixIntegration.h b/mailnews/base/src/nsMessengerUnixIntegration.h
--- a/mailnews/base/src/nsMessengerUnixIntegration.h
+++ b/mailnews/base/src/nsMessengerUnixIntegration.h
@@ -1,22 +1,23 @@
 /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #ifndef __nsMessengerUnixIntegration_h
 #define __nsMessengerUnixIntegration_h
 
-#include "nsIMessengerOSIntegration.h"
+#include "nsIMessengerUnixIntegration.h"
 
-class nsMessengerUnixIntegration : public nsIMessengerOSIntegration {
+class nsMessengerUnixIntegration : public nsIMessengerUnixIntegration {
  public:
   nsMessengerUnixIntegration();
 
   NS_DECL_ISUPPORTS
   NS_DECL_NSIMESSENGEROSINTEGRATION
+  NS_DECL_NSIMESSENGERUNIXINTEGRATION
 
  private:
   virtual ~nsMessengerUnixIntegration() {}
 };
 
 #endif  // __nsMessengerUnixIntegration_h
