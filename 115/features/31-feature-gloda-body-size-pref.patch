# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1727799286 -7200
# Parent  041c547e1b2a0c7ed2b7547995f299c467dd4bca
Feature: Configurable max. Gloda body size.

diff --git a/mailnews/db/gloda/components/MimeMessageEmitter.jsm b/mailnews/db/gloda/components/MimeMessageEmitter.jsm
--- a/mailnews/db/gloda/components/MimeMessageEmitter.jsm
+++ b/mailnews/db/gloda/components/MimeMessageEmitter.jsm
@@ -17,9 +17,16 @@ var kStateInAttachment = 3;
  *  against my indexed e-mail and finding the point where these things taper
  *  off.  I chose 20 because things had tapered off pretty firmly by 16, so
  *  20 gave it some space and it was also the end of a mini-plateau.
  */
-var MAX_SANE_BODY_PART_SIZE = 20 * 1024;
+// 20 * 1024 = 20480 used to be hard-coded leading to missing search hits for bug messages.
+var MAX_SANE_BODY_PART_SIZE = Math.max(
+  20480,
+  Services.prefs.getIntPref(
+    "mailnews.database.global.indexer.max_body_part_size",
+    20480
+  )
+);
 
 /**
  * Custom nsIMimeEmitter to build a sub-optimal javascript representation of a
  *  MIME message.  The intent is that a better mechanism than is evolved to
diff --git a/mailnews/mailnews.js b/mailnews/mailnews.js
--- a/mailnews/mailnews.js
+++ b/mailnews/mailnews.js
@@ -1127,8 +1127,10 @@ pref("gloda.test.loglevel", "Warn");
 // See more: https://developer.mozilla.org/en/Thunderbird/gloda#Cache_Size"
 pref("mailnews.database.global.datastore.cache_to_memory_permillage", 10);
 // Enable search in encrypted parts. Conservatively switched off.
 pref("mailnews.database.global.indexer.examine_encrypted_parts", false);
+// 20 * 1024 used to be hard-coded leading to missing search hits for big messages.
+pref("mailnews.database.global.indexer.max_body_part_size", 20480);
 
 // default field order in the fieldmap
 pref("mailnews.import.text.fieldmap", "+0,+1,+2,+3,+4,+5,+36,+6,+7,+8,+9,+10,+11,+12,+13,+14,+15,+16,+17,+18,+19,+20,+21,+22,+23,+24,+25,+26,+27,+28,+29,+30,+31,+32,+33,+34,+35");
 
