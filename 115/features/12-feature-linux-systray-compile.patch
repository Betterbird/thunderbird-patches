# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Parent  e6252167efa0bd81d8feb55540a020996731640c
Feature: Linux systray: Tweaks for compiling/linking.

Adjust #include <libayatana-indicator/indicator-desktop-shortcuts.h> in app-indicator.c
Removed code related to PROP_DBUS_MENU_SERVER, 2x in app-indicator.c.

diff --git a/third_party/appindicator/app-indicator.c b/third_party/appindicator/app-indicator.c
--- a/third_party/appindicator/app-indicator.c
+++ b/third_party/appindicator/app-indicator.c
@@ -34,17 +34,17 @@ License version 3 and version 2.1 along 
 #define _GNU_SOURCE
 #include <stdlib.h>
 
 #include <libdbusmenu-glib/menuitem.h>
 #include <libdbusmenu-glib/server.h>
 #include <libdbusmenu-gtk/client.h>
 #include <libdbusmenu-gtk/parser.h>
 
-#include <libayatana-indicator/indicator-desktop-shortcuts.h>
+#include "indicator-desktop-shortcuts.h"
 
 #include <stdlib.h>
 
 #include "app-indicator.h"
 #include "app-indicator-enum-types.h"
 #include "application-service-marshal.h"
 
 #include "gen-notification-watcher.xml.h"
@@ -467,23 +467,25 @@ app_indicator_class_init (AppIndicatorCl
 	                                                   G_PARAM_READWRITE | G_PARAM_STATIC_STRINGS));
 
 	/**
 	 * AppIndicator:dbus-menu-server:
 	 *
 	 * A way to get the internal dbusmenu server if it is available.
 	 * This should only be used for testing.
 	 */
+    /*
 	g_object_class_install_property(object_class,
 	                                PROP_DBUS_MENU_SERVER,
 	                                g_param_spec_object (PROP_DBUS_MENU_SERVER_S,
 	                                                     "The internal DBusmenu Server",
 	                                                     "DBusmenu server which is available for testing the application indicators.",
 	                                                     DBUSMENU_TYPE_SERVER,
 	                                                     G_PARAM_READWRITE | G_PARAM_STATIC_STRINGS));
+    */
 	/**
 	 * AppIndicator:title:
 	 *
 	 * Provides a way to refer to this application indicator in a human
 	 * readable form.  This is used in the Unity desktop in the HUD as
 	 * the first part of the menu entries to distinguish them from the
 	 * focused application's entries.
 	 */
@@ -1016,20 +1018,22 @@ app_indicator_set_property (GObject * ob
 		  	g_free(oldguide);
 		  }
 		  break;
 		}
 		case PROP_ORDERING_INDEX:
 		  priv->ordering_index = g_value_get_uint(value);
 		  break;
 
+        /*
 		case PROP_DBUS_MENU_SERVER:
 			g_clear_object (&priv->menuservice);
 			priv->menuservice = DBUSMENU_SERVER (g_value_dup_object(value));
 			break;
+        */
 
         default:
           G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
           break;
         }
 
 	return;
 }
