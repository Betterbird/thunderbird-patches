# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1625857797 -7200
# Parent  c37133ccd92a4187c13f0b7ad0dc8b0fff8416c2
Misc: Add update check and fix release notes link.

diff --git a/mail/app/profile/all-thunderbird.js b/mail/app/profile/all-thunderbird.js
--- a/mail/app/profile/all-thunderbird.js
+++ b/mail/app/profile/all-thunderbird.js
@@ -71,17 +71,17 @@ pref("app.update.service.enabled", true)
 #endif
 
 #ifdef XP_WIN
 // This pref prevents BITS from being used by Thunderbird to download updates.
 pref("app.update.BITS.enabled", false);
 #endif
 
 // Release notes URL
-pref("app.releaseNotesURL", "https://live.thunderbird.net/%APP%/releasenotes?locale=%LOCALE%&version=%VERSION%&channel=%CHANNEL%&os=%OS%&buildid=%APPBUILDID%");
+pref("app.releaseNotesURL", "https://www.betterbird.eu/releasenotes?locale=%LOCALE%&version=%VERSION%&channel=%CHANNEL%&os=%OS%&buildid=%APPBUILDID%");
 
 // URL for "Learn More" for DataCollection
 pref("toolkit.datacollection.infoURL",
      "https://www.mozilla.org/thunderbird/legal/privacy/#telemetry");
 
 // URL for "Learn More" for Crash Reporter.
 pref("toolkit.crashreporter.infoURL",
      "https://www.mozilla.org/thunderbird/legal/privacy/#crash-reporter");
diff --git a/mail/base/content/aboutDialog.css b/mail/base/content/aboutDialog.css
--- a/mail/base/content/aboutDialog.css
+++ b/mail/base/content/aboutDialog.css
@@ -81,8 +81,15 @@
   margin: 0 40px;
 }
 
 #currentChannel {
   margin: 0;
   padding: 0;
   font-weight: bold;
 }
+
+#noUpdatesFound label {
+  margin-inline-start: 0;
+}
+#manualUpdate label {
+  margin-inline-start: 0;
+}
diff --git a/mail/base/content/aboutDialog.js b/mail/base/content/aboutDialog.js
--- a/mail/base/content/aboutDialog.js
+++ b/mail/base/content/aboutDialog.js
@@ -7,17 +7,17 @@
 "use strict";
 
 // Services = object with smart getters for common XPCOM services
 var { Services } = ChromeUtils.import("resource://gre/modules/Services.jsm");
 var { AppConstants } = ChromeUtils.import(
   "resource://gre/modules/AppConstants.jsm"
 );
 
-function init(aEvent) {
+async function init(aEvent) {
   if (aEvent.target != document) {
     return;
   }
 
   try {
     var distroId = Services.prefs.getCharPref("distribution.id");
     if (distroId) {
       var distroVersion = Services.prefs.getCharPref("distribution.version");
@@ -87,26 +87,62 @@ function init(aEvent) {
   if (AppConstants.MOZ_UPDATER) {
     gAppUpdater = new appUpdater({ buttonAutoFocus: true });
 
     let defaults = Services.prefs.getDefaultBranch("");
     let channelLabel = document.getElementById("currentChannel");
     channelLabel.value = defaults.getCharPref("app.update.channel");
   }
 
+  await BetterbirdUpdateCheck();
+
   window.sizeToContent();
 
   if (AppConstants.platform == "macosx") {
     window.moveTo(
       screen.availWidth / 2 - window.outerWidth / 2,
       screen.availHeight / 5
     );
   }
 }
 
+async function BetterbirdUpdateCheck() {
+  try {
+    let response = await fetch("https://www.betterbird.eu/start/versions.txt", {cache: "no-store"});
+    if (!response.ok) {
+      return;
+    }
+    let content = await response.text();
+    let lines = content.split("\n");
+    let version = Services.appinfo.version;
+    let buildID = Services.appinfo.appBuildID;
+    let appLocale = Services.locale.appLocalesAsBCP47[0];
+    for (let l of lines) {
+      let parts = l.split(",");
+      // Format is locale,version,buildid.
+      if (version.startsWith(parts[1]) && appLocale == parts[0]) {
+        if (parts[2] <= buildID) {
+          // Up to date.
+          let el = document.getElementById("noUpdatesFound");
+          el.hidden = false;
+        } else {
+          // Needs update.
+          let el = document.getElementById("manualUpdate");
+          el.hidden = false;
+          el = document.getElementById("manualLink");
+          el.setAttribute(
+            "onclick",
+            'openLink("https://www.betterbird.eu/downloads/");'
+          );
+        }
+      }
+    }
+  } catch (ex) {}
+}
+
 // This function is used to open about: tabs. The caller should ensure the url
 // is only an about: url.
 function openAboutTab(url) {
   // Check existing windows
   let mailWindow = Services.wm.getMostRecentWindow("mail:3pane");
   if (mailWindow) {
     mailWindow.focus();
     mailWindow.document
diff --git a/mail/base/content/aboutDialog.xhtml b/mail/base/content/aboutDialog.xhtml
--- a/mail/base/content/aboutDialog.xhtml
+++ b/mail/base/content/aboutDialog.xhtml
@@ -48,16 +48,24 @@
           <label is="text-link" id="releasenotes" hidden="true">&releaseNotes.link;</label>
         </hbox>
 
         <label id="distribution" class="text-blurb"/>
         <label id="distributionId" class="text-blurb"/>
 
         <vbox id="detailsBox">
           <vbox id="updateBox">
+#ifdef BETTERBIRD
+          <hbox id="noUpdatesFound" align="center" hidden="true">
+            <label>&update.noUpdatesFound;</label>
+          </hbox>
+          <hbox id="manualUpdate" align="center" hidden="true">
+            <label>&update.manual.start;</label><label is="text-link" id="manualLink">&update.manual.linkText;</label><label>&update.manual.end;</label>
+          </hbox>
+#endif
 #ifdef MOZ_UPDATER
             <stack id="updateDeck" orient="vertical">
               <hbox id="checkForUpdates" align="center">
                 <button id="checkForUpdatesButton" align="start"
                         label="&update.checkForUpdatesButton.label;"
                         accesskey="&update.checkForUpdatesButton.accesskey;"
                         oncommand="gAppUpdater.checkForUpdates();"/>
                 <spacer flex="1"/>
