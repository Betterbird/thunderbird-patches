# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1638298040 -3600
# Parent  749b36266969ca3dc1a36e8800aa83adffc81feb
Misc: Change user agent string.

diff --git a/mailnews/compose/src/MimeMessage.jsm b/mailnews/compose/src/MimeMessage.jsm
--- a/mailnews/compose/src/MimeMessage.jsm
+++ b/mailnews/compose/src/MimeMessage.jsm
@@ -156,20 +156,22 @@ class MimeMessage {
         .msgGenerateMessageId(this._userIdentity);
       this._compFields.messageId = messageId;
     }
     let headers = new Map([
       ["message-id", messageId],
       ["date", new Date()],
       ["mime-version", "1.0"],
       [
+        // Since we didn't change MOZ_APP_BASENAME, we need to hack the
+        // user agent here. Not so nice if they used an override.
         "user-agent",
         Cc["@mozilla.org/network/protocol;1?name=http"].getService(
           Ci.nsIHttpProtocolHandler
-        ).userAgent,
+        ).userAgent.replace("Thunderbird", "Betterbird"),
       ],
     ]);
 
     for (let headerName of [...this._compFields.headerNames]) {
       let headerContent = this._compFields.getRawHeader(headerName);
       if (headerContent) {
         headers.set(headerName, headerContent);
       }
diff --git a/mailnews/compose/src/nsMsgCompUtils.cpp b/mailnews/compose/src/nsMsgCompUtils.cpp
--- a/mailnews/compose/src/nsMsgCompUtils.cpp
+++ b/mailnews/compose/src/nsMsgCompUtils.cpp
@@ -300,19 +300,24 @@ nsresult mime_generate_headers(nsIMsgCom
 
   nsCOMPtr<nsIHttpProtocolHandler> pHTTPHandler =
       do_GetService(NS_NETWORK_PROTOCOL_CONTRACTID_PREFIX "http", &rv);
   if (NS_SUCCEEDED(rv) && pHTTPHandler) {
     nsAutoCString userAgentString;
     // Ignore error since we're testing the return value.
     mozilla::Unused << pHTTPHandler->GetUserAgent(userAgentString);
 
-    if (!userAgentString.IsEmpty())
+    if (!userAgentString.IsEmpty()) {
+      // Since we didn't change MOZ_APP_BASENAME, we need to hack the user agent
+      // here. Not so nice if they used an override.
+      int32_t ind = userAgentString.Find("Thunderbird"_ns);
+      if (ind != kNotFound) userAgentString.Replace(ind, 11, "Betterbird"_ns);
       finalHeaders->SetUnstructuredHeader(
           "User-Agent", NS_ConvertUTF8toUTF16(userAgentString));
+    }
   }
 
   finalHeaders->SetUnstructuredHeader("MIME-Version", u"1.0"_ns);
 
   nsAutoCString newsgroups;
   finalHeaders->GetRawHeader("Newsgroups", newsgroups);
   if (!newsgroups.IsEmpty()) {
     // Since the newsgroup header can contain data in the form of:
diff --git a/mailnews/extensions/mdn/nsMsgMdnGenerator.cpp b/mailnews/extensions/mdn/nsMsgMdnGenerator.cpp
--- a/mailnews/extensions/mdn/nsMsgMdnGenerator.cpp
+++ b/mailnews/extensions/mdn/nsMsgMdnGenerator.cpp
@@ -589,16 +589,21 @@ nsresult nsMsgMdnGenerator::CreateSecond
   nsCOMPtr<nsIHttpProtocolHandler> pHTTPHandler =
       do_GetService(NS_NETWORK_PROTOCOL_CONTRACTID_PREFIX "http", &rv);
   if (NS_SUCCEEDED(rv) && pHTTPHandler) {
     nsAutoCString userAgentString;
     // Ignore error since we're testing the return value.
     mozilla::Unused << pHTTPHandler->GetUserAgent(userAgentString);
 
     if (!userAgentString.IsEmpty()) {
+      // Since we didn't change MOZ_APP_BASENAME, we need to hack the user agent
+      // here. Not so nice if they used an override.
+      int32_t ind = userAgentString.Find("Thunderbird"_ns);
+      if (ind != kNotFound) userAgentString.Replace(ind, 11, "Betterbird"_ns);
+
       // Prepend the product name with the dns name according to RFC 3798.
       char hostName[256];
       PR_GetSystemInfo(PR_SI_HOSTNAME_UNTRUNCATED, hostName, sizeof hostName);
       if ((hostName[0] != '\0') && (strchr(hostName, '.') != NULL)) {
         userAgentString.InsertLiteral("; ", 0);
         userAgentString.Insert(nsDependentCString(hostName), 0);
       }
 
