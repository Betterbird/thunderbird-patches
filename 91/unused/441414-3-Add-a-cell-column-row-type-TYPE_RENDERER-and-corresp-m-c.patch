# vim: se ft=diff :
# HG changeset patch
# User Yonggang Luo <luoyonggang@gmail.com>
# Date 1630669066 -7200
# Parent  30ead938c0237450ab227836e1caa6782a80b5ac
Add a cell/column/row type TYPE_RENDERER and correspond CSS selector :-moz-tree-renderer

diff --git a/dom/webidl/TreeColumn.webidl b/dom/webidl/TreeColumn.webidl
--- a/dom/webidl/TreeColumn.webidl
+++ b/dom/webidl/TreeColumn.webidl
@@ -17,16 +17,17 @@ interface TreeColumn {
   readonly attribute long index;
 
   readonly attribute boolean primary;
   readonly attribute boolean cycler;
   readonly attribute boolean editable;
 
   const short TYPE_TEXT                = 1;
   const short TYPE_CHECKBOX            = 2;
+  const short TYPE_RENDERER            = 3;
   readonly attribute short type;
 
   TreeColumn? getNext();
   TreeColumn? getPrevious();
 
   /**
    * Returns the previous displayed column, if any, accounting for
    * the ordinals set on the columns.
diff --git a/layout/style/nsCSSAnonBoxList.h b/layout/style/nsCSSAnonBoxList.h
--- a/layout/style/nsCSSAnonBoxList.h
+++ b/layout/style/nsCSSAnonBoxList.h
@@ -144,16 +144,17 @@ CSS_WRAPPER_ANON_BOX(rubyTextContainer, 
 CSS_ANON_BOX(mozTreeColumn, ":-moz-tree-column")
 CSS_ANON_BOX(mozTreeRow, ":-moz-tree-row")
 CSS_ANON_BOX(mozTreeSeparator, ":-moz-tree-separator")
 CSS_ANON_BOX(mozTreeCell, ":-moz-tree-cell")
 CSS_ANON_BOX(mozTreeIndentation, ":-moz-tree-indentation")
 CSS_ANON_BOX(mozTreeLine, ":-moz-tree-line")
 CSS_ANON_BOX(mozTreeTwisty, ":-moz-tree-twisty")
 CSS_ANON_BOX(mozTreeImage, ":-moz-tree-image")
+CSS_ANON_BOX(mozTreeRenderer, ":-moz-tree-renderer")
 CSS_ANON_BOX(mozTreeCellText, ":-moz-tree-cell-text")
 CSS_ANON_BOX(mozTreeCheckbox, ":-moz-tree-checkbox")
 CSS_ANON_BOX(mozTreeDropFeedback, ":-moz-tree-drop-feedback")
 #endif
 
 CSS_ANON_BOX(mozSVGMarkerAnonChild, ":-moz-svg-marker-anon-child")
 CSS_ANON_BOX(mozSVGOuterSVGAnonChild, ":-moz-svg-outer-svg-anon-child")
 CSS_ANON_BOX(mozSVGForeignContent, ":-moz-svg-foreign-content")
diff --git a/layout/xul/tree/nsTreeColumns.cpp b/layout/xul/tree/nsTreeColumns.cpp
--- a/layout/xul/tree/nsTreeColumns.cpp
+++ b/layout/xul/tree/nsTreeColumns.cpp
@@ -173,23 +173,26 @@ void nsTreeColumn::Invalidate(ErrorResul
   mIsEditable = mContent->AttrValueIs(kNameSpaceID_None, nsGkAtoms::editable,
                                       nsGkAtoms::_true, eCaseMatters);
 
   mOverflow = mContent->AttrValueIs(kNameSpaceID_None, nsGkAtoms::overflow,
                                     nsGkAtoms::_true, eCaseMatters);
 
   // Figure out our column type. Default type is text.
   mType = TreeColumn_Binding::TYPE_TEXT;
-  static Element::AttrValuesArray typestrings[] = {nsGkAtoms::checkbox,
-                                                   nullptr};
+  static Element::AttrValuesArray typestrings[] = {
+      nsGkAtoms::checkbox, nsGkAtoms::renderer, nullptr};
   switch (mContent->FindAttrValueIn(kNameSpaceID_None, nsGkAtoms::type,
                                     typestrings, eCaseMatters)) {
     case 0:
       mType = TreeColumn_Binding::TYPE_CHECKBOX;
       break;
+    case 1:
+      mType = TreeColumn_Binding::TYPE_RENDERER;
+      break;
   }
 
   // Fetch the crop style.
   mCropStyle = 0;
   static Element::AttrValuesArray cropstrings[] = {
       nsGkAtoms::center, nsGkAtoms::left, nsGkAtoms::start, nullptr};
   switch (mContent->FindAttrValueIn(kNameSpaceID_None, nsGkAtoms::crop,
                                     cropstrings, eCaseMatters)) {
diff --git a/xpcom/ds/StaticAtoms.py b/xpcom/ds/StaticAtoms.py
--- a/xpcom/ds/StaticAtoms.py
+++ b/xpcom/ds/StaticAtoms.py
@@ -1027,16 +1027,17 @@ STATIC_ATOMS = [
     Atom("readonly", "readonly"),
     Atom("rect", "rect"),
     Atom("rectangle", "rectangle"),
     Atom("refresh", "refresh"),
     Atom("rel", "rel"),
     Atom("rem", "rem"),
     Atom("remote", "remote"),
     Atom("removeelement", "removeelement"),
+    Atom("renderer", "renderer"),
     Atom("renderingobserverset", "renderingobserverset"),
     Atom("repeat", "repeat"),
     Atom("replace", "replace"),
     Atom("requestcontextid", "requestcontextid"),
     Atom("required", "required"),
     Atom("reserved", "reserved"),
     Atom("reset", "reset"),
     Atom("resizeafter", "resizeafter"),
@@ -2498,16 +2499,17 @@ STATIC_ATOMS = [
     InheritingAnonBoxAtom("AnonBox_mozTreeColumn", ":-moz-tree-column"),
     InheritingAnonBoxAtom("AnonBox_mozTreeRow", ":-moz-tree-row"),
     InheritingAnonBoxAtom("AnonBox_mozTreeSeparator", ":-moz-tree-separator"),
     InheritingAnonBoxAtom("AnonBox_mozTreeCell", ":-moz-tree-cell"),
     InheritingAnonBoxAtom("AnonBox_mozTreeIndentation", ":-moz-tree-indentation"),
     InheritingAnonBoxAtom("AnonBox_mozTreeLine", ":-moz-tree-line"),
     InheritingAnonBoxAtom("AnonBox_mozTreeTwisty", ":-moz-tree-twisty"),
     InheritingAnonBoxAtom("AnonBox_mozTreeImage", ":-moz-tree-image"),
+    InheritingAnonBoxAtom("AnonBox_mozTreeRenderer", ":-moz-tree-renderer"),
     InheritingAnonBoxAtom("AnonBox_mozTreeCellText", ":-moz-tree-cell-text"),
     InheritingAnonBoxAtom("AnonBox_mozTreeCheckbox", ":-moz-tree-checkbox"),
     InheritingAnonBoxAtom("AnonBox_mozTreeDropFeedback", ":-moz-tree-drop-feedback"),
     InheritingAnonBoxAtom("AnonBox_mozSVGMarkerAnonChild", ":-moz-svg-marker-anon-child"),
     InheritingAnonBoxAtom("AnonBox_mozSVGOuterSVGAnonChild", ":-moz-svg-outer-svg-anon-child"),
     InheritingAnonBoxAtom("AnonBox_mozSVGForeignContent", ":-moz-svg-foreign-content"),
     InheritingAnonBoxAtom("AnonBox_mozSVGText", ":-moz-svg-text"),
     # END ATOMS
