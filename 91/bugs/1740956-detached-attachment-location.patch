# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1636888095 -3600
# Parent  c6294a3fa89f4335a911fd2259aee56ca829b43d
Bug 1740956 - Print detached attachment's location in attachment list.

diff --git a/mail/themes/linux/mail/messageBody.css b/mail/themes/linux/mail/messageBody.css
--- a/mail/themes/linux/mail/messageBody.css
+++ b/mail/themes/linux/mail/messageBody.css
@@ -174,30 +174,34 @@ img[overflowing][shrinktofit] {
 
 .mimeAttachmentWrap {
   padding: 0 1em;
 }
 
 .mimeAttachmentTable {
   width: 100%;
   border-collapse: collapse;
-  table-layout: fixed;
 }
 
 .mimeAttachmentTable tr + tr > td {
   border-top: 1px solid GrayText;
   padding-top: 0.25em;
 }
 
 .mimeAttachmentFile {
   word-wrap: break-word;
 }
 
 .mimeAttachmentSize {
   vertical-align: top;
-  width: 10ch;
   text-align: right;
 }
 
+.mimeAttachmentURL {
+  vertical-align: top;
+  text-align: left;
+}
+
 .mimeAttachmentFile,
-.mimeAttachmentSize {
+.mimeAttachmentSize,
+.mimeAttachmentURL {
   padding: 0 0 0.25em;
 }
diff --git a/mail/themes/osx/mail/messageBody.css b/mail/themes/osx/mail/messageBody.css
--- a/mail/themes/osx/mail/messageBody.css
+++ b/mail/themes/osx/mail/messageBody.css
@@ -175,30 +175,34 @@ img[overflowing][shrinktofit] {
 
 .mimeAttachmentWrap {
   padding: 0 1em;
 }
 
 .mimeAttachmentTable {
   width: 100%;
   border-collapse: collapse;
-  table-layout: fixed;
 }
 
 .mimeAttachmentTable tr + tr > td {
   border-top: 1px solid GrayText;
   padding-top: 0.25em;
 }
 
 .mimeAttachmentFile {
   word-wrap: break-word;
 }
 
 .mimeAttachmentSize {
   vertical-align: top;
-  width: 10ch;
   text-align: right;
 }
 
+.mimeAttachmentURL {
+  vertical-align: top;
+  text-align: left;
+}
+
 .mimeAttachmentFile,
-.mimeAttachmentSize {
+.mimeAttachmentSize,
+.mimeAttachmentURL {
   padding: 0 0 0.25em;
 }
diff --git a/mail/themes/windows/mail/messageBody.css b/mail/themes/windows/mail/messageBody.css
--- a/mail/themes/windows/mail/messageBody.css
+++ b/mail/themes/windows/mail/messageBody.css
@@ -174,30 +174,34 @@ img[overflowing][shrinktofit] {
 
 .mimeAttachmentWrap {
   padding: 0 1em;
 }
 
 .mimeAttachmentTable {
   width: 100%;
   border-collapse: collapse;
-  table-layout: fixed;
 }
 
 .mimeAttachmentTable tr + tr > td {
   border-top: 1px solid GrayText;
   padding-top: 0.25em;
 }
 
 .mimeAttachmentFile {
   word-wrap: break-word;
 }
 
 .mimeAttachmentSize {
   vertical-align: top;
-  width: 10ch;
   text-align: right;
 }
 
+.mimeAttachmentURL {
+  vertical-align: top;
+  text-align: left;
+}
+
 .mimeAttachmentFile,
-.mimeAttachmentSize {
+.mimeAttachmentSize,
+.mimeAttachmentURL {
   padding: 0 0 0.25em;
 }
diff --git a/mailnews/mime/emitters/nsMimeHtmlEmitter.cpp b/mailnews/mime/emitters/nsMimeHtmlEmitter.cpp
--- a/mailnews/mime/emitters/nsMimeHtmlEmitter.cpp
+++ b/mailnews/mime/emitters/nsMimeHtmlEmitter.cpp
@@ -447,34 +447,46 @@ nsresult nsMimeHtmlDisplayEmitter::Start
 
 nsresult nsMimeHtmlDisplayEmitter::AddAttachmentField(const char* field,
                                                       const char* value) {
   if (mSkipAttachment) return NS_OK;
 
   // Don't let bad things happen
   if (!value || !*value) return NS_OK;
 
-  // Don't output this ugly header...
-  if (!strcmp(field, HEADER_X_MOZILLA_PART_URL)) return NS_OK;
-
   nsCOMPtr<nsIMsgHeaderSink> headerSink;
   nsresult rv = GetHeaderSink(getter_AddRefs(headerSink));
   if (NS_SUCCEEDED(rv) && headerSink) {
     headerSink->AddAttachmentField(field, value);
   }
 
-  // Currently, we only care about the part size.
-  if (strcmp(field, HEADER_X_MOZILLA_PART_SIZE)) return NS_OK;
-
-  uint64_t size = atoi(value);
-  nsAutoString sizeString;
-  rv = FormatFileSize(size, false, sizeString);
-  UtilityWrite("<td class=\"mimeAttachmentSize\">");
-  UtilityWrite(NS_ConvertUTF16toUTF8(sizeString).get());
-  UtilityWrite("</td>");
+  if (strcmp(field, HEADER_X_MOZILLA_PART_SIZE) == 0) {
+    uint64_t size = atoi(value);
+    nsAutoString sizeString;
+    rv = FormatFileSize(size, false, sizeString);
+    UtilityWrite("<td class=\"mimeAttachmentSize\">");
+    UtilityWrite(NS_ConvertUTF16toUTF8(sizeString).get());
+    UtilityWrite("</td>");
+  } else if (strcmp(field, HEADER_X_MOZILLA_PART_URL) == 0) {
+    // Only output this for detached and external attachments.
+    if (strncmp(value, "file://", 7) == 0 ||
+        strncmp(value, "http://", 7) == 0 ||
+        strncmp(value, "https://", 8) == 0) {
+      UtilityWrite("<td class=\"mimeAttachmentURL\">");
+      nsAutoCString val(value);
+      int query = val.FindChar('?');
+      if (query != kNotFound) val.SetLength(query);
+      nsAutoCString unescaped;
+      MsgUnescapeString(val, 0, unescaped);
+      UtilityWrite(unescaped.get());
+      UtilityWrite("</td>");
+    } else {
+      UtilityWrite("<td>&nbsp;</td>");
+    }
+  }
 
   return NS_OK;
 }
 
 nsresult nsMimeHtmlDisplayEmitter::EndAttachment() {
   if (!mSkipAttachment) {
     UtilityWrite("</tr>");
   }
