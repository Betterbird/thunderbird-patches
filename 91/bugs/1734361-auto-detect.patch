# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1634073374 -7200
# Parent  c1fdbad8c6138276f5d35568fb9c4d63969d5c64
Bug 1734361 - Restore erroneously removed 'text->inputAutodetect = true;'.

diff --git a/mailnews/base/content/menulist-charsetpicker.js b/mailnews/base/content/menulist-charsetpicker.js
--- a/mailnews/base/content/menulist-charsetpicker.js
+++ b/mailnews/base/content/menulist-charsetpicker.js
@@ -125,26 +125,36 @@ if (!customElements.get("menulist")) {
    * Menulist widget that shows charsets applicable for viewing messages.
    * @extends MozMenulistCharsetpickerBase
    */
   class MozMenulistCharsetpickerViewing extends MozMenulistCharsetpickerBase {
     get charsetValues() {
       return [
         "UTF-8",
         "Big5",
+        "EUC-JP",
+        "Shift_JIS",
         "EUC-KR",
         "gbk",
+        "KOI8-R",
+        "KOI8-U",
         "ISO-2022-JP",
         "ISO-8859-1",
         "ISO-8859-2",
+        "ISO-8859-4",
+        "ISO-8859-5",
+        "ISO-8859-6",
         "ISO-8859-7",
+        "ISO-8859-8",
         "windows-874",
         "windows-1250",
         "windows-1251",
         "windows-1252",
+        "windows-1253",
+        "windows-1254",
         "windows-1255",
         "windows-1256",
         "windows-1257",
         "windows-1258",
       ];
     }
   }
   customElements.define(
diff --git a/mailnews/mime/src/mimetext.cpp b/mailnews/mime/src/mimetext.cpp
--- a/mailnews/mime/src/mimetext.cpp
+++ b/mailnews/mime/src/mimetext.cpp
@@ -97,31 +97,23 @@ static int MimeInlineText_initializeChar
       // UTF-8 but omits the charset parameter.
       // When no charset is defined by the container (e.g. iMIP), iCalendar
       // files default to UTF-8 (RFC 2445, section 4.1.4).
       if (!text->charset && obj->content_type &&
           !PL_strcasecmp(obj->content_type, TEXT_CALENDAR))
         text->charset = strdup("UTF-8");
 
       if (!text->charset) {
-        nsresult res;
-
         text->charsetOverridable = true;
-
-        nsCOMPtr<nsIPrefBranch> prefBranch(
-            do_GetService(NS_PREFSERVICE_CONTRACTID, &res));
+        text->inputAutodetect = true;
 
         if (obj->options && obj->options->default_charset)
           text->charset = strdup(obj->options->default_charset);
-        else {
-          if (NS_SUCCEEDED(res)) {
-            text->charset = strdup("UTF-8");
-          } else
-            text->charset = strdup("");
-        }
+        else
+          text->charset = strdup("UTF-8");
       }
     }
   }
 
   if (text->inputAutodetect) {
     // We need to prepare lineDam for charset detection.
     text->lineDamBuffer = (char*)PR_Malloc(DAM_MAX_BUFFER_SIZE);
     text->lineDamPtrs = (char**)PR_Malloc(DAM_MAX_LINES * sizeof(char*));
