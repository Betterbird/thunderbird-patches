# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1646757507 -3600
# Parent  8bb5b9b9367faab64caa892f04a5f95f7f59ccff
Bug 359303 - don't replace NBSP with ASCII space unless adjacent to ASCII space.

diff --git a/dom/serializers/nsPlainTextSerializer.cpp b/dom/serializers/nsPlainTextSerializer.cpp
--- a/dom/serializers/nsPlainTextSerializer.cpp
+++ b/dom/serializers/nsPlainTextSerializer.cpp
@@ -101,19 +101,40 @@ static void DetermineLineBreak(const int
     // Platform/default
     aLineBreak.AssignLiteral(NS_ULINEBREAK);
   }
 }
 
 void nsPlainTextSerializer::CurrentLine::MaybeReplaceNbspsInContent(
     const int32_t aFlags) {
   if (!(aFlags & nsIDocumentEncoder::OutputPersistNBSP)) {
-    // First, replace all nbsp characters with spaces,
-    // which the unicode encoder won't do for us.
-    mContent.ReplaceChar(kNBSP, kSPACE);
+    // Replace NBSP characters with spaces if they are adjacent to a space.
+    int32_t length = mContent.Length();
+    bool foundSpace = false;
+    int32_t countNBSP = 0;
+    // Inspect string and promote spaces to the right.
+    for (int32_t i = 0; i < length; i++) {
+      if (mContent[i] == kSPACE) foundSpace = true;
+      if (mContent[i] == kNBSP) {
+        if (i > 0 && mContent[i - 1] == kSPACE) {
+          mContent.SetCharAt(kSPACE, i);
+        } else {
+          countNBSP++;
+        }
+      }
+    }
+    if (foundSpace && countNBSP > 0) {
+      // We found a space and didn't replace all NBSP, so reverse the loop and
+      // promote spaces to the left.
+      for (int32_t i = length - 2; i >= 0; i--) {
+        if (mContent[i] == kNBSP && mContent[i + 1] == kSPACE) {
+          mContent.SetCharAt(kSPACE, i);
+        }
+      }
+    }
   }
 }
 
 void nsPlainTextSerializer::CurrentLine::ResetContentAndIndentationHeader() {
   mContent.Truncate();
   mIndentation.mHeader.Truncate();
 }
 
