# HG changeset patch
# User Geoff Lankow <geoff@darktrojan.net>
# Date 1646261045 -3600
# Node ID 512a6fd4dc0244f6f99b82f2cd9b58290d14ba39
# Parent  bf8f7b873f670c517b7ca5ac9352c606ff06f8e4
Bug 1755592 - Set up the file picker correctly when saving an attachment. r=mkmelin

Differential Revision: https://phabricator.services.mozilla.com/D138872

diff --git a/mail/base/content/msgHdrView.js b/mail/base/content/msgHdrView.js
--- a/mail/base/content/msgHdrView.js
+++ b/mail/base/content/msgHdrView.js
@@ -1907,19 +1907,19 @@ AttachmentInfo.prototype = {
   /**
    * Open this attachment.
    */
   async open() {
     if (!this.hasFile || this.message != gFolderDisplay.selectedMessage) {
       return;
     }
 
+    let bundleMessenger = document.getElementById("bundle_messenger");
     let empty = await this.isEmpty();
     if (empty) {
-      let bundleMessenger = document.getElementById("bundle_messenger");
       let prompt = bundleMessenger.getString(
         this.isExternalAttachment
           ? "externalAttachmentNotFound"
           : "emptyAttachment"
       );
       msgWindow.promptDialog.alert(null, prompt);
     } else {
       // @see MsgComposeCommands.js which has simililar opening functionality
@@ -2061,17 +2061,23 @@ AttachmentInfo.prototype = {
               destFile.append(name);
               destFile.createUnique(Ci.nsIFile.NORMAL_FILE_TYPE, 0o755);
               destFile.remove(false);
               await saveToFile(destFile.path);
             } else {
               let filePicker = Cc["@mozilla.org/filepicker;1"].createInstance(
                 Ci.nsIFilePicker
               );
-              filePicker.init(window, "title", Ci.nsIFilePicker.modeSave);
+              filePicker.defaultString = this.name;
+              filePicker.defaultExtension = extension;
+              filePicker.init(
+                window,
+                bundleMessenger.getString("SaveAttachment"),
+                Ci.nsIFilePicker.modeSave
+              );
               let rv = await new Promise(resolve => filePicker.open(resolve));
               if (rv != Ci.nsIFilePicker.returnCancel) {
                 await saveToFile(filePicker.file.path);
               }
             }
             return;
           case Ci.nsIHandlerInfo.useHelperApp:
           case Ci.nsIHandlerInfo.useSystemDefault:
@@ -2092,17 +2098,17 @@ AttachmentInfo.prototype = {
           source: Services.io.newURI(this.url),
           suggestedFileName: this.name,
           cancel(reason) {},
           promptForSaveDestination() {
             appLauncherDialog.promptForSaveToFileAsync(
               this,
               window,
               this.suggestedFileName,
-              extension,
+              "." + extension, // Dot stripped by promptForSaveToFileAsync.
               false
             );
           },
           async launchWithApplication(handleInternally, file) {
             await saveAndOpen(mimeInfo);
           },
           async saveDestinationAvailable(file) {
             if (file) {
