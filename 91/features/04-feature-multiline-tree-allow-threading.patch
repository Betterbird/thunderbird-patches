# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1656492950 -7200
# Parent  675d0f0be606a78cbac979138053aeb04a0cf1c0
Feature: Multi-line tree follow-up: Allow threading again.

diff --git a/mail/base/content/mailWindowOverlay.js b/mail/base/content/mailWindowOverlay.js
--- a/mail/base/content/mailWindowOverlay.js
+++ b/mail/base/content/mailWindowOverlay.js
@@ -626,22 +626,16 @@ function InitViewSortByMenu() {
 
   sortThreadedMenuItem.setAttribute("checked", threaded);
   sortUnthreadedMenuItem.setAttribute("checked", !threaded && !grouped);
 
   var groupBySortOrderMenuItem = document.getElementById("groupBySort");
 
   groupBySortOrderMenuItem.setAttribute("disabled", !sortTypeSupportsGrouping);
   groupBySortOrderMenuItem.setAttribute("checked", grouped);
-
-  if (gFolderDisplay.view.dbView.QueryInterface(Ci.nsIMultilineTreeView).isMultiline()) {
-    sortThreadedMenuItem.setAttribute("disabled", true);
-  } else {
-    sortThreadedMenuItem.removeAttribute("disabled");
-  }
 }
 
 function InitAppViewSortByMenu() {
   let sortType = gFolderDisplay.view.primarySortType;
 
   setSortByMenuItemCheckState(
     "appmenu_sortByDateMenuitem",
     sortType == Ci.nsMsgViewSortType.byDate
@@ -720,22 +714,16 @@ function InitAppViewSortByMenu() {
 
   sortThreadedMenuItem.setAttribute("checked", threaded);
   sortUnthreadedMenuItem.setAttribute("checked", !threaded && !grouped);
 
   let groupBySortOrderMenuItem = document.getElementById("appmenu_groupBySort");
 
   groupBySortOrderMenuItem.setAttribute("disabled", !sortTypeSupportsGrouping);
   groupBySortOrderMenuItem.setAttribute("checked", grouped);
-
-  if (gFolderDisplay.view.dbView.QueryInterface(Ci.nsIMultilineTreeView).isMultiline()) {
-    sortThreadedMenuItem.setAttribute("disabled", true);
-  } else {
-    sortThreadedMenuItem.removeAttribute("disabled");
-  }
 }
 
 function isSortTypeValidForGrouping(sortType) {
   return Boolean(
     sortType == Ci.nsMsgViewSortType.byAccount ||
       sortType == Ci.nsMsgViewSortType.byAttachments ||
       sortType == Ci.nsMsgViewSortType.byAuthor ||
       sortType == Ci.nsMsgViewSortType.byCorrespondent ||
diff --git a/mail/base/content/threadPane.js b/mail/base/content/threadPane.js
--- a/mail/base/content/threadPane.js
+++ b/mail/base/content/threadPane.js
@@ -438,16 +438,18 @@ function UpdateSortIndicators(sortType, 
   document.getElementById("threadCol").collapsed =
     viewWrapper.showGroupedBySort;
 
   if (viewWrapper.dbView.QueryInterface(Ci.nsIMultilineTreeView).isMultiline()) {
     // For multi-line views there is no subject column, so we show
     // the twisties on the column that we sort by.
     if (sortedColumn && viewWrapper.showGroupedBySort) {
       sortedColumn.setAttribute("primary", "true");
+    } else if (viewWrapper.showThreaded) {
+      subjectCol.setAttribute("primary", "true");
     }
   } else {
     // show twisties only when grouping or threading
     if (viewWrapper.showGroupedBySort || viewWrapper.showThreaded) {
       subjectCol.setAttribute("primary", "true");
     }
   }
 
diff --git a/mailnews/base/src/nsMsgDBView.cpp b/mailnews/base/src/nsMsgDBView.cpp
--- a/mailnews/base/src/nsMsgDBView.cpp
+++ b/mailnews/base/src/nsMsgDBView.cpp
@@ -2213,31 +2213,24 @@ nsMsgDBView::IsMultiline(bool* isMulti) 
         el->GetAttribute(u"hidden"_ns, val);
         mIsMultiline = val.EqualsLiteral("true");
         break;
       }
     }
   }
 
   if (mIsMultiline) {
-    // Hide thread column, remove/move primary attribute and switch
-    // threading off.
     for (col = cols->GetFirstColumn(); col; col = col->GetNext()) {
       const nsAString& colID = col->GetId();
       el = col->Element();
-      if (colID.EqualsLiteral("threadCol")) {
-        el->SetAttribute(u"hidden"_ns, u"true"_ns, rv1);
-      } else if (colID.EqualsLiteral("subjectCol")) {
-        el->RemoveAttribute(u"primary"_ns, rv1);
-      }
       if (m_viewFlags & nsMsgViewFlagsType::kGroupBySort) {
-        el->RemoveAttribute(u"primary"_ns, rv1);
         // Move the primary attribure onto the sort column.
         // 14 valid sort types for "group by sort" from
         // isSortTypeValidForGrouping().
+        el->RemoveAttribute(u"primary"_ns, rv1);
         bool set = false;
         switch (m_sortType) {
           case nsMsgViewSortType::byAccount:
             if (colID.EqualsLiteral("accountCol")) set = true;
             break;
           case nsMsgViewSortType::byAttachments:
             if (colID.EqualsLiteral("attachmentCol")) set = true;
             break;
@@ -2278,20 +2271,16 @@ nsMsgDBView::IsMultiline(bool* isMulti) 
             if (colID.EqualsLiteral("customSortCol")) set = true;
             break;
           default:
             break;
         }
         if (set) el->SetAttribute(u"primary"_ns, u"true"_ns, rv1);
       }
     }
-    if (!(m_viewFlags & nsMsgViewFlagsType::kGroupBySort)) {
-      // Switch off pure threading.
-      m_viewFlags &= ~nsMsgViewFlagsType::kThreadedDisplay;
-    }
   } else if (m_viewFlags & nsMsgViewFlagsType::kGroupBySort) {
     // Put the primary attribute back onto the subject column
     // and remove it elsewhere.
     for (col = cols->GetFirstColumn(); col; col = col->GetNext()) {
       const nsAString& colID = col->GetId();
       el = col->Element();
       if (colID.EqualsLiteral("subjectCol")) {
         el->SetAttribute(u"primary"_ns, u"true"_ns, rv1);
