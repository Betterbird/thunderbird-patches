# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1677512518 -3600
# Parent  bc2bec70ec52ee238179557af3497beae43c1170
Bug 1745130 - Restore STATE_START processing and fix CSS for indeterminate progress meter. Remove confusing 99% complete behaviour.

diff --git a/mail/themes/shared/mail/messenger.css b/mail/themes/shared/mail/messenger.css
--- a/mail/themes/shared/mail/messenger.css
+++ b/mail/themes/shared/mail/messenger.css
@@ -1257,21 +1257,21 @@ label.statusbarpanel {
 }
 
 #dialog\.progress:indeterminate::-moz-progress-bar,
 #shutdown_progressmeter:indeterminate::-moz-progress-bar,
 .progressmeter-statusbar:indeterminate::-moz-progress-bar {
   /* Make a white reflecting animation.
      Create a gradient with 2 identical pattern, and enlarge the size to 200%.
      This allows us to animate background-position with percentage. */
-  background-image: linear-gradient(90deg, transparent 0%,
-                                           rgba(255, 255, 255, 0.5) 25%,
-                                           transparent 50%,
-                                           rgba(255, 255, 255, 0.5) 75%,
-                                           transparent 100%);
+  background-image: linear-gradient(90deg, rgba(255, 255, 255, 0.8) 0%,
+                                           rgba(255, 255, 255, 0.2) 25%,
+                                           rgba(255, 255, 255, 0.8) 50%,
+                                           rgba(255, 255, 255, 0.2) 75%,
+                                           rgba(255, 255, 255, 0.8) 100%);
   background-size: 200% 100%;
 }
 
 @media (prefers-reduced-motion: no-preference) {
   #dialog\.progress:indeterminate::-moz-progress-bar,
   #shutdown_progressmeter:indeterminate::-moz-progress-bar,
   .progressmeter-statusbar:indeterminate::-moz-progress-bar {
     animation: progressSlideX 1.5s linear infinite;
diff --git a/mailnews/compose/content/sendProgress.js b/mailnews/compose/content/sendProgress.js
--- a/mailnews/compose/content/sendProgress.js
+++ b/mailnews/compose/content/sendProgress.js
@@ -19,18 +19,22 @@ var gBundle;
 window.addEventListener("DOMContentLoaded", onLoad);
 window.addEventListener("unload", onUnload);
 document.addEventListener("dialogcancel", onCancel);
 
 // all progress notifications are done through the nsIWebProgressListener
 // implementation...
 var progressListener = {
   onStateChange(aWebProgress, aRequest, aStateFlags, aStatus) {
-    // Only need to handle STATE_STOP. No need to remove the progress attribute
-    // which would show a quick indeterminate progress display at STATE_START.
+    if (aStateFlags & Ci.nsIWebProgressListener.STATE_START) {
+      // Set no value to progress meter when undetermined.
+      dialog.progress.removeAttribute("value");
+      dialog.progressText.value = "";
+    }
+
     if (aStateFlags & Ci.nsIWebProgressListener.STATE_STOP) {
       // we are done sending/saving the message...
       // Indicate completion in status area.
       var msg;
       if (itsASaveOperation) {
         msg = gBundle.GetStringFromName("messageSaved");
       } else {
         msg = gBundle.GetStringFromName("messageSent");
diff --git a/mailnews/imap/src/nsImapProtocol.cpp b/mailnews/imap/src/nsImapProtocol.cpp
--- a/mailnews/imap/src/nsImapProtocol.cpp
+++ b/mailnews/imap/src/nsImapProtocol.cpp
@@ -6324,29 +6324,18 @@ void nsImapProtocol::UploadMessageFromFi
       if (NS_SUCCEEDED(rv) && !readCount) rv = NS_ERROR_FAILURE;
 
       if (NS_SUCCEEDED(rv)) {
         NS_ASSERTION(readCount <= (uint32_t)totalSize,
                      "got more bytes than there should be");
         dataBuffer[readCount] = 0;
         rv = SendData(dataBuffer);
         totalSize -= readCount;
-        if (totalSize) {
-          PercentProgressUpdateEvent(""_ns, u""_ns, fileSize - totalSize,
-                                     fileSize);
-        } else {
-          // The full message has been queued for sending, but the actual send
-          // is typically just now starting and can potentially fail. So just
-          // indicate 99% complelte instead of 100% so that the user does not
-          // see a misleading 100% complete before being prompted to retry.
-          // First set the "m_last*" values to ensure a progress bar update.
-          m_lastProgressTime = 0;
-          m_lastPercent = 0;
-          PercentProgressUpdateEvent(""_ns, u""_ns, 99, 100);
-        }
+        PercentProgressUpdateEvent(""_ns, u""_ns, fileSize - totalSize,
+                                   fileSize);
       }
     }  // end while appending chunks
 
     if (NS_SUCCEEDED(rv)) {  // complete the append
       if (m_allowUTF8Accept)
         rv = SendData(")" CRLF);
       else
         rv = SendData(CRLF);
