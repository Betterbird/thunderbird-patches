# HG changeset patch
# Date 1660044864 -7200
# User Ping Chen
# Parent  734b3f151d01f7ad1ef1383f45b926de2afb0ba3
Bug 1783552 - Fix downloading partial message in pop3-js. r=mkmelin

diff --git a/mailnews/local/src/Pop3Channel.jsm b/mailnews/local/src/Pop3Channel.jsm
--- a/mailnews/local/src/Pop3Channel.jsm
+++ b/mailnews/local/src/Pop3Channel.jsm
@@ -82,15 +82,19 @@ class Pop3Channel {
         Cr.NS_ERROR_ILLEGAL_VALUE
       );
     }
 
     let client = new Pop3Client(this._server);
     client.runningUri = this.URI;
     client.connect();
     client.onOpen = () => {
+      listener.onStartRequest(this);
       client.fetchBodyForUidl(
         this.URI.QueryInterface(Ci.nsIPop3URL).pop3Sink,
         uidl
       );
     };
+    client.onDone = status => {
+      listener.onStopRequest(this, status);
+    };
   }
 }
diff --git a/mailnews/local/src/Pop3Client.jsm b/mailnews/local/src/Pop3Client.jsm
--- a/mailnews/local/src/Pop3Client.jsm
+++ b/mailnews/local/src/Pop3Client.jsm
@@ -124,17 +124,19 @@ class Pop3Client {
 
   /**
    * Initiate a connection to the server
    */
   connect() {
     this._logger.debug(
       `Connecting to pop://${this._server.hostName}:${this._server.port}`
     );
-    this.runningUri.SetUrlState(true, Cr.NS_OK);
+    this.runningUri
+      .QueryInterface(Ci.nsIMsgMailNewsUrl)
+      .SetUrlState(true, Cr.NS_OK);
     this._server.serverBusy = true;
     this._secureTransport = this._server.socketType == Ci.nsMsgSocketType.SSL;
     this._socket = new TCPSocket(this._server.hostName, this._server.port, {
       binaryType: "arraybuffer",
       useSecureTransport: this._secureTransport,
     });
     this._socket.onopen = this._onOpen;
     this._socket.onerror = this._onError;
@@ -1310,16 +1312,17 @@ class Pop3Client {
     } else if (this._currentMessage) {
       // Put _currentMessage back to the queue to prevent loss of popstate.
       this._messagesToHandle.unshift(this._currentMessage);
     }
     this._writeUidlState(true);
     this.urlListener?.OnStopRunningUrl(this.runningUri, status);
     this.quit();
     this.runningUri.SetUrlState(false, Cr.NS_OK);
+    this.onDone?.(status);
 
     if (this._folderLocked) {
       this._sink.abortMailDelivery(this);
       this._folderLocked = false;
       this._logger.debug("Folder lock released.");
     }
   };
 
