# HG changeset patch
# User Gene Smith <gds@chartertn.net>
# Date 1677260212 -3600
# Parent  11db2441cbdaf322f37f3a5a12ab2b3410079d35
Bug 1745130 - More tweaks to IMAP error handling.

When the save to Sent failed due to network down, TB finds another existing connection to do the retry.
Often that connection is idling in selected state. So to use that connection, it has to exit idle state
using EndIdle(). The new URL to do the IMAP append is directed to a different folder (the Sent folder),
so m_imapMailFolderSink now references the Sent folder. The problem is at the end of EndIdle() the
new sink pointer is nulled destroying the sink pointer to Sent folder.

Since the network is down, the retry using this other connection also fails. But since the sink pointer
is null there is no way to report the failure and the progress dialog just hangs waiting for a completion
status.

diff --git a/mail/themes/shared/mail/messenger.css b/mail/themes/shared/mail/messenger.css
--- a/mail/themes/shared/mail/messenger.css
+++ b/mail/themes/shared/mail/messenger.css
@@ -1257,21 +1257,21 @@ label.statusbarpanel {
 }
 
 #dialog\.progress:indeterminate::-moz-progress-bar,
 #shutdown_progressmeter:indeterminate::-moz-progress-bar,
 .progressmeter-statusbar:indeterminate::-moz-progress-bar {
   /* Make a white reflecting animation.
      Create a gradient with 2 identical pattern, and enlarge the size to 200%.
      This allows us to animate background-position with percentage. */
-  background-image: linear-gradient(90deg, transparent 0%,
-                                           rgba(255, 255, 255, 0.5) 25%,
-                                           transparent 50%,
-                                           rgba(255, 255, 255, 0.5) 75%,
-                                           transparent 100%);
+  background-image: linear-gradient(90deg, rgba(255, 255, 255, 0.8) 0%,
+                                           rgba(255, 255, 255, 0.2) 25%,
+                                           rgba(255, 255, 255, 0.8) 50%,
+                                           rgba(255, 255, 255, 0.2) 75%,
+                                           rgba(255, 255, 255, 0.8) 100%);
   background-size: 200% 100%;
 }
 
 @media (prefers-reduced-motion: no-preference) {
   #dialog\.progress:indeterminate::-moz-progress-bar,
   #shutdown_progressmeter:indeterminate::-moz-progress-bar,
   .progressmeter-statusbar:indeterminate::-moz-progress-bar {
     animation: progressSlideX 1.5s linear infinite;
diff --git a/mailnews/compose/content/sendProgress.js b/mailnews/compose/content/sendProgress.js
--- a/mailnews/compose/content/sendProgress.js
+++ b/mailnews/compose/content/sendProgress.js
@@ -17,17 +17,22 @@ var gBundle;
 
 window.addEventListener("DOMContentLoaded", onLoad);
 window.addEventListener("unload", onUnload);
 document.addEventListener("dialogcancel", onCancel);
 
 // all progress notifications are done through the nsIWebProgressListener implementation...
 var progressListener = {
   onStateChange(aWebProgress, aRequest, aStateFlags, aStatus) {
-    // Only need to handle STATE_STOP.
+    if (aStateFlags & Ci.nsIWebProgressListener.STATE_START) {
+      // Set no value to progress meter when undetermined.
+      dialog.progress.removeAttribute("value");
+      dialog.progressText.value = "";
+    }
+
     if (aStateFlags & Ci.nsIWebProgressListener.STATE_STOP) {
       // we are done sending/saving the message...
       // Indicate completion in status area.
       var msg;
       if (itsASaveOperation) {
         msg = gBundle.GetStringFromName("messageSaved");
       } else {
         msg = gBundle.GetStringFromName("messageSent");
diff --git a/mailnews/imap/src/nsImapProtocol.cpp b/mailnews/imap/src/nsImapProtocol.cpp
--- a/mailnews/imap/src/nsImapProtocol.cpp
+++ b/mailnews/imap/src/nsImapProtocol.cpp
@@ -7973,17 +7973,17 @@ void nsImapProtocol::EndIdle(bool waitFo
     // mentioned in the IDLE rfc as a possibility. This is similar to the checks
     // done in OnStatusForFolder().
     if (waitForResponse && m_imapMailFolderSinkSelected &&
         GetServerStateParser().UntaggedResponse()) {
       Log("EndIdle", nullptr, "idle response after idle DONE");
       m_imapMailFolderSinkSelected->OnNewIdleMessages();
     }
   }
-  m_imapMailFolderSink = nullptr;
+  m_imapMailFolderSinkSelected = nullptr;
 }
 
 void nsImapProtocol::Search(const char* searchCriteria, bool useUID,
                             bool notifyHit /* true */) {
   m_notifySearchHit = notifyHit;
   ProgressEventFunctionUsingName("imapStatusSearchMailbox");
   IncrementCommandTagNumber();
 
