
# HG changeset patch
# User Geoff Lankow <geoff@darktrojan.net>
# Date 1659638661 -7200
# Node ID a43d373c71527c9dcac0e2e7835b8384b9192239
# Parent  920a44f6094025ff1179c29a392d1f525f3f8a9d
Bug 1776129 - Add Custom1-4 fields to Address Book UI. r=aleca
This converts nsIAbCard style Custom[1-4] properties to X-Custom[1-4] vCard properties when a card is edited. Since the properties could exist in either form a number of hacks have been deployed.

Differential Revision: https://phabricator.services.mozilla.com/D153550

diff --git a/mail/components/addrbook/content/aboutAddressBook.js b/mail/components/addrbook/content/aboutAddressBook.js
--- a/mail/components/addrbook/content/aboutAddressBook.js
+++ b/mail/components/addrbook/content/aboutAddressBook.js
@@ -61,16 +61,21 @@ XPCOMUtils.defineLazyGetter(this, "SubDi
           if (dialog) {
             UIFontSize.resizeSubDialog(dialog);
           }
         });
       },
     },
   });
 });
+XPCOMUtils.defineLazyGetter(this, "bundle", function() {
+  return Services.strings.createBundle(
+    "chrome://messenger/locale/addressbook/addressBook.properties"
+  );
+});
 
 UIDensity.registerWindow(window);
 UIFontSize.registerWindow(window);
 
 var booksList;
 
 window.addEventListener("load", () => {
   document
@@ -2373,20 +2378,17 @@ var detailsPane = {
     // NOTE: We put the paste handler on the button parent because the
     // html:button will not be targeted by the paste event.
     this.photoInput.addEventListener("paste", photoDialog);
     this.photoInput.addEventListener("dragover", photoDialog);
     this.photoInput.addEventListener("drop", photoDialog);
 
     let photoButton = document.getElementById("photoButton");
     // FIXME: Remove this once we get new strings after 102.
-    let stringBundle = Services.strings.createBundle(
-      "chrome://messenger/locale/addressbook/addressBook.properties"
-    );
-    photoButton.title = stringBundle.GetStringFromName("browsePhoto");
+    photoButton.title = bundle.GetStringFromName("browsePhoto");
     photoButton.addEventListener("click", () => {
       if (this._photoDetails.sourceURL) {
         photoDialog.showWithURL(
           this._photoDetails.sourceURL,
           this._photoDetails.cropRect,
           true
         );
       } else {
@@ -2921,16 +2923,38 @@ var detailsPane = {
       li.querySelector(".entry-value").appendChild(
         document.createElement("br")
       );
 
       let time = document.createElement("span", { is: "active-time" });
       time.setAttribute("tz", tz);
       li.querySelector(".entry-value").appendChild(time);
     }
+
+    for (let key of ["Custom1", "Custom2", "Custom3", "Custom4"]) {
+      // Custom properties can be nsIAbCard properties or vCard properties.
+      // If there's both, the vCard property has precedence.
+      let value = card.getProperty(key, "");
+      if (card.supportsVCard) {
+        value =
+          card.vCardProperties.getFirstValue(`x-${key.toLowerCase()}`) ?? value;
+      }
+      if (value) {
+        let li = list.appendChild(createEntryItem());
+        li.querySelector(".entry-type").textContent = bundle.GetStringFromName(
+          `property${key}`
+        );
+        li.querySelector(".entry-type").style.setProperty(
+          "white-space",
+          "nowrap"
+        );
+        li.querySelector(".entry-value").textContent = value;
+      }
+    }
+
     section.hidden = list.childElementCount == 0;
 
     this.isEditing = false;
     this.node.hidden = this.splitter.isCollapsed = false;
     document.getElementById("viewContact").scrollTo(0, 0);
   },
 
   /**
@@ -2979,16 +3003,30 @@ var detailsPane = {
    * Show controls for editing the currently displayed card.
    *
    * @param {?string} vCard - A vCard containing properties for a new card.
    */
   editCurrentContact(vCard) {
     let card = this.currentCard;
 
     if (card && card.supportsVCard) {
+      for (let key of ["Custom1", "Custom2", "Custom3", "Custom4"]) {
+        // Custom properties could still exist as nsIAbCard properties.
+        // If they do, and no vCard equivalent exists, add them to the vCard
+        // so that they get displayed.
+        let value = card.getProperty(key, "");
+        if (
+          value &&
+          card.vCardProperties.getFirstEntry(`x-${key.toLowerCase()}`) === null
+        ) {
+          card.vCardProperties.addEntry(
+            new VCardPropertyEntry(`x-${key.toLowerCase()}`, {}, "text", value)
+          );
+        }
+      }
       this.vCardEdit.vCardProperties = card.vCardProperties;
       // getProperty may return a "1" or "0" string, we want a boolean.
       this.vCardEdit.preferDisplayName.checked =
         // eslint-disable-next-line mozilla/no-compare-against-boolean-literals
         card.getProperty("PreferDisplayName", true) == true;
     } else {
       this.vCardEdit.vCardString = vCard ?? "";
     }
@@ -3026,23 +3064,20 @@ var detailsPane = {
     }
   },
 
   /**
    * Properly handle a failed form validation.
    */
   handleInvalidForm() {
     // FIXME: Drop this in favor of an inline notification with fluent strings.
-    let stringBundle = Services.strings.createBundle(
-      "chrome://messenger/locale/addressbook/addressBook.properties"
-    );
     Services.prompt.alert(
       window,
-      stringBundle.GetStringFromName("cardRequiredDataMissingTitle"),
-      stringBundle.GetStringFromName("cardRequiredDataMissingMessage")
+      bundle.GetStringFromName("cardRequiredDataMissingTitle"),
+      bundle.GetStringFromName("cardRequiredDataMissingMessage")
     );
   },
 
   /**
    * Make sure the data is valid before saving the contact.
    */
   validateBeforeSaving() {
     // Make sure the minimum required data is present.
@@ -3093,16 +3128,22 @@ var detailsPane = {
     // cards will fail.
     this.vCardEdit.saveVCard();
     card.setProperty("_vCard", this.vCardEdit.vCardString);
     card.setProperty(
       "PreferDisplayName",
       this.vCardEdit.preferDisplayName.checked
     );
 
+    // By now, nsIAbCard custom properties should be on the vCard. Delete them.
+    card.deleteProperty("Custom1");
+    card.deleteProperty("Custom2");
+    card.deleteProperty("Custom3");
+    card.deleteProperty("Custom4");
+
     // No photo or a new photo. Delete the old one.
     if (this._photoChanged) {
       let oldLeafName = card.getProperty("PhotoName", "");
       if (oldLeafName) {
         let oldPath = PathUtils.join(
           PathUtils.profileDir,
           "Photos",
           oldLeafName
diff --git a/mail/components/addrbook/content/vcard-edit/custom.js b/mail/components/addrbook/content/vcard-edit/custom.js
new file mode 100644
--- /dev/null
+++ b/mail/components/addrbook/content/vcard-edit/custom.js
@@ -0,0 +1,67 @@
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, you can obtain one at http://mozilla.org/MPL/2.0/. */
+
+/* globals VCardPropertyEntryView, vCardIdGen */
+
+ChromeUtils.defineModuleGetter(
+  this,
+  "VCardPropertyEntry",
+  "resource:///modules/VCardUtils.jsm"
+);
+
+class VCardCustomComponent extends HTMLElement {
+  /** @type {VCardPropertyEntry[]} */
+  vCardPropertyEntries = null;
+  /** @type {HTMLInputElement[]} */
+  inputEls = null;
+
+  constructor() {
+    super();
+    let template = document.getElementById("template-vcard-edit-custom");
+    let clonedTemplate = template.content.cloneNode(true);
+    this.appendChild(clonedTemplate);
+  }
+
+  connectedCallback() {
+    if (this.isConnected) {
+      // FIXME: Add some Fluent strings so that we don't have to do this.
+      let stringBundle = Services.strings.createBundle(
+        "chrome://messenger/locale/addressbook/addressBook.properties"
+      );
+
+      this.inputEls = this.querySelectorAll("input");
+      let labelEls = this.querySelectorAll("label");
+      for (let i = 0; i < 4; i++) {
+        let inputId = vCardIdGen.next().value;
+        labelEls[i].textContent = stringBundle.GetStringFromName(
+          `propertyCustom${i + 1}`
+        );
+        labelEls[i].htmlFor = inputId;
+        this.inputEls[i].id = inputId;
+      }
+      this.fromVCardPropertyEntryToUI();
+    }
+  }
+
+  disconnectedCallback() {
+    if (!this.isConnected) {
+      this.inputEls = null;
+      this.vCardPropertyEntries = null;
+    }
+  }
+
+  fromVCardPropertyEntryToUI() {
+    for (let i = 0; i < 4; i++) {
+      this.inputEls[i].value = this.vCardPropertyEntries[i].value;
+    }
+  }
+
+  fromUIToVCardPropertyEntry() {
+    for (let i = 0; i < 4; i++) {
+      this.vCardPropertyEntries[i].value = this.inputEls[i].value;
+    }
+  }
+}
+
+customElements.define("vcard-custom", VCardCustomComponent);
diff --git a/mail/components/addrbook/content/vcard-edit/edit.js b/mail/components/addrbook/content/vcard-edit/edit.js
--- a/mail/components/addrbook/content/vcard-edit/edit.js
+++ b/mail/components/addrbook/content/vcard-edit/edit.js
@@ -102,16 +102,25 @@ class VCardEdit extends HTMLElement {
         );
       }
       if (!org) {
         this._vCardProperties.addEntry(
           VCardOrgComponent.newVCardPropertyEntry()
         );
       }
     }
+
+    for (let i = 1; i <= 4; i++) {
+      if (!this._vCardProperties.getFirstEntry(`x-custom${i}`)) {
+        this._vCardProperties.addEntry(
+          new VCardPropertyEntry(`x-custom${i}`, {}, "text", "")
+        );
+      }
+    }
+
     this.updateView();
   }
 
   updateView() {
     // Create new DOM and replacing other vCardProperties.
     let template = document.getElementById("template-addr-book-edit");
     let clonedTemplate = template.content.cloneNode(true);
     // Making the next two calls in one go causes a console error to be logged.
@@ -119,23 +128,38 @@ class VCardEdit extends HTMLElement {
     this.append(clonedTemplate);
 
     if (!this.vCardProperties) {
       return;
     }
 
     this.addFieldsetActions();
 
-    this._orgComponent = null;
-
     // Insert the vCard property entries.
     for (let vCardPropertyEntry of this.vCardProperties.entries) {
       this.insertVCardElement(vCardPropertyEntry, false);
     }
 
+    let customProperties = ["x-custom1", "x-custom2", "x-custom3", "x-custom4"];
+    if (
+      customProperties.some(name => this.vCardProperties.getFirstValue(name))
+    ) {
+      // If one of these properties has a value, display all of them.
+      let customFieldset = this.querySelector("#addr-book-edit-custom");
+      let customEl =
+        customFieldset.querySelector("vcard-custom") ||
+        new VCardCustomComponent();
+      customEl.vCardPropertyEntries = customProperties.map(name =>
+        this._vCardProperties.getFirstEntry(name)
+      );
+      let addCustom = document.getElementById("vcard-add-custom");
+      customFieldset.insertBefore(customEl, addCustom);
+      addCustom.hidden = true;
+    }
+
     let nameEl = this.querySelector("vcard-n");
     this.firstName = nameEl.firstNameEl.querySelector("input");
     this.lastName = nameEl.lastNameEl.querySelector("input");
     this.prefixName = nameEl.prefixEl.querySelector("input");
     this.middleName = nameEl.middleNameEl.querySelector("input");
     this.suffixName = nameEl.suffixEl.querySelector("input");
     this.displayName = this.querySelector("vcard-fn").displayEl;
 
@@ -534,16 +558,17 @@ class VCardEdit extends HTMLElement {
   /**
    * Mutates the referenced vCardPropertyEntry(s).
    * If the value of a VCardPropertyEntry is empty, the entry gets
    * removed from the vCardProperty.
    */
   saveVCard() {
     for (let node of [
       ...this.querySelectorAll("vcard-adr"),
+      ...this.querySelectorAll("vcard-custom"),
       ...document.getElementById("vcard-email").children,
       ...this.querySelectorAll("vcard-fn"),
       ...this.querySelectorAll("vcard-impp"),
       ...this.querySelectorAll("vcard-n"),
       ...this.querySelectorAll("vcard-nickname"),
       ...this.querySelectorAll("vcard-note"),
       ...this.querySelectorAll("vcard-org"),
       ...this.querySelectorAll("vcard-role"),
@@ -566,16 +591,23 @@ class VCardEdit extends HTMLElement {
     // If no email has a pref value of 1, set it to the first email.
     let emailEntries = this.vCardProperties.getAllEntries("email");
     if (
       emailEntries.length >= 1 &&
       emailEntries.every(entry => entry.params.pref !== "1")
     ) {
       emailEntries[0].params.pref = "1";
     }
+
+    for (let i = 1; i <= 4; i++) {
+      let entry = this._vCardProperties.getFirstEntry(`x-custom${i}`);
+      if (!entry.value) {
+        this._vCardProperties.removeEntry(entry);
+      }
+    }
   }
 
   /**
    * Move focus into the form.
    */
   setFocus() {
     this.querySelector("vcard-n input:not([hidden])").focus();
   }
@@ -703,16 +735,31 @@ class VCardEdit extends HTMLElement {
 
     let addIMPP = document.getElementById("vcard-add-impp");
     this.registerAddButton(addIMPP, "impp");
 
     let addNote = document.getElementById("vcard-add-note");
     this.registerAddButton(addNote, "note", () => {
       addNote.hidden = true;
     });
+
+    let addCustom = document.getElementById("vcard-add-custom");
+    addCustom.addEventListener("click", event => {
+      let el = new VCardCustomComponent();
+      el.vCardPropertyEntries = [
+        this._vCardProperties.getFirstEntry("x-custom1"),
+        this._vCardProperties.getFirstEntry("x-custom2"),
+        this._vCardProperties.getFirstEntry("x-custom3"),
+        this._vCardProperties.getFirstEntry("x-custom4"),
+      ];
+      addCustom.parentNode.insertBefore(el, addCustom);
+
+      this.moveFocusIntoElement(el);
+      addCustom.hidden = true;
+    });
   }
 
   /**
    * Registers a click event for addButton which creates a new vCardProperty
    * and inserts it.
    *
    * @param {HTMLButtonElement} addButton
    * @param {string} VCardPropertyName RFC6350 vCard property name.
diff --git a/mail/components/addrbook/content/vcard-edit/vCardTemplates.inc.xhtml b/mail/components/addrbook/content/vcard-edit/vCardTemplates.inc.xhtml
--- a/mail/components/addrbook/content/vcard-edit/vCardTemplates.inc.xhtml
+++ b/mail/components/addrbook/content/vcard-edit/vCardTemplates.inc.xhtml
@@ -2,16 +2,17 @@
 # License, v. 2.0. If a copy of the MPL was not distributed with this
 # file, You can obtain one at http://mozilla.org/MPL/2.0/.
 
 <!-- Styles -->
 <link rel="stylesheet" href="chrome://messenger/skin/vcard.css" />
 
 <!-- Scripts -->
 <script src="chrome://messenger/content/addressbook/edit/adr.js"></script>
+<script src="chrome://messenger/content/addressbook/edit/custom.js"></script>
 <script src="chrome://messenger/content/addressbook/edit/org.js"></script>
 <script src="chrome://messenger/content/addressbook/edit/email.js"></script>
 <script src="chrome://messenger/content/addressbook/edit/fn.js"></script>
 <script src="chrome://messenger/content/addressbook/edit/impp.js"></script>
 <script src="chrome://messenger/content/addressbook/edit/n.js"></script>
 <script src="chrome://messenger/content/addressbook/edit/nickname.js"></script>
 <script src="chrome://messenger/content/addressbook/edit/note.js"></script>
 <script src="chrome://messenger/content/addressbook/edit/special-date.js"></script>
@@ -121,16 +122,24 @@
   <!-- Organization Info -->
   <fieldset id="addr-book-edit-org" class="addr-book-edit-fieldset fieldset-reset">
     <legend data-l10n-id="vcard-org-header"/>
     <button id="vcard-add-org"
             data-l10n-id="vcard-org-add"
             class="addr-book-edit-fieldset-button"
             type="button"></button>
   </fieldset>
+  <!-- Custom -->
+  <fieldset id="addr-book-edit-custom" class="addr-book-edit-fieldset fieldset-reset">
+    <legend data-l10n-id="vcard-custom-header"/>
+    <button id="vcard-add-custom"
+            data-l10n-id="vcard-custom-add"
+            class="addr-book-edit-fieldset-button"
+            type="button"></button>
+  </fieldset>
 </template>
 
 <!-- Individual fields -->
 
 <!-- N field -->
 <template id="template-vcard-edit-n">
   <div id="n-list-component-prefix" class="n-list-component">
     <label for="vcard-n-prefix" data-l10n-id="vcard-n-prefix" />
@@ -357,8 +366,28 @@
   </div>
 </template>
 <template id="template-vcard-edit-org">
   <div class="vcard-adr-inputs">
     <label for="org" data-l10n-id="vcard-org-org"/>
     <textarea name="org"></textarea>
   </div>
 </template>
+
+<!-- Custom -->
+<template id="template-vcard-edit-custom">
+  <div class="vcard-adr-inputs">
+    <label for="custom1"/>
+    <input type="text"/>
+  </div>
+  <div class="vcard-adr-inputs">
+    <label for="custom2"/>
+    <input type="text"/>
+  </div>
+  <div class="vcard-adr-inputs">
+    <label for="custom3"/>
+    <input type="text"/>
+  </div>
+  <div class="vcard-adr-inputs">
+    <label for="custom4"/>
+    <input type="text"/>
+  </div>
+</template>
diff --git a/mail/components/addrbook/jar.mn b/mail/components/addrbook/jar.mn
--- a/mail/components/addrbook/jar.mn
+++ b/mail/components/addrbook/jar.mn
@@ -14,16 +14,17 @@ messenger.jar:
 
     content/messenger/addressbook/aboutAddressBook.js           (content/aboutAddressBook.js)
 *   content/messenger/addressbook/aboutAddressBook.xhtml        (content/aboutAddressBook.xhtml)
     content/messenger/addressbook/addressBookTab.js             (content/addressBookTab.js)
 # TODO: Rename this after removal of mailnews/addrbook/content/abView.js.
     content/messenger/addressbook/abView-new.js                 (content/abView-new.js)
 # Edit view
     content/messenger/addressbook/edit/adr.js                   (content/vcard-edit/adr.js)
+    content/messenger/addressbook/edit/custom.js                (content/vcard-edit/custom.js)
     content/messenger/addressbook/edit/edit.js                  (content/vcard-edit/edit.js)
     content/messenger/addressbook/edit/email.js                 (content/vcard-edit/email.js)
     content/messenger/addressbook/edit/fn.js                    (content/vcard-edit/fn.js)
     content/messenger/addressbook/edit/impp.js                  (content/vcard-edit/impp.js)
     content/messenger/addressbook/edit/n.js                     (content/vcard-edit/n.js)
     content/messenger/addressbook/edit/nickname.js              (content/vcard-edit/nickname.js)
     content/messenger/addressbook/edit/note.js                  (content/vcard-edit/note.js)
     content/messenger/addressbook/edit/org.js                   (content/vcard-edit/org.js)
diff --git a/mail/locales/en-US/messenger/addressbook/vcard.ftl b/mail/locales/en-US/messenger/addressbook/vcard.ftl
--- a/mail/locales/en-US/messenger/addressbook/vcard.ftl
+++ b/mail/locales/en-US/messenger/addressbook/vcard.ftl
@@ -145,8 +145,14 @@ vcard-org-header = Organizational Proper
 
 vcard-org-add = Add organizational properties
 
 vcard-org-title = Title
 
 vcard-org-role = Role
 
 vcard-org-org = Organization
+
+# Custom properties
+
+vcard-custom-header = Custom Properties
+
+vcard-custom-add = Add custom properties
diff --git a/mailnews/addrbook/modules/VCardUtils.jsm b/mailnews/addrbook/modules/VCardUtils.jsm
--- a/mailnews/addrbook/modules/VCardUtils.jsm
+++ b/mailnews/addrbook/modules/VCardUtils.jsm
@@ -498,16 +498,20 @@ var typeMap = {
   ),
   "tel.home": singleTextProperty("HomePhone", "tel", { type: "home" }),
   "tel.work": singleTextProperty("WorkPhone", "tel", { type: "work" }),
   "tel.fax": singleTextProperty("FaxNumber", "tel", { type: "fax" }),
   "tel.pager": singleTextProperty("PagerNumber", "tel", { type: "pager" }),
   "tel.cell": singleTextProperty("CellularNumber", "tel", { type: "cell" }),
   "url.work": singleTextProperty("WebPage1", "url", { type: "work" }, "url"),
   "url.home": singleTextProperty("WebPage2", "url", { type: "home" }, "url"),
+  "x-custom1": singleTextProperty("Custom1", "x-custom1"),
+  "x-custom2": singleTextProperty("Custom2", "x-custom2"),
+  "x-custom3": singleTextProperty("Custom3", "x-custom3"),
+  "x-custom4": singleTextProperty("Custom4", "x-custom4"),
 };
 
 /**
  * Any value that can be represented in a vCard. A value can be a boolean,
  * number, string, or an array, depending on the data. A top-level array might
  * contain primitives and/or second-level arrays of primitives.
  *
  * @see ICAL.design
