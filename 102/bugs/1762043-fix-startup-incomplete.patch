# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1652305286 -7200
# Parent  3301ef0f2e5b296516d5c6dc2592de29d8305f7e
Bug 1762043 - Add missing call to Services.startup.trackStartupCrashEnd().

diff --git a/mail/components/MailGlue.jsm b/mail/components/MailGlue.jsm
--- a/mail/components/MailGlue.jsm
+++ b/mail/components/MailGlue.jsm
@@ -246,16 +246,17 @@ MailGlue.prototype = {
   _isNewProfile: undefined,
 
   // init (called at app startup)
   _init() {
     // Start-up notifications, in order.
     // app-startup happens first, registered in components.conf.
     Services.obs.addObserver(this, "command-line-startup");
     Services.obs.addObserver(this, "final-ui-startup");
+    Services.obs.addObserver(this, "quit-application-granted");
     Services.obs.addObserver(this, "mail-startup-done");
 
     // Shut-down notifications.
     Services.obs.addObserver(this, "xpcom-shutdown");
 
     // General notifications.
     Services.obs.addObserver(this, "intl:app-locales-changed");
     Services.obs.addObserver(this, "handle-xul-text-link");
@@ -274,16 +275,17 @@ MailGlue.prototype = {
 
     ActorManagerParent.addJSWindowActors(JSWINDOWACTORS);
   },
 
   // cleanup (called at shutdown)
   _dispose() {
     Services.obs.removeObserver(this, "command-line-startup");
     Services.obs.removeObserver(this, "final-ui-startup");
+    Services.obs.removeObserver(this, "quit-application-granted");
     // mail-startup-done is removed by its handler.
 
     Services.obs.removeObserver(this, "xpcom-shutdown");
 
     Services.obs.removeObserver(this, "intl:app-locales-changed");
     Services.obs.removeObserver(this, "handle-xul-text-link");
     Services.obs.removeObserver(this, "chrome-document-global-created");
     Services.obs.removeObserver(this, "document-element-inserted");
@@ -343,16 +345,25 @@ MailGlue.prototype = {
         Cc["@mozilla.org/msgFolder/msgFolderService;1"]
           .getService(Ci.nsIMsgFolderService)
           .initializeFolderStrings();
         Cc["@mozilla.org/msgDBView/msgDBViewService;1"]
           .getService(Ci.nsIMsgDBViewService)
           .initializeDBViewStrings();
         this._beforeUIStartup();
         break;
+      case "quit-application-granted":
+        try {
+          Services.startup.trackStartupCrashEnd();
+        } catch (e) {
+          Cu.reportError(
+            "Could not end startup crash tracking in quit-application-granted: " + e
+          );
+        }
+        break;
       case "mail-startup-done":
         this._onFirstWindowLoaded();
         Services.obs.removeObserver(this, "mail-startup-done");
         break;
       case "xpcom-shutdown":
         this._dispose();
         break;
       case "intl:app-locales-changed":
@@ -579,31 +590,45 @@ MailGlue.prototype = {
    * Don't be fooled by thinking that the use of the timeout parameter
    * will delay your function: it will just ensure that it potentially
    * happens _earlier_ than expected (when the timeout limit has been reached),
    * but it will not make it happen later (and out of order) compared
    * to the other ones scheduled together.
    */
   _scheduleStartupIdleTasks() {
     let self = this;
+    // Time after we stop tracking startup crashes.
+    const STARTUP_CRASHES_END_DELAY_MS = 30 * 1000;
     const idleTasks = [
       {
         task() {
           // This module needs to be loaded so it registers to receive
           // FormAutoComplete:GetSelectedIndex messages and respond
           // appropriately, otherwise we get error messages like the one
           // reported in bug 1635422.
           ChromeUtils.import("resource://gre/actors/AutoCompleteParent.jsm");
         },
       },
       {
         task() {
           self.BetterbirdUpdateCheck();
         },
       },
+      {
+        task: () => {
+          let { setTimeout } = ChromeUtils.import(
+            "resource://gre/modules/Timer.jsm"
+          );
+          setTimeout(function() {
+            Services.tm.idleDispatchToMainThread(
+              Services.startup.trackStartupCrashEnd
+            );
+          }, STARTUP_CRASHES_END_DELAY_MS);
+        },
+      },
 
       {
         task: () => {
           // Use idleDispatch a second time to run this after the per-window
           // idle tasks.
           ChromeUtils.idleDispatch(() => {
             Services.obs.notifyObservers(
               null,
