# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1666816039 -7200
# Parent  04af121b9194786ad9436b09f63e3e4d0d0d5318
Bug 1728778 - Re-establish movemail.

Backout of https://bugzilla.mozilla.org/show_bug.cgi?id=1625741#c14
  https://hg.mozilla.org/comm-central/rev/931a1fb770eb
Plus adding UI for movemail removed in https://bugzilla.mozilla.org/show_bug.cgi?id=1727304
  https://hg.mozilla.org/comm-central/rev/3fc3104eb477

---

file 'mailnews/base/prefs/content/aw-accounttype.js' was deleted in local [local] but was modified in other [other].
You can use (c)hanged version, leave (d)eleted, or leave (u)nresolved.
What do you want to do? c
From https://bugzilla.mozilla.org/show_bug.cgi?id=1727304

merging mail/locales/en-US/chrome/messenger/AccountWizard.dtd
warning: conflicts while merging mail/locales/en-US/chrome/messenger/AccountWizard.dtd! (edit, then use 'hg resolve --mark')
merging mail/locales/en-US/chrome/messenger/localMsgs.properties
merging mail/locales/en-US/chrome/messenger/messenger.properties
merging mailnews/base/content/folderProps.xhtml
merging mailnews/base/content/msgSynchronize.xhtml
merging mailnews/base/prefs/content/AccountWizard.xhtml
warning: conflicts while merging mailnews/base/prefs/content/AccountWizard.xhtml! (edit, then use 'hg resolve --mark')
merging mailnews/base/prefs/content/accountUtils.js
warning: conflicts while merging mailnews/base/prefs/content/accountUtils.js! (edit, then use 'hg resolve --mark')
merging mailnews/base/prefs/content/am-offline.xhtml
merging mailnews/base/prefs/content/am-server.xhtml
warning: conflicts while merging mailnews/base/prefs/content/am-server.xhtml! (edit, then use 'hg resolve --mark')
merging mailnews/base/prefs/content/aw-done.js
warning: conflicts while merging mailnews/base/prefs/content/aw-done.js! (edit, then use 'hg resolve --mark')
merging mailnews/base/public/nsIMsgAccountManager.idl
merging mailnews/base/public/nsIMsgIncomingServer.idl
merging mailnews/base/src/mailstoreConverter.jsm
merging mailnews/build/nsMailModule.cpp
merging mailnews/local/src/moz.build
merging mailnews/local/src/nsLocalMailFolder.cpp
merging mailnews/local/src/nsLocalUtils.cpp
merging mailnews/local/test/unit/xpcshell-cpp.ini and mailnews/local/test/unit/xpcshell.ini to mailnews/local/test/unit/xpcshell-cpp.ini
warning: conflicts while merging mailnews/local/test/unit/xpcshell-cpp.ini! (edit, then use 'hg resolve --mark')
merging mailnews/local/test/unit/xpcshell.ini
warning: conflicts while merging mailnews/local/test/unit/xpcshell.ini! (edit, then use 'hg resolve --mark')
merging mailnews/moz.build
merging mailnews/moz.configure
warning: conflicts while merging mailnews/moz.configure! (edit, then use 'hg resolve --mark')
merging suite/components/migration/src/nsSuiteProfileMigratorBase.cpp
merging suite/locales/en-US/chrome/mailnews/messenger.properties
merging suite/mailnews/content/msgViewPickerOverlay.js
13 files updated, 17 files merged, 0 files removed, 8 files unresolved

diff --git a/mail/locales/en-US/chrome/messenger/AccountWizard.dtd b/mail/locales/en-US/chrome/messenger/AccountWizard.dtd
--- a/mail/locales/en-US/chrome/messenger/AccountWizard.dtd
+++ b/mail/locales/en-US/chrome/messenger/AccountWizard.dtd
@@ -2,16 +2,33 @@
    - License, v. 2.0. If a copy of the MPL was not distributed with this
    - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
 
 <!-- Entities for AccountWizard -->
 
 <!ENTITY windowTitle.label "Account Wizard">
 <!ENTITY accountWizard.size "width: 40em; height: 38em;">
 
+<<<<<<< local
+=======
+<!-- Entities for Account Type page -->
+
+<!ENTITY accountSetupInfo2.label "In order to receive messages, you first need to set up an account.">
+<!ENTITY accountTypeTitle.label "New Account Setup">
+<!ENTITY accountTypeDesc2.label "This Wizard will collect the information necessary to set up an account. If you do not know the information requested, please contact your System Administrator or Internet Service Provider.">
+<!ENTITY accountTypeDirections.label "Select the type of account you would like to set up:">
+<!ENTITY accountTypeMail.label "Email account">
+<!ENTITY accountTypeMail.accesskey "m">
+<!ENTITY accountTypeNews.label "Newsgroup account">
+<!ENTITY accountTypeNews.accesskey "w">
+<!-- LOCALIZATION NOTE(accountTypeMovemail.label): do not translate 'Movemail' -->
+<!ENTITY accountTypeMovemail.label "Unix Mailspool (Movemail)">
+<!ENTITY accountTypeMovemail.accesskey "U">
+
+>>>>>>> other
 <!-- Entities for Identity page -->
 
 <!ENTITY identityTitle.label "Identity">
 <!ENTITY identityDesc.label "Each account has an identity, which is the information that identifies you to others when they receive your messages.">
 
 <!-- LOCALIZATION NOTE (fullnameDesc.label) : do not translate two of "&quot;" in below line -->
 <!ENTITY fullnameDesc.label "Enter the name you would like to appear in the &quot;From&quot; field of your outgoing messages">
 <!-- LOCALIZATION NOTE (fullnameExample.label) : use following directions for below line
diff --git a/mail/locales/en-US/chrome/messenger/localMsgs.properties b/mail/locales/en-US/chrome/messenger/localMsgs.properties
--- a/mail/locales/en-US/chrome/messenger/localMsgs.properties
+++ b/mail/locales/en-US/chrome/messenger/localMsgs.properties
@@ -94,16 +94,29 @@ copyingMessagesStatus=Copying %S of %S m
 
 movingMessagesStatus=Moving %S of %S messages to %S
 
 # Status - pop3 server or folder busy
 # LOCALIZATION NOTE (pop3ServerBusy): Do not translate the word "%S" below.
 # Place %S where the account name should appear.
 pop3ServerBusy=The account %S is being processed. Please wait until processing is complete to get messages.
 
+movemailCantOpenSpoolFile=Unable to open mail spool file %S.
+
+movemailCantCreateLock=Unable to create lock file %S. For movemail to work, it is necessary to create lock files in the mail spool directory. On many systems, this is best accomplished by making the spool directory be mode 01777.
+
+movemailCantDeleteLock=Unable to delete lock file %S.
+
+movemailCantTruncateSpoolFile=Unable to truncate spool file %S.
+
+movemailSpoolFileNotFound=Unable to locate mail spool file.
+
+#LOCALIZATION NOTE (movemailCantParseSpool): %S is file name
+movemailCantParseSpool=Unable to parse spool file %S. The file may be corrupt or not valid.
+
 pop3TmpDownloadError=There was an error downloading the following message:   \nFrom: %S\n   Subject: %S\n This message may contain a virus or there is not enough disk space. Skip this message?
 
 # Status - the server doesn't support UIDLâ€¦
 # LOCALIZATION NOTE(pop3ServerDoesNotSupportUidlEtc): The following sentence should be translated in this way:
 # Do not translate "POP3"
 # Do not translate "%S". Place %S in your translation where the name of the server should appear.
 # Do not translate "UIDL"
 pop3ServerDoesNotSupportUidlEtc=The POP3 mail server (%S) does not support UIDL or XTND XLST, which are required to implement the ``Leave on Server'', ``Maximum Message Size'' or ``Fetch Headers Only'' options. To download your mail, turn off these options in the Server Settings for your mail server in the Account Settings window.
diff --git a/mail/locales/en-US/chrome/messenger/messenger.properties b/mail/locales/en-US/chrome/messenger/messenger.properties
--- a/mail/locales/en-US/chrome/messenger/messenger.properties
+++ b/mail/locales/en-US/chrome/messenger/messenger.properties
@@ -126,16 +126,18 @@ oauth2WindowTitle=Enter credentials for 
 
 # LOCALIZATION NOTE(serverType-nntp): Do not translate "NNTP" in the line below
 serverType-nntp=News Server (NNTP)
 # LOCALIZATION NOTE(serverType-pop3): Do not translate "POP" in the line below
 serverType-pop3=POP Mail Server
 # LOCALIZATION NOTE(serverType-imap): Do not translate "IMAP" in the line below
 serverType-imap=IMAP Mail Server
 serverType-none=Local Mail Store
+# LOCALIZATION NOTE(serverType-movemail): DONT_TRANSLATE
+serverType-movemail=Unix Movemail
 
 sizeColumnTooltip2=Sort by size
 sizeColumnHeader=Size
 linesColumnTooltip2=Sort by lines
 linesColumnHeader=Lines
 
 # LOCALIZATION NOTE (getMsgButtonTooltip): Do not translate the word "%S" below.
 # Place the word "%S" in your translation where the name of the comma separated accounts should appear.
diff --git a/mail/locales/en-US/chrome/messenger/msgAccountCentral.dtd b/mail/locales/en-US/chrome/messenger/msgAccountCentral.dtd
--- a/mail/locales/en-US/chrome/messenger/msgAccountCentral.dtd
+++ b/mail/locales/en-US/chrome/messenger/msgAccountCentral.dtd
@@ -8,16 +8,17 @@
 
 <!ENTITY newsSectionHdr.label         "Newsgroups">
 <!ENTITY subscribeNewsLink.label      "Manage newsgroup subscriptions">
 
 <!ENTITY feedsSectionHdr.label        "Feeds">
 <!ENTITY subscribeFeeds.label         "Manage subscriptions">
 
 <!ENTITY chat.label                   "Chat">
+<!ENTITY movemail.label               "Movemail">
 
 <!ENTITY accountsSectionHdr.label     "Accounts">
 <!ENTITY subscribeImapFolders.label   "Manage folder subscriptions">
 <!ENTITY settingsLink.label           "View settings for this account">
 <!ENTITY setupNewAcct.label           "Set up an account:">
 
 <!ENTITY advFeaturesSectionHdr.label  "Advanced Features">
 <!ENTITY searchMsgsLink.label         "Search messages">
diff --git a/mailnews/base/content/folderProps.xhtml b/mailnews/base/content/folderProps.xhtml
--- a/mailnews/base/content/folderProps.xhtml
+++ b/mailnews/base/content/folderProps.xhtml
@@ -32,19 +32,19 @@
         buttons="accept,cancel"
         style="width: 0;">
   <stringbundle id="bundle_messenger" src="chrome://messenger/locale/messenger.properties"/>
 
 <tabbox id="folderPropTabBox">
   <tabs id="folderPropTabs">
     <tab id="GeneralTab" label="&generalInfo.label;"/>
     <tab id="Retention" label="&retention.label;"/>
-    <tab id="SynchronizationTab" hidefor="pop3,rss,none" label="&folderSynchronizationTab.label;"/>
-    <tab id="SharingTab" hidefor="pop3,rss,none,nntp" label="&folderSharingTab.label;"/>
-    <tab id="QuotaTab" hidefor="pop3,rss,none,nntp" label="&folderQuotaTab.label;"/>
+    <tab id="SynchronizationTab" hidefor="movemail,pop3,rss,none" label="&folderSynchronizationTab.label;"/>
+    <tab id="SharingTab" hidefor="movemail,pop3,rss,none,nntp" label="&folderSharingTab.label;"/>
+    <tab id="QuotaTab" hidefor="movemail,pop3,rss,none,nntp" label="&folderQuotaTab.label;"/>
   </tabs>
   <tabpanels id="folderPropTabPanels">
 
     <vbox id="GeneralPanel">
       <hbox id="nameBox" align="center" class="input-container">
         <label id="nameLabel" value="&folderProps.name.label;" control="name"
                accesskey="&folderProps.name.accesskey;"/>
         <hbox align="center" class="input-container">
@@ -84,17 +84,17 @@
           <label value="&sizeOnDisk.label;"/>
           <label id="sizeOnDisk" value="&sizeUnknown.label;"/>
         </hbox>
         <spacer height="2"/>
       </vbox>
       <checkbox id="folderIncludeInGlobalSearch" hidefor="nntp"
                 label="&folderIncludeInGlobalSearch.label;"
                 accesskey="&folderIncludeInGlobalSearch.accesskey;"/>
-      <checkbox hidefor="pop3,none,nntp"
+      <checkbox hidefor="movemail,pop3,none,nntp"
                 id="folderCheckForNewMessages"
                 label="&folderCheckForNewMessages2.label;"
                 accesskey="&folderCheckForNewMessages2.accesskey;"/>
       <separator class="thin"/>
       <hbox>
         <description id="folderRebuildSummaryExplanation" flex="1">
           &folderRebuildSummaryFile.explanation;
         </description>
@@ -106,18 +106,18 @@
                   tooltiptext="&folderRebuildSummaryFileTip2.label;"
                   align="center"/>
         </vbox>
       </hbox>
     </vbox>
 
     <vbox id="RetentionPanel" align="start">
     <description hidefor="imap,pop3" class="desc">&retentionCleanup.label;</description>
-    <description hidefor="pop3,rss,none,nntp" class="desc">&retentionCleanupImap.label;</description>
-    <description hidefor="imap,rss,none,nntp" class="desc">&retentionCleanupPop.label;</description>
+    <description hidefor="movemail,pop3,rss,none,nntp" class="desc">&retentionCleanupImap.label;</description>
+    <description hidefor="movemail,imap,rss,none,nntp" class="desc">&retentionCleanupPop.label;</description>
 
         <hbox align="center" class="indent">
           <checkbox wsm_persist="true" id="retention.useDefault" accesskey="&retentionUseAccount.accesskey;"
               label="&retentionUseAccount.label;" checked="true" oncommand="onUseDefaultRetentionSettings()"/>
         </hbox>
         <vbox class="indent">
           <hbox class="indent">
             <radiogroup wsm_persist="true" id="retention.keepMsg" aria-labelledby="retention.useDefault">
@@ -185,17 +185,17 @@
       </vbox>
       <vbox id="folderOtherUsers" align="start" hidden="true">
         <label value=" "/>
         <label value="&folderOtherUsers.label;"/>
         <description id="folderOtherUsersText"></description>
       </vbox>
       <spacer flex="100%"/>
       <vbox align="start">
-        <button hidefor="pop3,none,rss,nntp" label="&privileges.button.label;"
+        <button hidefor="movemail,pop3,none,rss,nntp" label="&privileges.button.label;"
                 oncommand="onFolderPrivileges();" accesskey="&privileges.button.accesskey;"
                 id="imap.FolderPrivileges" orient="right"/>
       </vbox>
     </vbox>
 
     <vbox id="quotaPanel">
       <label id="folderQuotaStatus" flex="1"/>
       <hbox id="folderQuotaData" hidden="true">
diff --git a/mailnews/base/content/msgSynchronize.xhtml b/mailnews/base/content/msgSynchronize.xhtml
--- a/mailnews/base/content/msgSynchronize.xhtml
+++ b/mailnews/base/content/msgSynchronize.xhtml
@@ -1,12 +1,15 @@
 <?xml version="1.0"?>
-<!-- This Source Code Form is subject to the terms of the Mozilla Public
+
+<!--
+
+ This Source Code Form is subject to the terms of the Mozilla Public
    - License, v. 2.0. If a copy of the MPL was not distributed with this
-   - file, You can obtain one at https://mozilla.org/MPL/2.0/. -->
+   - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->
 
 <?xml-stylesheet href="chrome://messenger/skin/messenger.css" type="text/css"?>
 <?xml-stylesheet href="chrome://messenger/skin/themeableDialog.css" type="text/css"?>
 
 <!DOCTYPE html SYSTEM "chrome://messenger/locale/msgSynchronize.dtd">
 <html id="msgSynchronize" xmlns="http://www.w3.org/1999/xhtml"
       xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
       xmlns:html="http://www.w3.org/1999/xhtml"
@@ -20,17 +23,17 @@
   <script defer="defer" src="chrome://messenger/content/msgSynchronize.js"></script>
 </head>
 <html:body xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
   <dialog id="msg-synchronizer">
     <html:p>&MsgSyncDesc.label;</html:p>
     <html:p>&MsgSyncDirections.label;</html:p>
 
     <vbox class="indent" align="start">
-        <checkbox id="syncMail" hidable="true" hidefor="pop3" label="&syncTypeMail.label;"
+        <checkbox id="syncMail" hidable="true" hidefor="movemail,pop3" label="&syncTypeMail.label;"
                   accesskey="&syncTypeMail.accesskey;"/>
         <checkbox id="syncNews" label="&syncTypeNews.label;" accesskey="&syncTypeNews.accesskey;"/>
     </vbox>
     <vbox align="start">
         <checkbox id="sendMessage" label="&sendMessage.label;" accesskey="&sendMessage.accesskey;"/>
         <checkbox id="workOffline" label="&workOffline.label;" accesskey="&workOffline.accesskey;"/>
     </vbox>
     <separator class="thin"/>
diff --git a/mailnews/base/prefs/content/AccountWizard.xhtml b/mailnews/base/prefs/content/AccountWizard.xhtml
--- a/mailnews/base/prefs/content/AccountWizard.xhtml
+++ b/mailnews/base/prefs/content/AccountWizard.xhtml
@@ -36,16 +36,48 @@
   <script src="chrome://messenger/content/amUtils.js"/>
   <script src="chrome://messenger/content/AccountWizard.js"/>
   <script src="chrome://messenger/content/aw-identity.js"/>
   <script src="chrome://messenger/content/aw-incoming.js"/>
   <script src="chrome://messenger/content/aw-accname.js"/>
   <script src="chrome://messenger/content/aw-done.js"/>
 
   <wizard>
+<<<<<<< local
+=======
+    <!-- Account Type page : Displays choices of mail and news accounts that user can create -->
+    <wizardpage id="accounttype" pageid="accounttype"
+                label="&accountTypeTitle.label;">
+      <vbox flex="1">
+        <description>&accountSetupInfo2.label;</description>
+        <description>&accountTypeDesc2.label;</description>
+        <label control="acctyperadio">&accountTypeDirections.label;</label>
+        <separator/>
+        <radiogroup id="acctyperadio">
+#ifndef MOZ_THUNDERBIRD
+          <radio id="mailaccount" value="mailaccount"
+                 label="&accountTypeMail.label;" accesskey="&accountTypeMail.accesskey;"
+                 selected="true"/>
+#endif
+#ifdef MOZ_MOVEMAIL
+          <radio id="movemailaccount" label="&accountTypeMovemail.label;"
+                 accesskey="&accountTypeMovemail.accesskey;"
+                 value="movemail"/>
+#endif
+#ifndef MOZ_THUNDERBIRD
+          <radio id="rssaccount" value="rss" label="&feeds.wizardLongName;"
+                 accesskey="&feeds.wizardLongName.accesskey;"/>
+#endif
+          <radio id="newsaccount" value="newsaccount"
+                 label="&accountTypeNews.label;" accesskey="&accountTypeNews.accesskey;"/>
+        </radiogroup>
+      </vbox>
+    </wizardpage>
+
+>>>>>>> other
     <!-- Identity page : Collects user's full name and email address -->
     <wizardpage id="identitypage" pageid="identitypage"
                 label="&identityTitle.label;">
       <vbox>
         <description flex="1">&identityDesc.label;</description>
         <separator/>
         <description flex="1">&fullnameDesc.label; &fullnameExample.label;</description>
         <separator class="thin"/>
diff --git a/mailnews/base/prefs/content/accountUtils.js b/mailnews/base/prefs/content/accountUtils.js
--- a/mailnews/base/prefs/content/accountUtils.js
+++ b/mailnews/base/prefs/content/accountUtils.js
@@ -86,16 +86,59 @@ function requireLocalFoldersAccount() {
  * Open the Nntp Account Wizard, or focus it if it's already open.
  */
 function openNewsgroupAccountWizard() {
   window.browsingContext.topChromeWindow.openDialog(
     "chrome://messenger/content/AccountWizard.xhtml",
     "AccountWizard",
     "chrome,modal,titlebar,centerscreen"
   );
+<<<<<<< local
+=======
+
+  loadInboxForNewAccount();
+
+  // If we started with no servers at all and "smtp servers" list selected,
+  // refresh display somehow. Bug 58506.
+  // TODO Better fix: select newly created account (in all cases)
+  if (
+    typeof getCurrentAccount == "function" && // in AccountManager, not menu
+    !getCurrentAccount()
+  ) {
+    selectServer(null, null);
+  }
+}
+
+function initAccountWizardTB(args) {
+  let type = args[0] && args[0].acctType;
+  let selType = null;
+  if (type == "newsgroups") {
+    selType = "newsaccount";
+  } else if (type == "movemail") {
+    selType = "movemail";
+  }
+  let accountwizard = document.querySelector("wizard");
+  let acctyperadio = document.getElementById("acctyperadio");
+  let feedRadio = acctyperadio.querySelector("radio[value='Feeds']");
+  if (feedRadio) {
+    feedRadio.remove();
+  }
+  if (selType) {
+    acctyperadio.selectedItem = acctyperadio.querySelector(
+      "radio[value='" + selType + "']"
+    );
+    accountwizard.advance("identitypage");
+  } else {
+    acctyperadio.selectedItem = acctyperadio.getItemAtIndex(0);
+  }
+}
+
+function AddMailAccount() {
+  NewMailAccount(MailServices.mailSession.topmostMsgWindow, updateMailPaneUI);
+>>>>>>> other
 }
 
 function AddIMAccount() {
   window.browsingContext.topChromeWindow.openDialog(
     "chrome://messenger/content/chat/imAccountWizard.xhtml",
     "",
     "chrome,modal,titlebar,centerscreen"
   );
diff --git a/mailnews/base/prefs/content/am-offline.xhtml b/mailnews/base/prefs/content/am-offline.xhtml
--- a/mailnews/base/prefs/content/am-offline.xhtml
+++ b/mailnews/base/prefs/content/am-offline.xhtml
@@ -30,52 +30,52 @@
 
     <hbox id="headertitle" class="dialogheader">
       <label class="dialogheader-title"/>
     </hbox>
 
     <separator class="thin"/>
 
     <html:div>
-    <html:fieldset id="offline.titlebox" hidefor="pop3,none,rss">
+    <html:fieldset id="offline.titlebox" hidefor="movemail,pop3,none,rss">
       <html:legend>&syncGroupTitle.label;</html:legend>
 
       <vbox>
-        <checkbox hidefor="pop3,nntp,none"
+        <checkbox hidefor="movemail,pop3,nntp,none"
                   id="offline.folders" label="&allFoldersOffline2.label;"
                   oncommand="toggleOffline()"
                   accesskey="&allFoldersOffline2.accesskey;"/>
 
-        <description hidefor="pop3,nntp,none,rss">&allFoldersOfflineNote.label;</description>
+        <description hidefor="pop3,nntp,movemail,none,rss">&allFoldersOfflineNote.label;</description>
 
-        <separator class="thin" hidefor="pop3,nntp,none"/>
+        <separator class="thin" hidefor="movemail,pop3,nntp,none"/>
 
-        <hbox hidefor="pop3,nntp,none" pack="end">
+        <hbox hidefor="movemail,pop3,nntp,none" pack="end">
           <button label="&offlineImapAdvancedOffline.label;" accesskey="&offlineImapAdvancedOffline.accesskey;"
                   oncommand="onClickSelect()" id="selectImapFoldersButton" class="selectForOfflineUseButton"/>
         </hbox>
 
-        <hbox hidefor="pop3,imap,none" pack="end">
+        <hbox hidefor="movemail,pop3,imap,none" pack="end">
           <button label="&offlineSelectNntp.label;" accesskey="&offlineSelectNntp.accesskey;"
                   oncommand="onClickSelect()" id="selectNewsgroupsButton" class="selectForOfflineUseButton"/>
         </hbox>
       </vbox>
     </html:fieldset>
     </html:div>
 
     <html:div>
     <html:fieldset id="diskspace.titlebox">
-      <html:legend hidefor="pop3,none,rss">&diskspaceGroupTitle.label;</html:legend>
+      <html:legend hidefor="movemail,pop3,none,rss">&diskspaceGroupTitle.label;</html:legend>
 
-    <description hidefor="pop3,nntp,none,rss">&doNotDownloadImap.label;</description>
-    <description hidefor="pop3,imap,none,rss">&doNotDownloadNntp.label;</description>
+    <description hidefor="pop3,nntp,movemail,none,rss">&doNotDownloadImap.label;</description>
+    <description hidefor="pop3,imap,movemail,none,rss">&doNotDownloadNntp.label;</description>
     <description hidefor="imap,nntp,none,rss">&doNotDownloadPop3Movemail.label;</description>
 
     <!-- IMAP Autosync Preference -->
-    <radiogroup hidefor="pop3,nntp,none,rss" id="autosyncSelect" class="indent">
+    <radiogroup hidefor="pop3,nntp,movemail,none,rss" id="autosyncSelect" class="indent">
       <radio id="useAutosync.AllMsg" value="0" accesskey="&allAutosync.accesskey;"
              label="&allAutosync.label;" oncommand="onAutosyncChange();"/>
       <hbox flex="1" align="center">
         <radio id="useAutosync.ByAge" accesskey="&ageAutosync.accesskey;"
                value="1" label="&ageAutosyncBefore.label;" oncommand="onAutosyncChange();"/>
         <html:input id="autosyncValue" type="number"
                     class="size4 input-inline autosync" min="1"
                     onchange="onAutosyncChange();"
@@ -89,57 +89,57 @@
             <menuitem label="&yearAgeInterval.label;" value="365"/>
           </menupopup>
         </menulist>
         <label id="ageAutosyncAfter" control="autosyncInterval" value="&ageAutosyncAfter.label;"/>
       </hbox>
     </radiogroup>
 
     <hbox align="center" class="indent" hidefor="rss">
-        <checkbox hidefor="pop3,imap,none"
+        <checkbox hidefor="movemail,pop3,imap,none"
                   id="nntp.notDownloadRead" wsm_persist="true"
                   label="&nntpNotDownloadRead.label;"
                   accesskey="&nntpNotDownloadRead.accesskey;"/>
     </hbox>
 
     <hbox align="center" class="indent" hidefor="none,rss">
         <checkbox wsm_persist="true" id="offline.notDownload" hidefor="imap"
                   label="&offlineNotDownload.label;"
                   accesskey="&offlineNotDownload.accesskey;"
                   oncommand="onCheckItem('offline.notDownloadMin', [this.id]);"/>
-        <checkbox wsm_persist="true" id="autosyncNotDownload" hidefor="pop3,nntp"
+        <checkbox wsm_persist="true" id="autosyncNotDownload" hidefor="pop3,nntp,movemail"
                   label="&autosyncNotDownload.label;"
                   accesskey="&autosyncNotDownload.accesskey;"
                   oncommand="onAutosyncNotDownload();"/>
         <html:input id="offline.notDownloadMin" type="number"
                     class="size4 input-inline"
                     min="1" value="50"
                     wsm_persist="true"
                     aria-labelledby="offline.notDownload offline.notDownloadMin kbLabel"/>
         <label value="&kb.label;" control="offline.notDownloadMin" id="kbLabel"/>
     </hbox>
 
-    <hbox align="center" class="indent" hidefor="pop3,imap,none,rss">
+    <hbox align="center" class="indent" hidefor="movemail,pop3,imap,none,rss">
         <checkbox wsm_persist="true" id="nntp.downloadMsg"
                   label="&nntpDownloadMsg.label;"
                   accesskey="&nntpDownloadMsg.accesskey;"
                   oncommand="onCheckItem('nntp.downloadMsgMin', [this.id]);"/>
         <html:input id="nntp.downloadMsgMin" type="number"
                     class="size2 input-inline" min="1" value="30"
                     wsm_persist="true"
                     aria-labelledby="nntp.downloadMsg nntp.downloadMsgMin daysOldLabel"/>
         <label value="&daysOld.label;" control="nntp.downloadMsgMin"
                id="daysOldLabel"/>
     </hbox>
 
     <vbox align="start">
     <separator hidefor="none,rss"/>
     <label id="retentionDescription" hidefor="imap,pop3" class="desc" control="retention.keepMsg">&retentionCleanup.label;</label>
-    <label id="retentionDescriptionImap" hidefor="pop3,nntp,none,rss" class="desc" control="retention.keepMsg">&retentionCleanupImap.label;</label>
-    <label id="retentionDescriptionPop" hidefor="imap,nntp,none,rss" class="desc" control="retention.keepMsg">&retentionCleanupPop.label;</label>
+    <label id="retentionDescriptionImap" hidefor="movemail,pop3,nntp,none,rss" class="desc" control="retention.keepMsg">&retentionCleanupImap.label;</label>
+    <label id="retentionDescriptionPop" hidefor="movemail,imap,nntp,none,rss" class="desc" control="retention.keepMsg">&retentionCleanupPop.label;</label>
 
     <radiogroup hidefor="" confirmfor="imap,pop3" id="retention.keepMsg" class="indent"
                 oncommand="warnServerRemove(this);">
         <radio id="retention.keepAllMsg" value="1" accesskey="&retentionKeepAll.accesskey;"
             label="&retentionKeepAll.label;" oncommand="onCheckKeepMsg();"/>
         <hbox flex="1" align="center">
             <radio id="retention.keepNewMsg" accesskey="&retentionKeepRecent.accesskey;"
                 value="3" label="&retentionKeepRecent.label;" oncommand="onCheckKeepMsg();"/>
@@ -160,17 +160,17 @@
     </radiogroup>
 
     <hbox align="center" class="indent">
       <checkbox id="retention.applyToFlagged"
                 label="&retentionApplyToFlagged.label;" hidefor=""
                 accesskey="&retentionApplyToFlagged.accesskey;"
                 checked="true"/>
     </hbox>
-    <hbox align="center" class="indent" hidefor="pop3,imap,none,rss">
+    <hbox align="center" class="indent" hidefor="movemail,pop3,imap,none,rss">
         <checkbox id="nntp.removeBody" accesskey="&nntpRemoveMsgBody.accesskey;"
                   label="&nntpRemoveMsgBody.label;" oncommand="onCheckItem('nntp.removeBodyMin', [this.id]);"/>
         <html:input id="nntp.removeBodyMin" type="number"
                     class="size2 input-inline" min="1" value="30"
                     aria-labelledby="nntp.removeBody nntp.removeBodyMin daysOldMsg"/>
         <label value="&daysOld.label;" control="nntp.removeBodyMin" id="daysOldMsg"/>
     </hbox>
     </vbox>
diff --git a/mailnews/base/prefs/content/am-server.xhtml b/mailnews/base/prefs/content/am-server.xhtml
--- a/mailnews/base/prefs/content/am-server.xhtml
+++ b/mailnews/base/prefs/content/am-server.xhtml
@@ -63,17 +63,17 @@
         <html:input id="server.hostName"
                     type="text"
                     wsm_persist="true"
                     size="20"
                     prefstring="mail.server.%serverkey%.hostname"
                     class="uri-element input-flex input-inline"
                     aria-labelledby="fixedServerName"/>
       </div>
-      <div class="input-container" style="grid-row: 2;">
+      <div class="input-container" hidefor="movemail" style="grid-row: 2;">
         <xul:label value="&port.label;"
                    accesskey="&port.accesskey;" control="server.port"/>
         <xul:label id="fixedServerPort"
                    collapsed="true" use="server.port"/>
         <html:input id="server.port" type="number"
                     class="size3"
                     min="1" max="65535"
                     wsm_persist="true"
@@ -97,17 +97,17 @@
                     prefstring="mail.server.%serverkey%.username"
                     aria-labelledby="fixedUserName"/>
       </div>
     </div>
 
     <separator/>
 
     <html:div>
-    <html:fieldset>
+    <html:fieldset hidefor="movemail">
       <html:legend>&securitySettings.label;</html:legend>
       <html:table>
         <html:tr>
           <html:td>
             <label value="&connectionSecurity.label;"
                    accesskey="&connectionSecurity.accesskey;"
                    control="server.socketType"/>
           </html:td>
@@ -126,24 +126,24 @@
             </menulist>
           </html:td>
         </html:tr>
         <html:tr>
           <html:td>
             <label value="&authMethod.label;"
                    accesskey="&authMethod.accesskey;"
                    control="server.authMethod"
-                   hidefor="nntp"/>
+                   hidefor="nntp,movemail"/>
           </html:td>
           <html:td>
             <menulist id="server.authMethod"
                       wsm_persist="true"
                       preftype="int"
                       prefstring="mail.server.%serverkey%.authMethod"
-                      hidefor="nntp"
+                      hidefor="nntp,movemail"
                       style="width:100%;">
               <menupopup id="server.authMethodPopup">
                 <menuitem id="authMethod-no" value="1"/>
                 <menuitem id="authMethod-old" value="2"/>
                 <menuitem id="authMethod-password-cleartext" value="3"/>
                 <menuitem id="authMethod-password-encrypted" value="4"/>
                 <menuitem id="authMethod-kerberos" value="5"/>
                 <menuitem id="authMethod-ntlm" value="6"/>
@@ -184,35 +184,35 @@
                     aria-labelledby="server.doBiff server.biffMinutes biffEnd"
                     preftype="int"
                     prefstring="mail.server.%serverkey%.check_time"/>
         <label id="biffEnd"
                control="server.biffMinutes"
                value="&biffEnd.label;"/>
       </hbox>
       <vbox align="start"
-            hidefor="pop3,nntp">
+            hidefor="pop3,nntp,movemail">
         <checkbox wsm_persist="true"
                   id="imap.useIdle"
                   label="&useIdleNotifications.label;"
                   accesskey="&useIdleNotifications.accesskey;"
                   prefattribute="value"
                   prefstring="mail.server.%serverkey%.use_idle"/>
       </vbox>
 
-    <!-- Necessary for POP3 (Bug 480945) -->
+    <!-- Necessary for POP3 and Movemail (Bug 480945) -->
     <!-- https://bugzilla.mozilla.org/show_bug.cgi?id=480945 -->
     <vbox align="start" hidefor="imap,nntp">
       <checkbox wsm_persist="true" id="server.downloadOnBiff"
                 label="&downloadOnBiff.label;" prefattribute="value"
                 accesskey="&downloadOnBiff.accesskey;"
                 prefstring="mail.server.%serverkey%.download_on_biff"/>
     </vbox>
     <!-- POP3 -->
-    <vbox align="start" hidefor="imap,nntp">
+    <vbox align="start" hidefor="imap,nntp,movemail">
       <checkbox wsm_persist="true" id="pop3.headersOnly"
                 label="&headersOnly.label;"
                 accesskey="&headersOnly.accesskey;"
                 prefattribute="value"
                 prefstring="mail.server.%serverkey%.headers_only"/>
 
       <checkbox wsm_persist="true" id="pop3.leaveMessagesOnServer"
                 label="&leaveOnServer.label;" oncommand="setupMailOnServerUI();"
@@ -237,41 +237,41 @@
 
       <checkbox wsm_persist="true" id="pop3.deleteMailLeftOnServer" class="indent"
                 label="&deleteOnServer2.label;"
                 accesskey="&deleteOnServer2.accesskey;"
                 prefattribute="value"
                 prefstring="mail.server.%serverkey%.delete_mail_left_on_server"/>
 
     <!-- hidden elements for data transfer to and from advanced... dialog -->
-    <hbox flex="1" hidefor="imap,nntp" hidden="true">
+    <hbox flex="1" hidefor="imap,nntp,movemail" hidden="true">
       <checkbox hidden="true" wsm_persist="true" id="pop3.deferGetNewMail"
                 prefattribute="value"
                 prefstring="mail.server.%serverkey%.deferGetNewMail"/>
       <label hidden="true" wsm_persist="true" id="pop3.deferredToAccount"
                 prefattribute="value"
                 prefstring="mail.server.%serverkey%.deferredToAccount"/>
 
     </hbox>
     </vbox>
     <!-- IMAP -->
     <label hidden="true" wsm_persist="true" id="imap.trashFolderName"
                   prefattribute="value"
                   prefstring="mail.server.%serverkey%.trash_folder_name"/>
 
     <separator class="thin"/>
 
-    <hbox align="center" hidefor="pop3,nntp">
+    <hbox align="center" hidefor="pop3,nntp,movemail">
       <label value="&deleteMessagePrefix.label;" align="start"
              control="imap.deleteModel"/>
     </hbox>
     <vbox>
       <hbox align="center"
             id="imap.deleteModel.box"
-            hidefor="pop3,nntp"
+            hidefor="pop3,nntp,movemail"
             flex="1">
         <radiogroup id="imap.deleteModel"
                     wsm_persist="true"
                     oncommand="selectImapDeleteModel(this.value);"
                     prefstring="mail.server.%serverkey%.delete_model">
           <hbox class="specialFolderPickerGrid">
             <vbox>
               <hbox flex="1" align="center">
@@ -310,22 +310,22 @@
         <!-- This button should have identical attributes to the
              server.popAdvancedButton except the hidefor attribute. -->
         <button label="&advancedButton.label;"
                 accesskey="&advancedButton.accesskey;"
                 oncommand="onAdvanced();"
                 wsm_persist="true"
                 id="server.imapAdvancedButton"
                 prefstring="mail.server.%serverkey%.advanced.disable"
-                hidefor="pop3,nntp"/>
+                hidefor="pop3,nntp,movemail"/>
       </hbox>
     </vbox>
 
     <!-- Advanced IMAP settings -->
-    <hbox flex="1" hidefor="pop3,nntp" hidden="true">
+    <hbox flex="1" hidefor="pop3,nntp,movemail" hidden="true">
       <checkbox hidden="true" wsm_persist="true" id="imap.dualUseFolders"
                 prefattribute="value"
                 prefstring="mail.server.%serverkey%.dual_use_folders"/>
       <checkbox hidden="true" wsm_persist="true" id="imap.usingSubscription"
                 prefattribute="value"
                 prefstring="mail.server.%serverkey%.using_subscription"/>
       <label hidden="true" wsm_persist="true" id="imap.maximumConnectionsNumber"/>
       <label hidden="true" wsm_persist="true" id="imap.personalNamespace"/>
@@ -333,47 +333,47 @@
       <label hidden="true" wsm_persist="true" id="imap.otherUsersNamespace"/>
       <label hidden="true" wsm_persist="true" id="imap.serverDirectory"/>
       <checkbox hidden="true" wsm_persist="true" id="imap.overrideNamespaces"
                 prefattribute="value"
                 prefstring="mail.server.%serverkey%.override_namespaces"/>
     </hbox>
 
     <!-- NNTP -->
-    <hbox hidefor="pop3,imap" align="center">
+    <hbox hidefor="pop3,imap,movemail" align="center">
       <checkbox id="nntp.notifyOn"
                 wsm_persist="true"
                 label="&maxMessagesStart.label;"
                 accesskey="&maxMessagesStart.accesskey;"
                 oncommand="onCheckItem('nntp.maxArticles', [this.id]);"
                 prefattribute="value"
                 prefstring="mail.server.%serverkey%.notify.on"/>
       <html:input id="nntp.maxArticles" type="number"
                   class="size4" min="1"
                   wsm_persist="true"
                   aria-labelledby="nntp.notifyOn nntp.maxArticles maxMessagesEnd"
                   preftype="int"
                   prefstring="mail.server.%serverkey%.max_articles"/>
       <label control="nntp.maxArticles" value="&maxMessagesEnd.label;" id="maxMessagesEnd"/>
     </hbox>
-    <checkbox hidefor="pop3,imap" wsm_persist="true" id="nntp.pushAuth"
+    <checkbox hidefor="pop3,imap,movemail" wsm_persist="true" id="nntp.pushAuth"
               label="&alwaysAuthenticate.label;"
               accesskey="&alwaysAuthenticate.accesskey;"
               prefattribute="value"
               prefstring="mail.server.%serverkey%.always_authenticate"/>
     </html:fieldset>
     </html:div>
 
     <html:div>
     <html:fieldset>
       <html:legend>&messageStorage.label;</html:legend>
 
       <hbox align="end">
         <vbox align="start" flex="1" id="exitHandlingBox=">
-          <checkbox hidefor="pop3,nntp"
+          <checkbox hidefor="pop3,nntp,movemail"
                     wsm_persist="true"
                     id="imap.cleanupInboxOnExit"
                     label="&expungeOnExit.label;"
                     accesskey="&expungeOnExit.accesskey;"
                     prefattribute="value"
                     prefstring="mail.server.%serverkey%.cleanup_inbox_on_exit"/>
           <checkbox hidefor="nntp"
                     wsm_persist="true"
@@ -384,17 +384,17 @@
                     prefstring="mail.server.%serverkey%.empty_trash_on_exit"/>
         </vbox>
         <button label="&advancedButton.label;"
                 accesskey="&advancedButton.accesskey;"
                 oncommand="onAdvanced();"
                 wsm_persist="true"
                 id="server.popAdvancedButton"
                 prefstring="mail.server.%serverkey%.advanced.disable"
-                hidefor="imap,nntp"/>
+                hidefor="imap,nntp,movemail"/>
       </hbox>
       <hbox align="center">
         <label value="&storeType.label;"
                accesskey="&storeType.accesskey;"
                control="server.storeTypeMenulist"/>
         <menulist id="server.storeTypeMenulist"
                   oncommand="clickStoreTypeMenu(this);">
           <menupopup id="server.storeTypeMenupopup">
@@ -403,17 +403,17 @@
                       label="&mboxStore2.label;"/>
             <menuitem id="server.maildirStore"
                       value="@mozilla.org/msgstore/maildirstore;1"
                       label="&maildirStore.label;"/>
           </menupopup>
         </menulist>
       </hbox>
 
-      <hbox align="center" hidefor="imap,pop3">
+      <hbox align="center" hidefor="imap,pop3,movemail">
         <label id="nntp.newsrcFilePath.label" value="&newsrcFilePath1.label;"
                control="nntp.newsrcFilePath"/>
         <hbox class="input-container" flex="1">
           <html:input id="nntp.newsrcFilePath"
                       type="text"
                       readonly="readonly"
                       wsm_persist="true"
                       datatype="nsIFile"
@@ -448,22 +448,26 @@
                 filepickertitle="&localFolderPicker.label;"
                 accesskey="&browseFolder.accesskey;"
                 oncommand="BrowseForLocalFolders();"/>
       </hbox>
 
     </html:fieldset>
     </html:div>
 
+<<<<<<< local
     <hbox hidefor="imap,pop3" align="center" iscontrolcontainer="true">
+=======
+    <hbox hidefor="imap,pop3,movemail" align="center" valign="middle" iscontrolcontainer="true">
+>>>>>>> other
 
     <separator class="thin"/>
       <label value="&serverDefaultCharset2.label;" control="nntp.charset"/>
       <menulist is="menulist-charsetpicker-viewing" id="nntp.charset"
                 hidable="true"
-                hidefor="imap,pop3"
+                hidefor="imap,pop3,movemail"
                 wsm_persist="true"
                 preftype="string"
                 prefstring="mail.server.%serverkey%.charset"/>
     </hbox>
   </vbox>
 </html:body>
 </html>
diff --git a/mailnews/base/prefs/content/aw-accounttype.js b/mailnews/base/prefs/content/aw-accounttype.js
new file mode 100644
--- /dev/null
+++ b/mailnews/base/prefs/content/aw-accounttype.js
@@ -0,0 +1,73 @@
+/* -*- Mode: Java; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+/* import-globals-from AccountWizard.js */
+
+function setAccountTypeData() {
+  var rg = document.getElementById("acctyperadio");
+  var selectedItemId = rg.selectedItem.id;
+  var mail = selectedItemId == "mailaccount";
+  var news = selectedItemId == "newsaccount";
+
+  var pageData = parent.GetPageData();
+  setPageData(pageData, "accounttype", "mailaccount", mail);
+  setPageData(pageData, "accounttype", "newsaccount", news);
+
+  // Other account type, e.g. Movemail
+  setPageData(pageData, "accounttype", "otheraccount", !(news || mail));
+}
+
+function acctTypePageUnload() {
+  setAccountTypeData();
+  setupWizardPanels();
+  return true;
+}
+
+function setupWizardPanels() {
+  let pageData = parent.GetPageData();
+
+  // We default this to false, even though we could set it to true if we
+  // are going to display the page. However as the accname page will set
+  // it to true for us, we'll just default it to false and not work it out
+  // twice.
+  setPageData(pageData, "accname", "userset", false);
+
+  // "done" is the only required panel for all accounts. We used to require an identity panel but not anymore.
+  // initialize wizardPanels with the optional mail/news panels
+  let wizardPanels;
+  let isMailAccount = pageData.accounttype.mailaccount;
+  let isNewsAccount = pageData.accounttype.newsaccount;
+  if (isMailAccount && isMailAccount.value) {
+    wizardPanels = [
+      "identitypage",
+      "incomingpage",
+      "outgoingpage",
+      "accnamepage",
+    ];
+  } else if (isNewsAccount && isNewsAccount.value) {
+    wizardPanels = ["identitypage", "newsserver", "accnamepage"];
+  } else {
+    // An account created by an extension and XUL overlays
+    let pages = document.getElementById("acctyperadio").selectedItem.value;
+    if (pages == "movemail") {
+      wizardPanels = ["identitypage", "outgoingpage", "accnamepage"];
+      setPageData(pageData, "server", "servertype", "movemail");
+      setPageData(pageData, "server", "hostname", "localhost");
+      setPageData(pageData, "server", "port", "");
+    } else {
+      wizardPanels = pages.split(/ *, */);
+    }
+  }
+  wizardPanels.push("done");
+
+  // Set up order of panels
+  for (let i = 0; i < wizardPanels.length - 1; i++) {
+    setNextPage(wizardPanels[i], wizardPanels[i + 1]);
+  }
+
+  // make the account type page go to the very first of our approved wizard panels...this is usually going to
+  // be accounttype --> identitypage unless we were configured to skip the identity page
+  setNextPage("accounttype", wizardPanels[0]);
+}
diff --git a/mailnews/base/prefs/content/aw-done.js b/mailnews/base/prefs/content/aw-done.js
--- a/mailnews/base/prefs/content/aw-done.js
+++ b/mailnews/base/prefs/content/aw-done.js
@@ -7,21 +7,142 @@
 
 var { MailServices } = ChromeUtils.import(
   "resource:///modules/MailServices.jsm"
 );
 
 function donePageInit() {
   var pageData = parent.GetPageData();
 
+<<<<<<< local
   var email = pageData.email;
+=======
+  // Find out if we need to hide details for incoming servers
+  var hideIncoming =
+    pageData.server && pageData.server.servertype.value == "movemail";
+
+  var email = "";
+  if (pageData.identity && pageData.identity.email) {
+    // fixup the email
+    email = pageData.identity.email.value;
+  }
+>>>>>>> other
   setDivTextFromForm("identity.email", email);
+<<<<<<< local
   setDivTextFromForm("server.username", getUsernameFromEmail(email));
   setDivTextFromForm("account.name", pageData.prettyName);
   setDivTextFromForm("newsServer.name", pageData.hostname);
+=======
+
+  let userName = "";
+  if (pageData.login && pageData.login.username) {
+    userName = pageData.login.username.value;
+  }
+  if (!userName && email) {
+    userName = getUsernameFromEmail(email);
+  }
+
+  // Hide the "username" field if we don't want to show information
+  // on the incoming server.
+  setDivTextFromForm("server.username", hideIncoming ? null : userName);
+
+  let smtpUserName = "";
+  if (pageData.login && pageData.login.smtpusername) {
+    smtpUserName = pageData.login.smtpusername.value;
+  }
+  if (!smtpUserName && email) {
+    smtpUserName = getUsernameFromEmail(email);
+  }
+  setDivTextFromForm("smtpServer.username", smtpUserName);
+
+  if (pageData.accname && pageData.accname.prettyName) {
+    setDivTextFromForm("account.name", pageData.accname.prettyName.value);
+  } else {
+    setDivTextFromForm("account.name", "");
+  }
+
+  // Show mail servers (incoming & outgoing) details based on current account
+  // data.
+  if (!serverIsNntp(pageData)) {
+    let incomingServerName = "";
+    if (pageData.server && pageData.server.hostname) {
+      incomingServerName = pageData.server.hostname.value;
+    }
+    // Hide the incoming server name field if the user specified
+    // wizardHideIncoming in the ISP defaults file
+    setDivTextFromForm("server.name", hideIncoming ? null : incomingServerName);
+    setDivTextFromForm(
+      "server.port",
+      pageData.server.port ? pageData.server.port.value : null
+    );
+    let incomingServerType = "";
+    if (pageData.server && pageData.server.servertype) {
+      incomingServerType = pageData.server.servertype.value;
+    }
+    setDivTextFromForm("server.type", incomingServerType.toUpperCase());
+
+    let smtpServerName = "";
+    if (pageData.server && pageData.server.smtphostname) {
+      let smtpServer = MailServices.smtp.defaultServer;
+      smtpServerName = pageData.server.smtphostname.value;
+      if (!smtpServerName && smtpServer && smtpServer.hostname) {
+        smtpServerName = smtpServer.hostname;
+      }
+    }
+    setDivTextFromForm("smtpServer.name", smtpServerName);
+  } else {
+    setDivTextFromForm("server.name", null);
+    setDivTextFromForm("server.type", null);
+    setDivTextFromForm("server.port", null);
+    setDivTextFromForm("smtpServer.name", null);
+  }
+
+  if (serverIsNntp(pageData)) {
+    let newsServerName = "";
+    if (pageData.newsserver && pageData.newsserver.hostname) {
+      newsServerName = pageData.newsserver.hostname.value;
+    }
+    if (newsServerName) {
+      // No need to show username for news account
+      setDivTextFromForm("server.username", null);
+    }
+    setDivTextFromForm("newsServer.name", newsServerName);
+    setDivTextFromForm("server.port", null);
+  } else {
+    setDivTextFromForm("newsServer.name", null);
+  }
+
+  var isPop = false;
+  if (pageData.server && pageData.server.servertype) {
+    isPop = pageData.server.servertype.value == "pop3";
+  }
+
+  hideShowDownloadMsgsUI(isPop);
+}
+
+function hideShowDownloadMsgsUI(isPop) {
+  // only show the "download messages now" UI
+  // if this is a pop account, we are online, and this was opened
+  // from the 3 pane
+  var downloadMsgs = document.getElementById("downloadMsgs");
+  if (isPop) {
+    if (!Services.io.offline) {
+      if (
+        window.opener.location.href ==
+        "chrome://messenger/content/messenger.xhtml"
+      ) {
+        downloadMsgs.hidden = false;
+        return;
+      }
+    }
+  }
+
+  // else hide it
+  downloadMsgs.hidden = true;
+>>>>>>> other
 }
 
 function setDivTextFromForm(divid, value) {
   // collapse the row if the div has no value
   let label = document.getElementById(`${divid}.label`);
   let text = document.getElementById(`${divid}.text`);
 
   if (!value) {
diff --git a/mailnews/base/public/nsIMsgAccountManager.idl b/mailnews/base/public/nsIMsgAccountManager.idl
--- a/mailnews/base/public/nsIMsgAccountManager.idl
+++ b/mailnews/base/public/nsIMsgAccountManager.idl
@@ -41,17 +41,17 @@ interface nsIMsgAccountManager : nsISupp
    * Scan the preferences to find a unique server key.
    */
   ACString getUniqueServerKey();
 
   /*
    * creates a new server and assigns it a new, unique "key"
    * the given type will be used to construct a ContractID
    *
-   *  @param type "imap", "pop3", "nntp", "none", "rss", "generic"
+   *  @param type "imap", "pop3", "nntp", "movemail", "none", "rss", "generic"
    * (suffix of contract ID @mozilla.org/messenger/server;1?type= )
    */
   nsIMsgIncomingServer createIncomingServer(in ACString username,
                                             in ACString hostname,
                                             in ACString type);
 
   /**
    * Removes the server from the list of servers
diff --git a/mailnews/base/public/nsIMsgIncomingServer.idl b/mailnews/base/public/nsIMsgIncomingServer.idl
--- a/mailnews/base/public/nsIMsgIncomingServer.idl
+++ b/mailnews/base/public/nsIMsgIncomingServer.idl
@@ -390,17 +390,17 @@ interface nsIMsgIncomingServer : nsISupp
    *
    * supportLevel == 0  --> no offline support (default)
    * supportLevel == 10 --> regular offline feature support
    * supportLevel == 20 --> extended offline feature support
    *
    * Each server can initialize itself to the support level if needed
    * to override the default choice i.e., no offline support.
    *
-   * POP3, None will default to 0.
+   * POP3, None and Movemail will default to 0.
    * IMAP level 10 and NEWS with level 20.
    *
    */
   attribute long offlineSupportLevel;
 
   /* create pretty name for migrated accounts */
   AString generatePrettyNameForMigration();
 
diff --git a/mailnews/base/src/mailstoreConverter.jsm b/mailnews/base/src/mailstoreConverter.jsm
--- a/mailnews/base/src/mailstoreConverter.jsm
+++ b/mailnews/base/src/mailstoreConverter.jsm
@@ -239,17 +239,21 @@ function installNewRoot(server, dir, new
     log.error("Trying to remove converter folder: " + converterFolder.path);
     converterFolder.remove(true);
     throw e;
   }
 
   // If the account is imap then copy the msf file for the original
   // root folder and rename the copy with the name of the new root
   // folder.
-  if (server.type != "pop3" && server.type != "none") {
+  if (
+    server.type != "pop3" &&
+    server.type != "none" &&
+    server.type != "movemail"
+  ) {
     let converterFolderMsf = new FileUtils.File(
       PathUtils.join(parent.path, dir.leafName + ".msf")
     );
     if (converterFolderMsf.exists()) {
       converterFolderMsf.remove(true);
     }
 
     let oldRootFolderMsf = new FileUtils.File(
diff --git a/mailnews/build/nsMailModule.cpp b/mailnews/build/nsMailModule.cpp
--- a/mailnews/build/nsMailModule.cpp
+++ b/mailnews/build/nsMailModule.cpp
@@ -175,16 +175,21 @@
 
 #include "nsMailboxUrl.h"
 #include "nsPop3URL.h"
 #include "nsMailboxService.h"
 #include "nsLocalMailFolder.h"
 #include "nsParseMailbox.h"
 #include "nsPop3Service.h"
 
+#ifdef HAVE_MOVEMAIL
+#  include "nsMovemailService.h"
+#  include "nsMovemailIncomingServer.h"
+#endif /* HAVE_MOVEMAIL */
+
 #include "nsNoneService.h"
 #include "nsPop3IncomingServer.h"
 #include "nsNoIncomingServer.h"
 
 ///////////////////////////////////////////////////////////////////////////////
 // msgdb includes
 ///////////////////////////////////////////////////////////////////////////////
 #include "nsMsgDBCID.h"
@@ -486,29 +491,39 @@ NS_GENERIC_FACTORY_CONSTRUCTOR(nsMsgMail
 NS_GENERIC_FACTORY_CONSTRUCTOR(nsMailboxService)
 NS_GENERIC_FACTORY_CONSTRUCTOR(nsPop3Service)
 NS_GENERIC_FACTORY_CONSTRUCTOR(nsNoneService)
 NS_GENERIC_FACTORY_CONSTRUCTOR(nsMsgLocalMailFolder)
 NS_GENERIC_FACTORY_CONSTRUCTOR(nsParseMailMessageState)
 NS_GENERIC_FACTORY_CONSTRUCTOR_INIT(nsPop3IncomingServer, Init)
 NS_GENERIC_FACTORY_CONSTRUCTOR_INIT(nsRssIncomingServer, Init)
 NS_GENERIC_FACTORY_CONSTRUCTOR(nsRssService)
+#ifdef HAVE_MOVEMAIL
+NS_GENERIC_FACTORY_CONSTRUCTOR_INIT(nsMovemailIncomingServer, Init)
+NS_GENERIC_FACTORY_CONSTRUCTOR(nsMovemailService)
+#endif /* HAVE_MOVEMAIL */
 NS_GENERIC_FACTORY_CONSTRUCTOR_INIT(nsNoIncomingServer, Init)
 NS_GENERIC_FACTORY_CONSTRUCTOR(nsMsgBrkMBoxStore)
 NS_GENERIC_FACTORY_CONSTRUCTOR(nsMsgMaildirStore)
 
 NS_DEFINE_NAMED_CID(NS_MAILBOXURL_CID);
 NS_DEFINE_NAMED_CID(NS_MSGMAILNEWSURL_CID);
 NS_DEFINE_NAMED_CID(NS_MAILBOXSERVICE_CID);
 NS_DEFINE_NAMED_CID(NS_MAILBOXPARSER_CID);
 NS_DEFINE_NAMED_CID(NS_POP3URL_CID);
 NS_DEFINE_NAMED_CID(NS_POP3SERVICE_CID);
 NS_DEFINE_NAMED_CID(NS_NONESERVICE_CID);
+#ifdef HAVE_MOVEMAIL
+NS_DEFINE_NAMED_CID(NS_MOVEMAILSERVICE_CID);
+#endif /* HAVE_MOVEMAIL */
 NS_DEFINE_NAMED_CID(NS_LOCALMAILFOLDERRESOURCE_CID);
 NS_DEFINE_NAMED_CID(NS_POP3INCOMINGSERVER_CID);
+#ifdef HAVE_MOVEMAIL
+NS_DEFINE_NAMED_CID(NS_MOVEMAILINCOMINGSERVER_CID);
+#endif /* HAVE_MOVEMAIL */
 NS_DEFINE_NAMED_CID(NS_NOINCOMINGSERVER_CID);
 NS_DEFINE_NAMED_CID(NS_PARSEMAILMSGSTATE_CID);
 NS_DEFINE_NAMED_CID(NS_RSSSERVICE_CID);
 NS_DEFINE_NAMED_CID(NS_RSSINCOMINGSERVER_CID);
 NS_DEFINE_NAMED_CID(NS_BRKMBOXSTORE_CID);
 NS_DEFINE_NAMED_CID(NS_MAILDIRSTORE_CID);
 
 ////////////////////////////////////////////////////////////////////////////////
@@ -769,19 +784,26 @@ const mozilla::Module::CIDEntry kMailNew
     // Local Entries
     {&kNS_MAILBOXURL_CID, false, NULL, nsMailboxUrlConstructor},
     {&kNS_MSGMAILNEWSURL_CID, false, NULL, nsMsgMailNewsUrlConstructor},
     {&kNS_MAILBOXSERVICE_CID, false, NULL, nsMailboxServiceConstructor},
     {&kNS_MAILBOXPARSER_CID, false, NULL, nsMsgMailboxParserConstructor},
     {&kNS_POP3URL_CID, false, NULL, nsPop3URLConstructor},
     {&kNS_POP3SERVICE_CID, false, NULL, nsPop3ServiceConstructor},
     {&kNS_NONESERVICE_CID, false, NULL, nsNoneServiceConstructor},
+#ifdef HAVE_MOVEMAIL
+    {&kNS_MOVEMAILSERVICE_CID, false, NULL, nsMovemailServiceConstructor},
+#endif /* HAVE_MOVEMAIL */
     {&kNS_LOCALMAILFOLDERRESOURCE_CID, false, NULL,
      nsMsgLocalMailFolderConstructor},
     {&kNS_POP3INCOMINGSERVER_CID, false, NULL, nsPop3IncomingServerConstructor},
+#ifdef HAVE_MOVEMAIL
+    {&kNS_MOVEMAILINCOMINGSERVER_CID, false, NULL,
+     nsMovemailIncomingServerConstructor},
+#endif /* HAVE_MOVEMAIL */
     {&kNS_NOINCOMINGSERVER_CID, false, NULL, nsNoIncomingServerConstructor},
     {&kNS_PARSEMAILMSGSTATE_CID, false, NULL,
      nsParseMailMessageStateConstructor},
     {&kNS_RSSSERVICE_CID, false, NULL, nsRssServiceConstructor},
     {&kNS_RSSINCOMINGSERVER_CID, false, NULL, nsRssIncomingServerConstructor},
     {&kNS_BRKMBOXSTORE_CID, false, NULL, nsMsgBrkMBoxStoreConstructor},
     {&kNS_MAILDIRSTORE_CID, false, NULL, nsMsgMaildirStoreConstructor},
     // msgdb Entries
@@ -954,20 +976,29 @@ const mozilla::Module::ContractIDEntry k
     {NS_MAILBOXSERVICE_CONTRACTID3, &kNS_MAILBOXSERVICE_CID},
     {NS_MAILBOXSERVICE_CONTRACTID4, &kNS_MAILBOXSERVICE_CID},
     {NS_MAILBOXPARSER_CONTRACTID, &kNS_MAILBOXPARSER_CID},
     {NS_POP3URL_CONTRACTID, &kNS_POP3URL_CID},
     {NS_POP3SERVICE_CONTRACTID1, &kNS_POP3SERVICE_CID},
     {NS_POP3SERVICE_CONTRACTID2, &kNS_POP3SERVICE_CID},
     {NS_POP3SERVICE_CONTRACTID3, &kNS_POP3SERVICE_CID},
     {NS_NONESERVICE_CONTRACTID, &kNS_NONESERVICE_CID},
+#ifdef HAVE_MOVEMAIL
+    {NS_MOVEMAILSERVICE_CONTRACTID, &kNS_MOVEMAILSERVICE_CID},
+#endif /* HAVE_MOVEMAIL */
     {NS_POP3PROTOCOLINFO_CONTRACTID, &kNS_POP3SERVICE_CID},
     {NS_NONEPROTOCOLINFO_CONTRACTID, &kNS_NONESERVICE_CID},
+#ifdef HAVE_MOVEMAIL
+    {NS_MOVEMAILPROTOCOLINFO_CONTRACTID, &kNS_MOVEMAILSERVICE_CID},
+#endif /* HAVE_MOVEMAIL */
     {NS_LOCALMAILFOLDERRESOURCE_CONTRACTID, &kNS_LOCALMAILFOLDERRESOURCE_CID},
     {NS_POP3INCOMINGSERVER_CONTRACTID, &kNS_POP3INCOMINGSERVER_CID},
+#ifdef HAVE_MOVEMAIL
+    {NS_MOVEMAILINCOMINGSERVER_CONTRACTID, &kNS_MOVEMAILINCOMINGSERVER_CID},
+#endif /* HAVE_MOVEMAIL */
     {NS_BRKMBOXSTORE_CONTRACTID, &kNS_BRKMBOXSTORE_CID},
     {NS_MAILDIRSTORE_CONTRACTID, &kNS_MAILDIRSTORE_CID},
     {NS_NOINCOMINGSERVER_CONTRACTID, &kNS_NOINCOMINGSERVER_CID},
     {NS_PARSEMAILMSGSTATE_CONTRACTID, &kNS_PARSEMAILMSGSTATE_CID},
     {NS_RSSSERVICE_CONTRACTID, &kNS_RSSSERVICE_CID},
     {NS_RSSPROTOCOLINFO_CONTRACTID, &kNS_RSSSERVICE_CID},
     {NS_RSSINCOMINGSERVER_CONTRACTID, &kNS_RSSINCOMINGSERVER_CID},
     // msgdb Entries
diff --git a/mailnews/local/public/moz.build b/mailnews/local/public/moz.build
--- a/mailnews/local/public/moz.build
+++ b/mailnews/local/public/moz.build
@@ -2,16 +2,18 @@
 # This Source Code Form is subject to the terms of the Mozilla Public
 # License, v. 2.0. If a copy of the MPL was not distributed with this
 # file, You can obtain one at http://mozilla.org/MPL/2.0/.
 
 XPIDL_SOURCES += [
     "nsILocalMailIncomingServer.idl",
     "nsIMailboxService.idl",
     "nsIMailboxUrl.idl",
+    "nsIMovemailIncomingServer.idl",
+    "nsIMovemailService.idl",
     "nsIMsgLocalMailFolder.idl",
     "nsIMsgParseMailMsgState.idl",
     "nsINewsBlogFeedDownloader.idl",
     "nsINoIncomingServer.idl",
     "nsINoneService.idl",
     "nsIPop3IncomingServer.idl",
     "nsIPop3Protocol.idl",
     "nsIPop3Service.idl",
diff --git a/mailnews/local/public/nsIMovemailIncomingServer.idl b/mailnews/local/public/nsIMovemailIncomingServer.idl
new file mode 100644
--- /dev/null
+++ b/mailnews/local/public/nsIMovemailIncomingServer.idl
@@ -0,0 +1,11 @@
+/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsISupports.idl"
+
+[scriptable, uuid(0dbfa510-1dd2-11b2-9f0e-849c5a241ab6)]
+interface nsIMovemailIncomingServer : nsISupports {
+};
+
diff --git a/mailnews/local/public/nsIMovemailService.idl b/mailnews/local/public/nsIMovemailService.idl
new file mode 100644
--- /dev/null
+++ b/mailnews/local/public/nsIMovemailService.idl
@@ -0,0 +1,25 @@
+/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsISupports.idl"
+
+interface nsIMsgWindow;
+interface nsIMsgFolder;
+interface nsIMovemailIncomingServer;
+interface nsIUrlListener;
+interface nsIURI;
+
+[scriptable, uuid(4c7786a4-1dd2-11b2-9fbe-c59d742de59b)]
+interface nsIMovemailService : nsISupports {
+
+    nsIURI GetNewMail(in nsIMsgWindow aMsgWindow,
+                      in nsIUrlListener aUrlListener,
+                      in nsIMsgFolder aMsgFolder,
+                      in nsIMovemailIncomingServer movemailServer);
+
+    nsIURI CheckForNewMail(in nsIUrlListener aUrlListener,
+                           in nsIMsgFolder inbox,
+                           in nsIMovemailIncomingServer movemailServer);
+};
diff --git a/mailnews/local/public/nsMsgLocalCID.h b/mailnews/local/public/nsMsgLocalCID.h
--- a/mailnews/local/public/nsMsgLocalCID.h
+++ b/mailnews/local/public/nsMsgLocalCID.h
@@ -30,16 +30,32 @@
 
 #define NS_POP3INCOMINGSERVER_CID                  \
   { /* D2876E51-E62C-11d2-B7FC-00805F05FFA5 */     \
     0xd2876e51, 0xe62c, 0x11d2, {                  \
       0xb7, 0xfc, 0x0, 0x80, 0x5f, 0x5, 0xff, 0xa5 \
     }                                              \
   }
 
+#ifdef HAVE_MOVEMAIL
+//
+// nsMovemailIncomingServer
+//
+#  define NS_MOVEMAILINCOMINGSERVER_CONTRACTID \
+    NS_MSGINCOMINGSERVER_CONTRACTID_PREFIX "movemail"
+
+#  define NS_MOVEMAILINCOMINGSERVER_CID                \
+    { /* efbb77e4-1dd2-11b2-bbcf-961563396fec */       \
+      0xefbb77e4, 0x1dd2, 0x11b2, {                    \
+        0xbb, 0xcf, 0x96, 0x15, 0x63, 0x39, 0x6f, 0xec \
+      }                                                \
+    }
+
+#endif /* HAVE_MOVEMAIL */
+
 //
 // nsNoIncomingServer
 //
 #define NS_NOINCOMINGSERVER_CONTRACTID \
   NS_MSGINCOMINGSERVER_CONTRACTID_PREFIX "none"
 
 #define NS_NOINCOMINGSERVER_CID                      \
   { /* {ca5ffe7e-5f47-11d3-9a51-004005263078} */     \
@@ -143,16 +159,35 @@
 
 #define NS_NONESERVICE_CID                           \
   { /* 75b63b46-1dd2-11b2-9873-bb375e1550fa */       \
     0x75b63b46, 0x1dd2, 0x11b2, {                    \
       0x98, 0x73, 0xbb, 0x37, 0x5e, 0x15, 0x50, 0xfa \
     }                                                \
   }
 
+#ifdef HAVE_MOVEMAIL
+//
+// nsMovemailService
+//
+
+#  define NS_MOVEMAILSERVICE_CONTRACTID \
+    "@mozilla.org/messenger/movemailservice;1"
+
+#  define NS_MOVEMAILPROTOCOLINFO_CONTRACTID \
+    NS_MSGPROTOCOLINFO_CONTRACTID_PREFIX "movemail"
+
+#  define NS_MOVEMAILSERVICE_CID                       \
+    { /* 0e4db62e-1dd2-11b2-a5e4-f128fe4f1b69 */       \
+      0x0e4db62e, 0x1dd2, 0x11b2, {                    \
+        0xa5, 0xe4, 0xf1, 0x28, 0xfe, 0x4f, 0x1b, 0x69 \
+      }                                                \
+    }
+#endif /* HAVE_MOVEMAIL */
+
 //
 // nsParseMailMsgState
 //
 #define NS_PARSEMAILMSGSTATE_CONTRACTID \
   "@mozilla.org/messenger/messagestateparser;1"
 
 #define NS_PARSEMAILMSGSTATE_CID                   \
   { /* 2B79AC51-1459-11d3-8097-006008128C4E */     \
diff --git a/mailnews/local/src/moz.build b/mailnews/local/src/moz.build
--- a/mailnews/local/src/moz.build
+++ b/mailnews/local/src/moz.build
@@ -21,16 +21,22 @@ SOURCES += [
     "nsPop3Protocol.cpp",
     "nsPop3Service.cpp",
     "nsPop3Sink.cpp",
     "nsPop3URL.cpp",
     "nsRssIncomingServer.cpp",
     "nsRssService.cpp",
 ]
 
+if CONFIG["MOZ_MOVEMAIL"]:
+    SOURCES += [
+        "nsMovemailIncomingServer.cpp",
+        "nsMovemailService.cpp",
+    ]
+
 FINAL_LIBRARY = "mail"
 
 EXTRA_JS_MODULES += [
     "Pop3Channel.jsm",
     "Pop3Client.jsm",
     "Pop3IncomingServer.jsm",
     "Pop3ModuleLoader.jsm",
     "Pop3ProtocolHandler.jsm",
diff --git a/mailnews/local/src/nsLocalMailFolder.cpp b/mailnews/local/src/nsLocalMailFolder.cpp
--- a/mailnews/local/src/nsLocalMailFolder.cpp
+++ b/mailnews/local/src/nsLocalMailFolder.cpp
@@ -2817,16 +2817,24 @@ nsMsgLocalMailFolder::GetIncomingServerT
       else {
         // next try "rss"
         rv = NS_MutateURI(url).SetScheme("rss"_ns).Finalize(url);
         NS_ENSURE_SUCCESS(rv, rv);
         rv = accountManager->FindServerByURI(url, getter_AddRefs(server));
         if (NS_SUCCEEDED(rv) && server)
           mType.AssignLiteral("rss");
         else {
+#ifdef HAVE_MOVEMAIL
+          // next try "movemail"
+          rv = NS_MutateURI(url).SetScheme("movemail"_ns).Finalize(url);
+          NS_ENSURE_SUCCESS(rv, rv);
+          rv = accountManager->FindServerByURI(url, false,
+                                               getter_AddRefs(server));
+          if (NS_SUCCEEDED(rv) && server) mType.AssignLiteral("movemail");
+#endif /* HAVE_MOVEMAIL */
         }
       }
     }
   }
   aServerType = mType;
   return NS_OK;
 }
 
diff --git a/mailnews/local/src/nsLocalUtils.cpp b/mailnews/local/src/nsLocalUtils.cpp
--- a/mailnews/local/src/nsLocalUtils.cpp
+++ b/mailnews/local/src/nsLocalUtils.cpp
@@ -53,16 +53,28 @@ static nsresult nsGetMailboxServer(const
   nsCOMPtr<nsIMsgIncomingServer> rss_server;
   rv = NS_MutateURI(url).SetScheme("rss"_ns).Finalize(url);
   NS_ENSURE_SUCCESS(rv, rv);
   rv = accountManager->FindServerByURI(url, getter_AddRefs(rss_server));
   if (NS_SUCCEEDED(rv)) {
     rss_server.forget(aResult);
     return rv;
   }
+#ifdef HAVE_MOVEMAIL
+  // find all movemail "servers" matching the given hostname
+  nsCOMPtr<nsIMsgIncomingServer> movemail_server;
+  rv = NS_MutateURI(url).SetScheme("movemail"_ns).Finalize(url);
+  NS_ENSURE_SUCCESS(rv, rv);
+  rv = accountManager->FindServerByURI(url, false,
+                                       getter_AddRefs(movemail_server));
+  if (NS_SUCCEEDED(rv)) {
+    movemail_server.forget(aResult);
+    return rv;
+  }
+#endif /* HAVE_MOVEMAIL */
 
   // if that fails, look for the pop hosts matching the given hostname
   nsCOMPtr<nsIMsgIncomingServer> server;
   if (NS_FAILED(rv)) {
     rv = NS_MutateURI(url).SetScheme("pop3"_ns).Finalize(url);
     NS_ENSURE_SUCCESS(rv, rv);
     rv = accountManager->FindServerByURI(url, getter_AddRefs(server));
 
@@ -74,17 +86,18 @@ static nsresult nsGetMailboxServer(const
       rv = accountManager->FindServerByURI(url, getter_AddRefs(server));
     }
   }
   if (NS_SUCCEEDED(rv)) {
     server.forget(aResult);
     return rv;
   }
 
-  // If you fail after looking at all "pop3", "none" servers, you fail.
+  // if you fail after looking at all "pop3", "movemail" and "none" servers, you
+  // fail.
   return rv;
 }
 
 static nsresult nsLocalURI2Server(const char* uriStr,
                                   nsIMsgIncomingServer** aResult) {
   nsresult rv;
   nsCOMPtr<nsIMsgIncomingServer> server;
   rv = nsGetMailboxServer(uriStr, getter_AddRefs(server));
diff --git a/mailnews/local/src/nsMovemailIncomingServer.cpp b/mailnews/local/src/nsMovemailIncomingServer.cpp
new file mode 100644
--- /dev/null
+++ b/mailnews/local/src/nsMovemailIncomingServer.cpp
@@ -0,0 +1,149 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include "nsMsgLocalCID.h"
+#include "nsMsgFolderFlags.h"
+#include "nsIMsgLocalMailFolder.h"
+#include "nsIMovemailService.h"
+#include "msgCore.h"  // pre-compiled headers
+#include "nsMovemailIncomingServer.h"
+#include "nsServiceManagerUtils.h"
+
+static NS_DEFINE_CID(kCMovemailServiceCID, NS_MOVEMAILSERVICE_CID);
+
+NS_IMPL_ISUPPORTS_INHERITED(nsMovemailIncomingServer, nsMsgIncomingServer,
+                            nsIMovemailIncomingServer,
+                            nsILocalMailIncomingServer)
+
+nsMovemailIncomingServer::nsMovemailIncomingServer() {
+  m_canHaveFilters = true;
+}
+
+nsMovemailIncomingServer::~nsMovemailIncomingServer() {}
+
+NS_IMETHODIMP
+nsMovemailIncomingServer::PerformBiff(nsIMsgWindow* aMsgWindow) {
+  nsresult rv;
+  nsCOMPtr<nsIMovemailService> movemailService(
+      do_GetService(kCMovemailServiceCID, &rv));
+  if (NS_FAILED(rv)) return rv;
+  nsCOMPtr<nsIMsgFolder> inbox;
+  nsCOMPtr<nsIMsgFolder> rootMsgFolder;
+  nsCOMPtr<nsIUrlListener> urlListener;
+  rv = GetRootMsgFolder(getter_AddRefs(rootMsgFolder));
+  if (NS_SUCCEEDED(rv) && rootMsgFolder) {
+    rootMsgFolder->GetFolderWithFlags(nsMsgFolderFlags::Inbox,
+                                      getter_AddRefs(inbox));
+    if (!inbox) return NS_ERROR_FAILURE;
+  }
+
+  SetPerformingBiff(true);
+  urlListener = do_QueryInterface(inbox);
+
+  bool downloadOnBiff = false;
+  rv = GetDownloadOnBiff(&downloadOnBiff);
+  if (downloadOnBiff) {
+    nsCOMPtr<nsIMsgLocalMailFolder> localInbox = do_QueryInterface(inbox, &rv);
+    if (localInbox && NS_SUCCEEDED(rv)) {
+      bool valid = false;
+      nsCOMPtr<nsIMsgDatabase> db;
+      rv = inbox->GetMsgDatabase(getter_AddRefs(db));
+      if (NS_SUCCEEDED(rv) && db) {
+        rv = db->GetSummaryValid(&valid);
+      }
+      if (NS_SUCCEEDED(rv) && valid) {
+        rv = movemailService->GetNewMail(aMsgWindow, urlListener, inbox, this,
+                                         nullptr);
+      } else {
+        bool isLocked;
+        inbox->GetLocked(&isLocked);
+        if (!isLocked) {
+          rv = localInbox->ParseFolder(aMsgWindow, urlListener);
+        }
+        if (NS_SUCCEEDED(rv)) {
+          rv = localInbox->SetCheckForNewMessagesAfterParsing(true);
+        }
+      }
+    }
+  } else {
+    movemailService->CheckForNewMail(urlListener, inbox, this, nullptr);
+  }
+
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+nsMovemailIncomingServer::SetFlagsOnDefaultMailboxes() {
+  nsCOMPtr<nsIMsgFolder> rootFolder;
+  nsresult rv = GetRootFolder(getter_AddRefs(rootFolder));
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  nsCOMPtr<nsIMsgLocalMailFolder> localFolder =
+      do_QueryInterface(rootFolder, &rv);
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  return localFolder->SetFlagsOnDefaultMailboxes(nsMsgFolderFlags::SpecialUse);
+}
+
+NS_IMETHODIMP nsMovemailIncomingServer::CreateDefaultMailboxes() {
+  nsresult rv = CreateLocalFolder(u"Inbox"_ns);
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  return CreateLocalFolder(u"Trash"_ns);
+}
+
+NS_IMETHODIMP
+nsMovemailIncomingServer::GetNewMail(nsIMsgWindow* aMsgWindow,
+                                     nsIUrlListener* aUrlListener,
+                                     nsIMsgFolder* aMsgFolder,
+                                     nsIURI** aResult) {
+  nsresult rv;
+
+  nsCOMPtr<nsIMovemailService> movemailService =
+      do_GetService(kCMovemailServiceCID, &rv);
+
+  if (NS_FAILED(rv)) return rv;
+
+  rv = movemailService->GetNewMail(aMsgWindow, aUrlListener, aMsgFolder, this,
+                                   aResult);
+
+  return rv;
+}
+
+NS_IMETHODIMP
+nsMovemailIncomingServer::GetDownloadMessagesAtStartup(
+    bool* getMessagesAtStartup) {
+  NS_ENSURE_ARG_POINTER(getMessagesAtStartup);
+  *getMessagesAtStartup = true;
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+nsMovemailIncomingServer::GetCanBeDefaultServer(bool* aCanBeDefaultServer) {
+  NS_ENSURE_ARG_POINTER(aCanBeDefaultServer);
+  *aCanBeDefaultServer = true;
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+nsMovemailIncomingServer::GetCanSearchMessages(bool* canSearchMessages) {
+  NS_ENSURE_ARG_POINTER(canSearchMessages);
+  *canSearchMessages = true;
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+nsMovemailIncomingServer::GetServerRequiresPasswordForBiff(
+    bool* aServerRequiresPasswordForBiff) {
+  NS_ENSURE_ARG_POINTER(aServerRequiresPasswordForBiff);
+  *aServerRequiresPasswordForBiff = false;
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+nsMovemailIncomingServer::GetAccountManagerChrome(nsAString& aResult) {
+  aResult.AssignLiteral("am-main.xhtml");
+  return NS_OK;
+}
diff --git a/mailnews/local/src/nsMovemailIncomingServer.h b/mailnews/local/src/nsMovemailIncomingServer.h
new file mode 100644
--- /dev/null
+++ b/mailnews/local/src/nsMovemailIncomingServer.h
@@ -0,0 +1,40 @@
+/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#ifndef __nsMovemailIncomingServer_h
+#define __nsMovemailIncomingServer_h
+
+#include "mozilla/Attributes.h"
+#include "msgCore.h"
+#include "nsIMovemailIncomingServer.h"
+#include "nsILocalMailIncomingServer.h"
+#include "nsMailboxServer.h"
+
+/* get some implementation from nsMsgIncomingServer */
+class nsMovemailIncomingServer : public nsMailboxServer,
+                                 public nsIMovemailIncomingServer,
+                                 public nsILocalMailIncomingServer
+
+{
+ public:
+  NS_DECL_ISUPPORTS_INHERITED
+  NS_DECL_NSIMOVEMAILINCOMINGSERVER
+  NS_DECL_NSILOCALMAILINCOMINGSERVER
+
+  nsMovemailIncomingServer();
+
+  NS_IMETHOD PerformBiff(nsIMsgWindow* aMsgWindow) override;
+  NS_IMETHOD GetDownloadMessagesAtStartup(bool* getMessages) override;
+  NS_IMETHOD GetCanBeDefaultServer(bool* canBeDefaultServer) override;
+  NS_IMETHOD GetCanSearchMessages(bool* canSearchMessages) override;
+  NS_IMETHOD GetServerRequiresPasswordForBiff(
+      bool* aServerRequiresPasswordForBiff) override;
+  NS_IMETHOD GetAccountManagerChrome(nsAString& aResult) override;
+
+ private:
+  virtual ~nsMovemailIncomingServer();
+};
+
+#endif
diff --git a/mailnews/local/src/nsMovemailService.cpp b/mailnews/local/src/nsMovemailService.cpp
new file mode 100644
--- /dev/null
+++ b/mailnews/local/src/nsMovemailService.cpp
@@ -0,0 +1,624 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#include <unistd.h>  // for link(), used in spool-file locking
+
+#include "prenv.h"
+#include "private/pprio.h"  // for our kernel-based locking
+#include "nspr.h"
+
+#include "msgCore.h"  // precompiled header...
+
+#include "nsMovemailService.h"
+#include "nsIMovemailService.h"
+#include "nsIMsgIncomingServer.h"
+#include "nsIMovemailIncomingServer.h"
+#include "nsIMsgProtocolInfo.h"
+#include "nsParseMailbox.h"
+#include "nsIMsgFolder.h"
+#include "nsIPrompt.h"
+
+#include "nsIFile.h"
+#include "nsMailDirServiceDefs.h"
+#include "nsMsgUtils.h"
+
+#include "nsCOMPtr.h"
+#include "nsMsgFolderFlags.h"
+
+#include "nsILineInputStream.h"
+#include "nsNetUtil.h"
+#include "nsIStringBundle.h"
+#include "nsIMsgPluggableStore.h"
+#include "mozilla/Services.h"
+#include "nsIInputStream.h"
+#include "nsIOutputStream.h"
+
+#include "mozilla/Logging.h"
+// export MOZ_LOG_MODULES=Movemail:5
+static mozilla::LazyLogModule gMovemailLog("Movemail");
+#define LOG(args) MOZ_LOG(gMovemailLog, mozilla::LogLevel::Debug, args)
+
+#define PREF_MAIL_ROOT_MOVEMAIL_REL "mail.root.movemail-rel"
+// old - for backward compatibility only
+#define PREF_MAIL_ROOT_MOVEMAIL "mail.root.movemail"
+
+#define LOCK_SUFFIX ".lock"
+#define MOZLOCK_SUFFIX ".mozlock"
+
+const char* gDefaultSpoolPaths[] = {"/var/spool/mail/", "/usr/spool/mail/",
+                                    "/var/mail/", "/usr/mail/"};
+#define NUM_DEFAULT_SPOOL_PATHS \
+  (sizeof(gDefaultSpoolPaths) / sizeof(gDefaultSpoolPaths[0]))
+
+namespace {
+class MOZ_STACK_CLASS SpoolLock {
+ public:
+  /**
+   * Try to create a lock for the spool file while we operate on it.
+   *
+   * @param aSpoolName  The path to the spool file.
+   * @param aSeconds    The number of seconds to retry the locking.
+   * @param aMovemail   The movemail service requesting the lock.
+   * @param aServer     The nsIMsgIncomingServer requesting the lock.
+   */
+  SpoolLock(nsACString* aSpoolPath, int aSeconds, nsMovemailService& aMovemail,
+            nsIMsgIncomingServer* aServer);
+
+  ~SpoolLock();
+
+  bool isLocked();
+
+ private:
+  bool mLocked;
+  nsCString mSpoolName;
+  bool mUsingLockFile;
+  RefPtr<nsMovemailService> mOwningService;
+  nsCOMPtr<nsIMsgIncomingServer> mServer;
+
+  bool ObtainSpoolLock(unsigned int aSeconds);
+  bool YieldSpoolLock();
+};
+
+}  // namespace
+
+nsMovemailService::nsMovemailService() {
+  LOG(("nsMovemailService created: 0x%p\n", this));
+}
+
+nsMovemailService::~nsMovemailService() {}
+
+NS_IMPL_ISUPPORTS(nsMovemailService, nsIMovemailService, nsIMsgProtocolInfo)
+
+NS_IMETHODIMP
+nsMovemailService::CheckForNewMail(nsIUrlListener* aUrlListener,
+                                   nsIMsgFolder* inbox,
+                                   nsIMovemailIncomingServer* movemailServer,
+                                   nsIURI** aURL) {
+  nsresult rv = NS_OK;
+  LOG(("nsMovemailService::CheckForNewMail\n"));
+  return rv;
+}
+
+void nsMovemailService::Error(const char* errorCode, const char16_t* param) {
+  if (!mMsgWindow) return;
+
+  nsCOMPtr<nsIPrompt> dialog;
+  nsresult rv = mMsgWindow->GetPromptDialog(getter_AddRefs(dialog));
+  if (NS_FAILED(rv)) return;
+
+  nsCOMPtr<nsIStringBundleService> bundleService =
+      mozilla::services::GetStringBundleService();
+  if (!bundleService) return;
+  nsCOMPtr<nsIStringBundle> bundle;
+  rv = bundleService->CreateBundle(
+      "chrome://messenger/locale/localMsgs.properties", getter_AddRefs(bundle));
+  if (NS_FAILED(rv)) return;
+
+  nsString errStr;
+  // Format the error string if necessary
+  if (param) {
+    AutoTArray<nsString, 1> params = {nsDependentString(param)};
+    bundle->FormatStringFromName(errorCode, params, errStr);
+  } else {
+    bundle->GetStringFromName(errorCode, errStr);
+  }
+
+  if (!errStr.IsEmpty()) {
+    dialog->Alert(nullptr, errStr.get());
+  }
+}
+
+SpoolLock::SpoolLock(nsACString* aSpoolName, int aSeconds,
+                     nsMovemailService& aMovemail,
+                     nsIMsgIncomingServer* aServer)
+    : mLocked(false),
+      mSpoolName(*aSpoolName),
+      mOwningService(&aMovemail),
+      mServer(aServer) {
+  if (!ObtainSpoolLock(aSeconds)) {
+    NS_ConvertUTF8toUTF16 lockFile(mSpoolName);
+    lockFile.AppendLiteral(LOCK_SUFFIX);
+    mOwningService->Error("movemailCantCreateLock", lockFile.get());
+    return;
+  }
+  mServer->SetServerBusy(true);
+  mLocked = true;
+}
+
+SpoolLock::~SpoolLock() {
+  if (mLocked && !YieldSpoolLock()) {
+    NS_ConvertUTF8toUTF16 lockFile(mSpoolName);
+    lockFile.AppendLiteral(LOCK_SUFFIX);
+    mOwningService->Error("movemailCantDeleteLock", lockFile.get());
+  }
+  mServer->SetServerBusy(false);
+}
+
+bool SpoolLock::isLocked() { return mLocked; }
+
+bool SpoolLock::ObtainSpoolLock(
+    unsigned int aSeconds /* number of seconds to retry */) {
+  /*
+   * Locking procedures:
+   * If the directory is not writable, we want to use the appropriate system
+   * utilities to lock the file.
+   * If the directory is writable, we want to go through the create-and-link
+   * locking procedures to make it atomic for certain networked file systems.
+   * This involves creating a .mozlock file and attempting to hard-link it to
+   * the customary .lock file.
+   */
+  nsCOMPtr<nsIFile> spoolFile;
+  nsresult rv =
+      NS_NewNativeLocalFile(mSpoolName, true, getter_AddRefs(spoolFile));
+  NS_ENSURE_SUCCESS(rv, false);
+
+  nsCOMPtr<nsIFile> directory;
+  rv = spoolFile->GetParent(getter_AddRefs(directory));
+  NS_ENSURE_SUCCESS(rv, false);
+
+  rv = directory->IsWritable(&mUsingLockFile);
+  NS_ENSURE_SUCCESS(rv, false);
+
+  if (!mUsingLockFile) {
+    LOG(("Attempting to use kernel file lock"));
+    PRFileDesc* fd;
+    rv = spoolFile->OpenNSPRFileDesc(PR_RDWR, 0, &fd);
+    NS_ENSURE_SUCCESS(rv, false);
+    PRStatus lock_result;
+    unsigned int retry_count = 0;
+
+    do {
+      lock_result = PR_TLockFile(fd);
+
+      retry_count++;
+      LOG(("Attempt %d of %d to lock file", retry_count, aSeconds));
+      if (aSeconds > 0 && lock_result == PR_FAILURE) {
+        // pause 1sec, waiting for .lock to go away
+        PR_Sleep(PR_SecondsToInterval(1));
+      }
+    } while (lock_result == PR_FAILURE && retry_count < aSeconds);
+    LOG(("Lock result: %d", lock_result));
+    PR_Close(fd);
+    return lock_result == PR_SUCCESS;
+  }
+  // How to lock using files:
+  // step 1: create SPOOLNAME.mozlock
+  //        1a: can remove it if it already exists (probably crash-droppings)
+  // step 2: hard-link SPOOLNAME.mozlock to SPOOLNAME.lock for NFS atomicity
+  //        2a: if SPOOLNAME.lock is >60sec old then nuke it from orbit
+  //        2b: repeat step 2 until retry-count expired or hard-link succeeds
+  // step 3: remove SPOOLNAME.mozlock
+  // step 4: If step 2 hard-link failed, fail hard; we do not hold the lock
+  // DONE.
+  //
+  // (step 2a not yet implemented)
+
+  nsAutoCString mozlockstr(mSpoolName);
+  mozlockstr.AppendLiteral(MOZLOCK_SUFFIX);
+  nsAutoCString lockstr(mSpoolName);
+  lockstr.AppendLiteral(LOCK_SUFFIX);
+
+  // Create nsIFile for the spool.mozlock file
+  nsCOMPtr<nsIFile> tmplocfile;
+  rv = NS_NewNativeLocalFile(mozlockstr, true, getter_AddRefs(tmplocfile));
+  NS_ENSURE_SUCCESS(rv, false);
+
+  // THOUGHT: hmm, perhaps use MakeUnique to generate us a unique mozlock?
+  // ... perhaps not, MakeUnique implementation looks racey -- use mktemp()?
+
+  // step 1: create SPOOLNAME.mozlock
+  rv = tmplocfile->Create(nsIFile::NORMAL_FILE_TYPE, 0666);
+  if (NS_FAILED(rv) && rv != NS_ERROR_FILE_ALREADY_EXISTS) {
+    // can't create our .mozlock file... game over already
+    LOG(("Failed to create file %s\n", mozlockstr.get()));
+    return false;
+  }
+
+  // step 2: hard-link .mozlock file to .lock file (this wackiness
+  //         is necessary for non-racey locking on NFS-mounted spool dirs)
+  // n.b. XPCOM utilities don't support hard-linking yet, so we
+  // skip out to <unistd.h> and the POSIX interface for link()
+  int link_result = 0;
+  unsigned int retry_count = 0;
+
+  do {
+    link_result = link(mozlockstr.get(), lockstr.get());
+
+    retry_count++;
+    LOG(("Attempt %d of %d to create lock file", retry_count, aSeconds));
+
+    if (aSeconds > 0 && link_result == -1) {
+      // pause 1sec, waiting for .lock to go away
+      PR_Sleep(PR_SecondsToInterval(1));
+    }
+  } while (link_result == -1 && retry_count < aSeconds);
+  LOG(("Link result: %d", link_result));
+
+  // step 3: remove .mozlock file, in any case
+  rv = tmplocfile->Remove(false /* non-recursive */);
+  if (NS_FAILED(rv)) {
+    // Could not delete our .mozlock file... very unusual, but
+    // not fatal.
+    LOG(("Unable to delete %s", mozlockstr.get()));
+  }
+
+  // step 4: now we know whether we succeeded or failed
+  return link_result == 0;
+}
+
+/**
+ * Remove our mail-spool-file lock (n.b. we should only try this if
+ * we're the ones who made the lock in the first place! I.e. if mLocked is
+ * true.)
+ */
+bool SpoolLock::YieldSpoolLock() {
+  LOG(("YieldSpoolLock(%s)", mSpoolName.get()));
+
+  if (!mUsingLockFile) {
+    nsCOMPtr<nsIFile> spoolFile;
+    nsresult rv =
+        NS_NewNativeLocalFile(mSpoolName, true, getter_AddRefs(spoolFile));
+    NS_ENSURE_SUCCESS(rv, false);
+
+    PRFileDesc* fd;
+    rv = spoolFile->OpenNSPRFileDesc(PR_RDWR, 0, &fd);
+    NS_ENSURE_SUCCESS(rv, false);
+
+    bool unlockSucceeded = PR_UnlockFile(fd) == PR_SUCCESS;
+    PR_Close(fd);
+    if (unlockSucceeded) LOG(("YieldSpoolLock was successful."));
+    return unlockSucceeded;
+  }
+
+  nsAutoCString lockstr(mSpoolName);
+  lockstr.AppendLiteral(LOCK_SUFFIX);
+
+  nsresult rv;
+
+  // Create nsIFile for the spool.lock file
+  nsCOMPtr<nsIFile> locklocfile;
+  rv = NS_NewNativeLocalFile(lockstr, true, getter_AddRefs(locklocfile));
+  NS_ENSURE_SUCCESS(rv, false);
+
+  // Check if the lock file exists
+  bool exists;
+  rv = locklocfile->Exists(&exists);
+  NS_ENSURE_SUCCESS(rv, false);
+
+  // Delete the file if it exists
+  if (exists) {
+    rv = locklocfile->Remove(false /* non-recursive */);
+    NS_ENSURE_SUCCESS(rv, false);
+  }
+
+  LOG(("YieldSpoolLock was successful."));
+
+  // Success.
+  return true;
+}
+
+static nsresult LocateSpoolFile(nsACString& spoolPath) {
+  bool isFile;
+  nsresult rv;
+
+  nsCOMPtr<nsIFile> spoolFile;
+  rv = NS_NewNativeLocalFile(EmptyCString(), true, getter_AddRefs(spoolFile));
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  char* mailEnv = PR_GetEnv("MAIL");
+  char* userEnv = PR_GetEnv("USER");
+  if (!userEnv) userEnv = PR_GetEnv("USERNAME");
+
+  if (mailEnv) {
+    rv = spoolFile->InitWithNativePath(nsDependentCString(mailEnv));
+    NS_ENSURE_SUCCESS(rv, rv);
+    rv = spoolFile->IsFile(&isFile);
+    if (NS_SUCCEEDED(rv) && isFile) spoolPath = mailEnv;
+  } else if (userEnv) {
+    // Try to build the mailbox path from the username and a number
+    // of guessed spool directory paths.
+    nsAutoCString tmpPath;
+    uint32_t i;
+    for (i = 0; i < NUM_DEFAULT_SPOOL_PATHS; i++) {
+      tmpPath = gDefaultSpoolPaths[i];
+      tmpPath += userEnv;
+      rv = spoolFile->InitWithNativePath(tmpPath);
+      NS_ENSURE_SUCCESS(rv, rv);
+      rv = spoolFile->IsFile(&isFile);
+      if (NS_SUCCEEDED(rv) && isFile) {
+        spoolPath = tmpPath;
+        break;
+      }
+    }
+  }
+
+  return rv;
+}
+
+nsresult nsMovemailService::GetNewMail(
+    nsIMsgWindow* aMsgWindow, nsIUrlListener* /* aUrlListener */,
+    nsIMsgFolder* /* aMsgFolder */, nsIMovemailIncomingServer* aMovemailServer,
+    nsIURI** /* aURL */) {
+  LOG(("nsMovemailService::GetNewMail"));
+
+  NS_ENSURE_ARG_POINTER(aMovemailServer);
+  // It is OK if aMsgWindow is null.
+  mMsgWindow = aMsgWindow;
+
+  nsresult rv;
+
+  nsCOMPtr<nsIMsgIncomingServer> in_server =
+      do_QueryInterface(aMovemailServer, &rv);
+  NS_ENSURE_TRUE(NS_SUCCEEDED(rv) && in_server,
+                 NS_MSG_INVALID_OR_MISSING_SERVER);
+
+  // Attempt to locate the mail spool file
+  nsAutoCString spoolPath;
+  rv = in_server->GetCharValue("spoolDir", spoolPath);
+  if (NS_FAILED(rv) || spoolPath.IsEmpty()) rv = LocateSpoolFile(spoolPath);
+  if (NS_FAILED(rv) || spoolPath.IsEmpty()) {
+    Error("movemailSpoolFileNotFound");
+    return NS_ERROR_FAILURE;
+  }
+
+  // Create an input stream for the spool file
+  nsCOMPtr<nsIFile> spoolFile;
+  rv = NS_NewNativeLocalFile(spoolPath, true, getter_AddRefs(spoolFile));
+  NS_ENSURE_SUCCESS(rv, rv);
+  nsCOMPtr<nsIInputStream> spoolInputStream;
+  rv = NS_NewLocalFileInputStream(getter_AddRefs(spoolInputStream), spoolFile);
+  if (NS_FAILED(rv)) {
+    Error("movemailCantOpenSpoolFile", NS_ConvertUTF8toUTF16(spoolPath).get());
+    return rv;
+  }
+
+  // Get a line input interface for the spool file
+  nsCOMPtr<nsILineInputStream> lineInputStream =
+      do_QueryInterface(spoolInputStream, &rv);
+  NS_ENSURE_TRUE(NS_SUCCEEDED(rv) && lineInputStream, rv);
+
+  nsCOMPtr<nsIMsgFolder> serverFolder;
+  nsCOMPtr<nsIMsgFolder> inbox;
+
+  rv = in_server->GetRootFolder(getter_AddRefs(serverFolder));
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  rv = serverFolder->GetFolderWithFlags(nsMsgFolderFlags::Inbox,
+                                        getter_AddRefs(inbox));
+  NS_ENSURE_TRUE(NS_SUCCEEDED(rv) && inbox, rv);
+
+  nsCOMPtr<nsIMsgPluggableStore> msgStore;
+  rv = in_server->GetMsgStore(getter_AddRefs(msgStore));
+  NS_ENSURE_SUCCESS(rv, rv);
+
+  // create a new mail parser
+  RefPtr<nsParseNewMailState> newMailParser = new nsParseNewMailState;
+
+  // Try and obtain the lock for the spool file.
+  SpoolLock lock(&spoolPath, 5, *this, in_server);
+  if (!lock.isLocked()) return NS_ERROR_FAILURE;
+
+  nsCOMPtr<nsIMsgDBHdr> newHdr;
+  nsCOMPtr<nsIOutputStream> outputStream;
+
+  // MIDDLE of the FUN : consume the mailbox data.
+  bool isMore = true;
+  nsAutoCString buffer;
+  uint32_t bytesWritten = 0;
+  while (isMore && NS_SUCCEEDED(lineInputStream->ReadLine(buffer, &isMore))) {
+    // If first string is empty and we're now at EOF then abort parsing.
+    if (buffer.IsEmpty() && !isMore && !bytesWritten) {
+      LOG(("Empty spool file"));
+      break;
+    }
+
+    buffer.AppendLiteral(MSG_LINEBREAK);
+
+    if (isMore && StringBeginsWith(buffer, "From "_ns)) {
+      // Finish previous header and message, if any.
+      if (newHdr) {
+        outputStream->Flush();
+        newMailParser->PublishMsgHeader(nullptr);
+        rv = msgStore->FinishNewMessage(outputStream, newHdr);
+        NS_ENSURE_SUCCESS(rv, rv);
+        newMailParser->Clear();
+      }
+      bool reusable;
+      rv = msgStore->GetNewMsgOutputStream(inbox, getter_AddRefs(newHdr),
+                                           &reusable,
+                                           getter_AddRefs(outputStream));
+      NS_ENSURE_SUCCESS(rv, rv);
+
+      rv = newMailParser->Init(serverFolder, inbox, nullptr, newHdr,
+                               outputStream);
+      NS_ENSURE_SUCCESS(rv, rv);
+    }
+    if (!outputStream) {
+      // If we do not have outputStream here, something bad happened.
+      // We probably didn't find the proper message start delimiter "From "
+      // and are now reading in the middle of a message. Bail out.
+      Error("movemailCantParseSpool", NS_ConvertUTF8toUTF16(spoolPath).get());
+      return NS_ERROR_UNEXPECTED;
+    }
+
+    newMailParser->HandleLine(buffer.BeginWriting(), buffer.Length());
+    rv = outputStream->Write(buffer.get(), buffer.Length(), &bytesWritten);
+    NS_ENSURE_TRUE(NS_SUCCEEDED(rv) && (bytesWritten == buffer.Length()),
+                   NS_ERROR_FAILURE);
+
+    // "From " lines delimit messages, start a new one here.
+    if (isMore && StringBeginsWith(buffer, "From "_ns)) {
+      buffer.AssignLiteral("X-Mozilla-Status: 8000" MSG_LINEBREAK);
+      newMailParser->HandleLine(buffer.BeginWriting(), buffer.Length());
+      rv = outputStream->Write(buffer.get(), buffer.Length(), &bytesWritten);
+      NS_ENSURE_TRUE(NS_SUCCEEDED(rv) && (bytesWritten == buffer.Length()),
+                     NS_ERROR_FAILURE);
+
+      buffer.AssignLiteral("X-Mozilla-Status2: 00000000" MSG_LINEBREAK);
+      newMailParser->HandleLine(buffer.BeginWriting(), buffer.Length());
+      rv = outputStream->Write(buffer.get(), buffer.Length(), &bytesWritten);
+      NS_ENSURE_TRUE(NS_SUCCEEDED(rv) && (bytesWritten == buffer.Length()),
+                     NS_ERROR_FAILURE);
+    }
+  }
+  if (outputStream) {
+    outputStream->Flush();
+    newMailParser->PublishMsgHeader(nullptr);
+    newMailParser->OnStopRequest(nullptr, NS_OK);
+    rv = msgStore->FinishNewMessage(outputStream, newHdr);
+    NS_ENSURE_SUCCESS(rv, rv);
+    outputStream->Close();
+  }
+  // Truncate the spool file as we parsed it successfully.
+  rv = spoolFile->SetFileSize(0);
+  if (NS_FAILED(rv)) {
+    Error("movemailCantTruncateSpoolFile",
+          NS_ConvertUTF8toUTF16(spoolPath).get());
+  }
+
+  LOG(("GetNewMail returning rv=%" PRIx32, static_cast<uint32_t>(rv)));
+  return rv;
+}
+
+NS_IMETHODIMP
+nsMovemailService::SetDefaultLocalPath(nsIFile* aPath) {
+  NS_ENSURE_ARG(aPath);
+  return NS_SetPersistentFile(PREF_MAIL_ROOT_MOVEMAIL_REL,
+                              PREF_MAIL_ROOT_MOVEMAIL, aPath);
+}
+
+NS_IMETHODIMP
+nsMovemailService::GetDefaultLocalPath(nsIFile** aResult) {
+  NS_ENSURE_ARG_POINTER(aResult);
+  *aResult = nullptr;
+
+  nsresult rv;
+  bool havePref;
+  nsCOMPtr<nsIFile> localFile;
+  rv = NS_GetPersistentFile(PREF_MAIL_ROOT_MOVEMAIL_REL,
+                            PREF_MAIL_ROOT_MOVEMAIL, NS_APP_MAIL_50_DIR,
+                            havePref, getter_AddRefs(localFile));
+  if (NS_FAILED(rv)) return rv;
+
+  bool exists;
+  rv = localFile->Exists(&exists);
+  if (NS_SUCCEEDED(rv) && !exists)
+    rv = localFile->Create(nsIFile::DIRECTORY_TYPE, 0775);
+  if (NS_FAILED(rv)) return rv;
+
+  if (!havePref || !exists) {
+    rv = NS_SetPersistentFile(PREF_MAIL_ROOT_MOVEMAIL_REL,
+                              PREF_MAIL_ROOT_MOVEMAIL, localFile);
+    NS_ASSERTION(NS_SUCCEEDED(rv), "Failed to set root dir pref.");
+  }
+
+  localFile.forget(aResult);
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+nsMovemailService::GetServerIID(nsIID** aServerIID) {
+  *aServerIID = new nsIID(NS_GET_IID(nsIMovemailIncomingServer));
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+nsMovemailService::GetRequiresUsername(bool* aRequiresUsername) {
+  NS_ENSURE_ARG_POINTER(aRequiresUsername);
+  *aRequiresUsername = false;
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+nsMovemailService::GetPreflightPrettyNameWithEmailAddress(
+    bool* aPreflightPrettyNameWithEmailAddress) {
+  NS_ENSURE_ARG_POINTER(aPreflightPrettyNameWithEmailAddress);
+  *aPreflightPrettyNameWithEmailAddress = true;
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+nsMovemailService::GetCanLoginAtStartUp(bool* aCanLoginAtStartUp) {
+  NS_ENSURE_ARG_POINTER(aCanLoginAtStartUp);
+  *aCanLoginAtStartUp = true;
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+nsMovemailService::GetCanDelete(bool* aCanDelete) {
+  NS_ENSURE_ARG_POINTER(aCanDelete);
+  *aCanDelete = true;
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+nsMovemailService::GetCanGetMessages(bool* aCanGetMessages) {
+  NS_ENSURE_ARG_POINTER(aCanGetMessages);
+  *aCanGetMessages = true;
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+nsMovemailService::GetCanGetIncomingMessages(bool* aCanGetIncomingMessages) {
+  NS_ENSURE_ARG_POINTER(aCanGetIncomingMessages);
+  *aCanGetIncomingMessages = true;
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+nsMovemailService::GetCanDuplicate(bool* aCanDuplicate) {
+  NS_ENSURE_ARG_POINTER(aCanDuplicate);
+  *aCanDuplicate = false;
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+nsMovemailService::GetDefaultDoBiff(bool* aDoBiff) {
+  NS_ENSURE_ARG_POINTER(aDoBiff);
+  // by default, do biff for movemail
+  *aDoBiff = true;
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+nsMovemailService::GetDefaultServerPort(bool isSecure, int32_t* aDefaultPort) {
+  NS_ENSURE_ARG_POINTER(aDefaultPort);
+  *aDefaultPort = -1;
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+nsMovemailService::GetShowComposeMsgLink(bool* showComposeMsgLink) {
+  NS_ENSURE_ARG_POINTER(showComposeMsgLink);
+  *showComposeMsgLink = true;
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+nsMovemailService::GetFoldersCreatedAsync(bool* aAsyncCreation) {
+  NS_ENSURE_ARG_POINTER(aAsyncCreation);
+  *aAsyncCreation = false;
+  return NS_OK;
+}
diff --git a/mailnews/local/src/nsMovemailService.h b/mailnews/local/src/nsMovemailService.h
new file mode 100644
--- /dev/null
+++ b/mailnews/local/src/nsMovemailService.h
@@ -0,0 +1,31 @@
+/* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+#ifndef nsMovemailService_h___
+#define nsMovemailService_h___
+
+#include "nscore.h"
+#include "nsCOMPtr.h"
+
+#include "nsIMovemailService.h"
+#include "nsIMsgProtocolInfo.h"
+#include "nsIMsgWindow.h"
+
+class nsMovemailService : public nsIMsgProtocolInfo, public nsIMovemailService {
+ public:
+  nsMovemailService();
+
+  NS_DECL_ISUPPORTS
+  NS_DECL_NSIMOVEMAILSERVICE
+  NS_DECL_NSIMSGPROTOCOLINFO
+
+  void Error(const char* errorCode, const char16_t* param = nullptr);
+
+ private:
+  virtual ~nsMovemailService();
+  nsCOMPtr<nsIMsgWindow> mMsgWindow;
+};
+
+#endif /* nsMovemailService_h___ */
diff --git a/mailnews/local/test/unit/test_movemailDownload.js b/mailnews/local/test/unit/test_movemailDownload.js
new file mode 100644
--- /dev/null
+++ b/mailnews/local/test/unit/test_movemailDownload.js
@@ -0,0 +1,93 @@
+/**
+ * The intent of this file is to test that movemail download code
+ * works correctly.
+ */
+
+const { PromiseTestUtils } = ChromeUtils.import(
+  "resource://testing-common/mailnews/PromiseTestUtils.jsm"
+);
+
+var testSubjects = [
+  "[Bug 397009] A filter will let me tag, but not untag",
+  "Hello, did you receive my bugmail?",
+  "[Bug 655578] list-id filter broken",
+];
+
+var gMsgHdrs = [];
+var gMoveMailInbox;
+
+function setup(storeID, aHostName) {
+  return function _setup() {
+    localAccountUtils.loadLocalMailAccount(storeID);
+    let movemailServer = MailServices.accounts.createIncomingServer(
+      "",
+      aHostName,
+      "movemail"
+    );
+    let workingDir = Services.dirsvc.get("CurWorkD", Ci.nsIFile);
+    let workingDirFile = workingDir.clone();
+    let fullPath = workingDirFile.path + "/data/movemailspool";
+    workingDirFile.initWithPath(fullPath);
+    // movemail truncates spool file, so make a copy, and use that
+    workingDirFile.copyTo(null, "movemailspool-copy");
+    fullPath += "-copy";
+    dump("full path = " + fullPath + "\n");
+    movemailServer.setCharValue("spoolDir", fullPath);
+    movemailServer.QueryInterface(Ci.nsILocalMailIncomingServer);
+    movemailServer.getNewMail(null, null, null);
+    gMoveMailInbox = movemailServer.rootFolder.getChildNamed("INBOX");
+  };
+}
+
+var gTestArray = [
+  function continueTest() {
+    // Clear the gMsgHdrs array.
+    gMsgHdrs = [];
+    // get message headers for the inbox folder
+    var msgCount = 0;
+    for (let hdr of gMoveMailInbox.msgDatabase.EnumerateMessages()) {
+      gMsgHdrs.push(hdr);
+      Assert.equal(hdr.subject, testSubjects[msgCount++]);
+    }
+    Assert.equal(msgCount, 3);
+  },
+  async function streamMessages() {
+    for (let msgHdr of gMsgHdrs) {
+      await streamNextMessage(msgHdr);
+    }
+  },
+];
+
+function run_test() {
+  let hostName = "movemail";
+  for (
+    let index = 0;
+    index < localAccountUtils.pluggableStores.length;
+    index++
+  ) {
+    add_task(
+      setup(localAccountUtils.pluggableStores[index], hostName + "-" + index)
+    );
+    gTestArray.forEach(x => add_task(x));
+  }
+
+  run_next_test();
+}
+
+var streamNextMessage = async function(aMsgHdr) {
+  let messenger = Cc["@mozilla.org/messenger;1"].createInstance(
+    Ci.nsIMessenger
+  );
+  let msgURI = aMsgHdr.folder.getUriForMsg(aMsgHdr);
+  dump(
+    "streaming msg " +
+      msgURI +
+      " store token = " +
+      aMsgHdr.getStringProperty("storeToken")
+  );
+  let msgServ = messenger.messageServiceFromURI(msgURI);
+  let streamListener = new PromiseTestUtils.PromiseStreamListener();
+  msgServ.streamMessage(msgURI, streamListener, null, null, false, "", true);
+  let data = await streamListener.promise;
+  Assert.ok(data.startsWith("From "));
+};
diff --git a/mailnews/local/test/unit/xpcshell-cpp.ini b/mailnews/local/test/unit/xpcshell-cpp.ini
--- a/mailnews/local/test/unit/xpcshell-cpp.ini
+++ b/mailnews/local/test/unit/xpcshell-cpp.ini
@@ -6,12 +6,53 @@ tags = cpp
 dupe-manifest =
 prefs =
   mailnews.pop3.jsmodule=false
   mail.biff.play_sound=false
   mail.biff.show_alert=false
   mail.biff.show_tray_icon=false
   mail.biff.animate_dock_icon=false
 
+<<<<<<< local
+=======
+[test_bug457168.js]
+[test_duplicateKey.js]
+[test_fileName.js]
+[test_folderLoaded.js]
+[test_localFolder.js]
+[test_mailboxContentLength.js]
+[test_mailboxProtocol.js]
+[test_mailboxURL.js]
+[test_movemailDownload.js]
+skip-if = os == "win"
+[test_msgCopy.js]
+[test_msgIDParsing.js]
+[test_nsIMsgLocalMailFolder.js]
+[test_nsIMsgParseMailMsgState.js]
+[test_nsIMsgPluggableStore.js]
+[test_over2GBMailboxes.js]
+[test_over4GBMailboxes.js]
+# This one needs a longer timeout for working with a 4GiB file.
+requesttimeoutfactor = 2
+[test_pop3AuthMethods.js]
+[test_pop3Download.js]
+[test_pop3DownloadTempFileHandling.js]
+[test_pop3Duplicates.js]
+[test_pop3FilterActions.js]
+[test_pop3GSSAPIFail.js]
+[test_pop3GetNewMail.js]
+[test_pop3MoveFilter.js]
+[test_pop3MoveFilter2.js]
+[test_pop3MultiCopy.js]
+[test_pop3MultiCopy2.js]
+[test_pop3Password.js]
+[test_pop3Password2.js]
+[test_pop3Password3.js]
+[test_pop3PasswordFailure.js]
+[test_pop3PasswordFailure2.js]
+[test_pop3PasswordFailure3.js]
+[test_pop3Proxy.js]
+[test_pop3Pump.js]
+>>>>>>> other
 [test_pop3ServerBrokenCRAMDisconnect.js]
 [test_pop3ServerBrokenCRAMFail.js]
 
 [include:xpcshell-shared.ini]
diff --git a/mailnews/local/test/unit/xpcshell.ini b/mailnews/local/test/unit/xpcshell.ini
--- a/mailnews/local/test/unit/xpcshell.ini
+++ b/mailnews/local/test/unit/xpcshell.ini
@@ -6,17 +6,39 @@ tags = jsm
 dupe-manifest =
 prefs =
   mailnews.pop3.jsmodule=true
   mail.biff.play_sound=false
   mail.biff.show_alert=false
   mail.biff.show_tray_icon=false
   mail.biff.animate_dock_icon=false
 
+<<<<<<< local
 [include:xpcshell-shared.ini]
 
 # Only run for POP3-JS implementation
 [test_noTop.js]
 [test_noUidl.js]
 [test_Pop3Channel.js]
+=======
+[test_bug457168.js]
+[test_duplicateKey.js]
+[test_fileName.js]
+[test_folderLoaded.js]
+[test_localFolder.js]
+[test_mailboxContentLength.js]
+[test_mailboxProtocol.js]
+[test_mailboxURL.js]
+[test_movemailDownload.js]
+skip-if = os == "win"
+[test_msgCopy.js]
+[test_msgIDParsing.js]
+[test_nsIMsgLocalMailFolder.js]
+[test_nsIMsgParseMailMsgState.js]
+[test_nsIMsgPluggableStore.js]
+[test_over2GBMailboxes.js]
+[test_over4GBMailboxes.js]
+# This one needs a longer timeout for working with a 4GiB file.
+requesttimeoutfactor = 2
+>>>>>>> other
 [test_pop3AuthMethods.js]
 [test_pop3Filters.js]
 
diff --git a/mailnews/moz.build b/mailnews/moz.build
--- a/mailnews/moz.build
+++ b/mailnews/moz.build
@@ -41,16 +41,21 @@ if CONFIG["MOZ_MAPI_SUPPORT"]:
     ]
     TEST_DIRS += ["mapi/test"]
 
 DIRS += [
     "build",
     "import/build",
 ]
 
+if CONFIG["MOZ_MOVEMAIL"] and not (
+    CONFIG["MOZ_THUNDERBIRD"] and CONFIG["MOZ_WIDGET_TOOLKIT"] == "cocoa"
+):
+    DEFINES["MOZ_MOVEMAIL"] = True
+
 DEFINES["OS_ARCH"] = CONFIG["OS_ARCH"]
 DEFINES["MOZ_WIDGET_TOOLKIT"] = CONFIG["MOZ_WIDGET_TOOLKIT"]
 
 JAR_MANIFESTS += ["jar.mn"]
 
 TESTING_JS_MODULES.mailnews += [
     "test/fakeserver/Auth.jsm",
     "test/fakeserver/Binaryd.jsm",
diff --git a/mailnews/moz.configure b/mailnews/moz.configure
--- a/mailnews/moz.configure
+++ b/mailnews/moz.configure
@@ -18,9 +18,43 @@ def mapi_support(arg):
 
 set_config("MOZ_MAPI_SUPPORT", mapi_support)
 set_define("MOZ_MAPI_SUPPORT", mapi_support)
 
 # =========================================================
 # = OpenPGP integration
 # =========================================================
 
+<<<<<<< local
 include("../third_party/openpgp.configure")
+=======
+option(
+    "--enable-openpgp",
+    default=True,
+    help="Enable building of the Experimental OpenPGP integration",
+)
+
+
+@depends_if("--enable-openpgp")
+def openpgp(arg):
+    return True
+
+
+set_config("MOZ_OPENPGP", openpgp)
+set_define("MOZ_OPENPGP", openpgp)
+
+include("../third_party/openpgp.configure", when="--enable-openpgp")
+
+set_config("MOZ_MOVEMAIL", target_is_unix)
+set_define("HAVE_MOVEMAIL", target_is_unix)
+
+
+option(
+    "--enable-calendar",
+    default=False,
+    help="Deprecated. Please remove it from your mozconfig.",
+)
+
+
+@depends_if("--enable-calendar")
+def calendar_deprecated(arg):
+    return True
+>>>>>>> other
