# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1682795181 -7200
# Parent  7b0787ed8b3022fcb20aedf011b4eed911520224
Bug 297852 - Allow grouping in search term UI: Fix issue when prepending term at top level.

diff --git a/mailnews/search/content/searchTerm.js b/mailnews/search/content/searchTerm.js
--- a/mailnews/search/content/searchTerm.js
+++ b/mailnews/search/content/searchTerm.js
@@ -567,18 +567,19 @@ function onMore(event) {
           );
         }
         gSearchTerms[termIdx].obj.endsGrouping += gSearchTerms[prevTermIdx].obj.endsGrouping;
         gSearchTerms[prevTermIdx].obj.endsGrouping = 0;
       }
     }
 
     // To get the booleanAnd value, we need to visit the grandparent
-    // which may not exists. For this case, we intialise with true.
-    gSearchTerms[termIdx].obj.booleanAnd = true;
+    // which may not exists. For this case, we intialise with the group value.
+    // Note that this value doesn't matter, originally we initialised with true.
+    gSearchTerms[termIdx].obj.booleanAnd = groupAndOr;
     if (verbose) {
       console.log(
         `searchTerm: onMore ${termIdx} preset to ${
           gSearchTerms[termIdx].obj.booleanAnd ? "and" : "or"
         }`
       );
     }
     let loopIdx = richlistIdx - 2;
@@ -599,30 +600,29 @@ function onMore(event) {
           break;
         }
       }
       loopIdx--;
     }
     try {
       // This will fail if no next term.
       let nextTermIdx = termIdxFromRichlistIdx(richlistIdx + 1);
-      if (
-        nextTermIdx == termIdx + 1 &&
-        gSearchTerms[nextTermIdx].obj.beginsGrouping
-      ) {
-        if (gSearchTerms[nextTermIdx].level < gSearchTerms[termIdx].level) {
-          gSearchTerms[termIdx].obj.beginsGrouping += gSearchTerms[nextTermIdx].obj.beginsGrouping;
+      if (nextTermIdx == termIdx + 1) {
+        if (gSearchTerms[nextTermIdx].obj.beginsGrouping) {
+          if (gSearchTerms[nextTermIdx].level < gSearchTerms[termIdx].level) {
+            gSearchTerms[termIdx].obj.beginsGrouping += gSearchTerms[nextTermIdx].obj.beginsGrouping;
+          }
+          gSearchTerms[nextTermIdx].obj.beginsGrouping = 0;
+          if (verbose) {
+            console.log(
+              `searchTerm: onMore begin moved ${nextTermIdx} to ${termIdx}`
+            );
+          }
         }
-        gSearchTerms[nextTermIdx].obj.beginsGrouping = 0;
-        if (verbose) {
-          console.log(
-            `searchTerm: onMore begin moved ${nextTermIdx} to ${termIdx}`
-          );
-        }
-        // Apply correct and/Or to the next term.
+        // Apply correct and/or to the next term.
         gSearchTerms[nextTermIdx].obj.booleanAnd = groupAndOr;
         if (verbose) {
           console.log(
             `searchTerm: onMore ${termIdx} (next) set to ${
               gSearchTerms[nextTermIdx].obj.booleanAnd ? "and" : "or"
             }`
           );
         }
