# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1657787666 -7200
# Parent  b1acdaad526322b34c76d7808ef9791dd97662ea
Bug 1778888 - Revert bug 1726319 and bug 1776280 and allow folder cache to return null value for strings. r=benc

diff --git a/mailnews/base/src/nsMsgDBFolder.cpp b/mailnews/base/src/nsMsgDBFolder.cpp
--- a/mailnews/base/src/nsMsgDBFolder.cpp
+++ b/mailnews/base/src/nsMsgDBFolder.cpp
@@ -2014,41 +2014,28 @@ nsMsgDBFolder::GetStringProperty(const c
   NS_ENSURE_ARG_POINTER(propertyName);
   nsCOMPtr<nsIFile> dbPath;
   nsresult rv = GetFolderCacheKey(getter_AddRefs(dbPath));
   if (dbPath) {
     nsCOMPtr<nsIMsgFolderCacheElement> cacheElement;
     rv = GetFolderCacheElemFromFile(dbPath, getter_AddRefs(cacheElement));
     if (cacheElement)  // try to get from cache
       rv = cacheElement->GetCachedString(propertyName, propertyValue);
-    if (NS_FAILED(rv))  // if failed, then try to get from db, usually.
+    if (NS_FAILED(rv))  // if failed, then try to get from db.
     {
-      if (!strcmp(propertyName, "LastPurgeTime")) {
-        // Don't open DB. propertyValue stays blank and return NS_OK. Goes ahead
-        // and does a check for need to purge. Initial value of LastPurgeTime in
-        // folderCache.json is null or it's not present at all since a purge
-        // check for this folder has yet to occur since cache was initialized,
-        // until now.
-        return NS_OK;
-      }
       nsCOMPtr<nsIDBFolderInfo> folderInfo;
       nsCOMPtr<nsIMsgDatabase> db;
       bool exists;
       rv = dbPath->Exists(&exists);
       if (NS_FAILED(rv) || !exists) return NS_MSG_ERROR_FOLDER_MISSING;
       bool weOpenedDB = !mDatabase;
       rv = GetDBFolderInfoAndDB(getter_AddRefs(folderInfo), getter_AddRefs(db));
       if (NS_SUCCEEDED(rv))
         rv = folderInfo->GetCharProperty(propertyName, propertyValue);
       if (weOpenedDB) CloseDBIfFolderNotOpen();
-      if (NS_SUCCEEDED(rv)) {
-        // Now that we have the value, store it in our cache.
-        if (cacheElement)
-          cacheElement->SetCachedString(propertyName, propertyValue);
-      }
     }
   }
   return rv;
 }
 
 NS_IMETHODIMP
 nsMsgDBFolder::SetStringProperty(const char* propertyName,
                                  const nsACString& propertyValue) {
diff --git a/mailnews/base/src/nsMsgFolderCache.cpp b/mailnews/base/src/nsMsgFolderCache.cpp
--- a/mailnews/base/src/nsMsgFolderCache.cpp
+++ b/mailnews/base/src/nsMsgFolderCache.cpp
@@ -45,17 +45,20 @@ class nsMsgFolderCacheElement : public n
   NS_DECL_ISUPPORTS
   NS_IMETHOD GetKey(nsACString& key) override {
     key = mKey;
     return NS_OK;
   }
 
   NS_IMETHOD GetCachedString(const char* name, nsACString& _retval) override {
     Json::Value& o = Obj()[name];
-    if (!o.isNull() && o.isConvertibleTo(Json::stringValue)) {
+    if (o.isNull()) {
+      if (!Obj().isMember(name)) return NS_ERROR_FAILURE;
+    }
+    if (o.isConvertibleTo(Json::stringValue)) {
       _retval = o.asString().c_str();
       return NS_OK;
     }
     // Leave _retval unchanged if an error occurs.
     return NS_ERROR_FAILURE;
   }
 
   NS_IMETHOD GetCachedInt32(const char* name, int32_t* _retval) override {
