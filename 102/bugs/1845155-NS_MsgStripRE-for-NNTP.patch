# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1694633545 -7200
# Parent  8765aa066c04f7e7d8acd387410ffee2f599175c
Bug 1845155 - Implement NS_MsgStripRE() for NNTP in JS.

diff --git a/mail/extensions/openpgp/content/ui/enigmailMsgHdrViewOverlay.js b/mail/extensions/openpgp/content/ui/enigmailMsgHdrViewOverlay.js
--- a/mail/extensions/openpgp/content/ui/enigmailMsgHdrViewOverlay.js
+++ b/mail/extensions/openpgp/content/ui/enigmailMsgHdrViewOverlay.js
@@ -796,18 +796,24 @@ Enigmail.hdrView = {
 
   setSubject(subject) {
     if (
       gFolderDisplay.selectedMessages.length === 1 &&
       gFolderDisplay.selectedMessage
     ) {
       // Strip multiple localised Re: prefixes. This emulates NS_MsgStripRE().
       let newSubject = subject;
-      let prefixes = Services.prefs.getStringPref("mailnews.localizedRe", "Re");
-      prefixes = prefixes.split(",");
+      let rawPrefixes = Services.prefs.getComplexValue(
+        "mailnews.localizedRe",
+        Ci.nsIPrefLocalizedString
+      ).data;
+      let prefixes = [];
+      if (rawPrefixes) {
+        prefixes = rawPrefixes.split(",");
+      }
       if (!prefixes.includes("Re")) {
         prefixes.push("Re");
       }
       // Construct a regular expression like this: ^(Re: |Aw: )+
       let regEx = new RegExp(`^(${prefixes.join(": |")}: )+`, "i");
       newSubject = newSubject.replace(regEx, "");
       let hadRe = newSubject != subject;
 
diff --git a/mailnews/news/src/NntpNewsGroup.jsm b/mailnews/news/src/NntpNewsGroup.jsm
--- a/mailnews/news/src/NntpNewsGroup.jsm
+++ b/mailnews/news/src/NntpNewsGroup.jsm
@@ -125,16 +125,42 @@ class NntpNewsGroup {
           this._readKeySet.addRange(firstPossible, start - 1);
         }
       }
       return [start, end];
     }
     return [];
   }
 
+  setSubject(msgHdr, subject) {
+    // Process Re: prefix.
+    // Code from `setSubject()` in enigmailMsgHdrViewOverlay.js.
+    // Strip multiple localised Re: prefixes. This emulates NS_MsgStripRE().
+    let rawPrefixes = Services.prefs.getComplexValue(
+      "mailnews.localizedRe",
+      Ci.nsIPrefLocalizedString
+    ).data;
+    let prefixes = [];
+    if (rawPrefixes) {
+      prefixes = rawPrefixes.split(",");
+    }
+    if (!prefixes.includes("Re")) {
+      prefixes.push("Re");
+    }
+    // Construct a regular expression like this: ^(Re: |Aw: )+
+    let newSubject = subject.replace(
+      new RegExp(`^(${prefixes.join(": |")}: )+`, "i"),
+      ""
+    );
+    msgHdr.subject = newSubject;
+    if (newSubject != subject) {
+      msgHdr.OrFlags(Ci.nsMsgMessageFlags.HasRe);
+    }
+  }
+
   /**
    * Parse an XOVER line to a msg hdr.
    * @param {string} line - An XOVER response line.
    */
   processXOverLine(line) {
     let parts = line.split("\t");
     if (parts.length < 8) {
       return;
@@ -146,17 +172,17 @@ class NntpNewsGroup {
       date,
       messageId,
       references,
       bytes,
       lines,
     ] = parts;
     let msgHdr = this._db.CreateNewHdr(articleNumber);
     msgHdr.OrFlags(Ci.nsMsgMessageFlags.New);
-    msgHdr.subject = subject;
+    this.setSubject(msgHdr, subject);
     msgHdr.author = from;
     msgHdr.date = new Date(date).valueOf() * 1000;
     msgHdr.messageId = messageId;
     msgHdr.setReferences(references);
     msgHdr.messageSize = bytes;
     msgHdr.lineCount = lines;
     this._msgHdrs.push(msgHdr);
   }
@@ -226,17 +252,17 @@ class NntpNewsGroup {
     switch (name) {
       case "from":
         this._msgHdr.author = value;
         break;
       case "date":
         this._msgHdr.date = new Date(value).valueOf() * 1000;
         break;
       case "subject":
-        this._msgHdr.subject = value;
+        this.setSubject(this._msgHdr, value);
         this._msgHdr.OrFlags(Ci.nsMsgMessageFlags.New);
         break;
       case "message-id":
         this._msgHdr.messageId = value;
         break;
       case "references":
         this._msgHdr.setReferences(value);
         break;
