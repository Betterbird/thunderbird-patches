# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1671303337 -3600
# Parent  b832ea91d653d0e472d77341a396fa3009ab70b1
Misc: Improve behaviour when update check fails.

diff --git a/mail/base/content/aboutDialog.js b/mail/base/content/aboutDialog.js
--- a/mail/base/content/aboutDialog.js
+++ b/mail/base/content/aboutDialog.js
@@ -101,58 +101,72 @@ async function init(aEvent) {
       screen.availWidth / 2 - window.outerWidth / 2,
       screen.availHeight / 5
     );
   }
 }
 
 async function BetterbirdUpdateCheck(win) {
   let needsUpdate = "arguments" in win && win.arguments[0].needsUpdate;
+  let cantCheck = false;
   if (!needsUpdate) {
     try {
       let response = await fetch(
         "https://www.betterbird.eu/start/versions.txt",
         { cache: "no-store" }
       );
       if (!response.ok) {
-        return;
-      }
-      let content = await response.text();
-      let lines = content.split("\n");
-      let version = Services.appinfo.version;
-      let buildID = Services.appinfo.appBuildID;
-      let os = Services.appinfo.OS;
-      for (let l of lines) {
-        let parts = l.split(",");
-        // Format is os,version,buildid.
-        if (version.startsWith(parts[1]) && os == parts[0]) {
-          if (parts[2] > buildID) {
-            needsUpdate = true;
-            console.info(
-              `Betterbird update available for ${os}, new build ${parts[2]}, current build ${buildID}`
-            );
-          } else {
-            console.info(
-              `Betterbird update-to-date for ${os}, published build ${parts[2]}, current build ${buildID}`
-            );
+        console.error("Betterbird update check FAILED");
+        cantCheck = true;
+      } else {
+        let content = await response.text();
+        let lines = content.split("\n");
+        let version = Services.appinfo.version;
+        let buildID = Services.appinfo.appBuildID;
+        let os = Services.appinfo.OS;
+        for (let l of lines) {
+          let parts = l.split(",");
+          // Format is os,version,buildid.
+          if (version.startsWith(parts[1]) && os == parts[0]) {
+            if (parts[2] > buildID) {
+              needsUpdate = true;
+              console.info(
+                `Betterbird update available for ${os}, new build ${parts[2]}, current build ${buildID}`
+              );
+            } else {
+              console.info(
+                `Betterbird update-to-date for ${os}, published build ${parts[2]}, current build ${buildID}`
+              );
+            }
+            break;
           }
-          break;
         }
       }
-    } catch (ex) {}
+    } catch (ex) {
+      console.error("Betterbird update check FAILED");
+      cantCheck = true;
+    }
   }
 
   if (needsUpdate) {
     let el = document.getElementById("manualUpdate");
     el.hidden = false;
     el = document.getElementById("manualLink");
     el.setAttribute(
       "onclick",
       'openLink("https://www.betterbird.eu/downloads/");'
     );
+  } else if (cantCheck) {
+    let el = document.getElementById("cantCheckForUpdate");
+    el.hidden = false;
+    el = document.getElementById("manualLink2");
+    el.setAttribute(
+      "onclick",
+      'openLink("https://www.betterbird.eu/downloads/");'
+    );
   } else {
     // Up to date.
     let el = document.getElementById("noUpdatesFound");
     el.hidden = false;
   }
 }
 
 // This function is used to open about: tabs. The caller should ensure the url
diff --git a/mail/base/content/aboutDialog.xhtml b/mail/base/content/aboutDialog.xhtml
--- a/mail/base/content/aboutDialog.xhtml
+++ b/mail/base/content/aboutDialog.xhtml
@@ -53,16 +53,19 @@
         <label id="distribution" class="text-blurb"/>
         <label id="distributionId" class="text-blurb"/>
 
         <vbox id="detailsBox">
           <vbox id="updateBox">
           <hbox id="noUpdatesFound" align="center" hidden="true">
             <label>&update.noUpdatesFound;</label>
           </hbox>
+          <hbox id="cantCheckForUpdate" align="center" hidden="true">
+            <label is="text-link" id="manualLink2">&update.checkForUpdatesButton.label;</label>
+          </hbox>
           <hbox id="manualUpdate" align="center" hidden="true">
             <label>&update.manual.start;</label><label is="text-link" id="manualLink">&update.manual.linkText;</label><label>&update.manual.end;</label>
           </hbox>
 #ifdef MOZ_UPDATER
             <stack id="updateDeck" orient="vertical">
               <html:div id="checkForUpdates" class="update-deck-container">
                 <html:button id="checkForUpdatesButton"
                              accesskey="&update.checkForUpdatesButton.accesskey;"
diff --git a/mail/components/MailGlue.jsm b/mail/components/MailGlue.jsm
--- a/mail/components/MailGlue.jsm
+++ b/mail/components/MailGlue.jsm
@@ -765,16 +765,19 @@ MailGlue.prototype = {
     Services.prefs.setIntPref("betterbird.update.lastCheckTime", now);
     let needsUpdate = false;
     try {
       let response = await fetch(
         "https://www.betterbird.eu/start/versions.txt",
         { cache: "no-store" }
       );
       if (!response.ok) {
+        console.error(
+          `Betterbird update check FAILED, last done ${new Date(lastCheckTime * 1000).toLocaleString()}`
+        );
         return;
       }
       let content = await response.text();
       let lines = content.split("\n");
       let version = Services.appinfo.version;
       let buildID = Services.appinfo.appBuildID;
       let os = Services.appinfo.OS;
       for (let l of lines) {
@@ -789,17 +792,22 @@ MailGlue.prototype = {
           } else {
             console.info(
               `Betterbird update-to-date for ${os}, published build ${parts[2]}, current build ${buildID}`
             );
           }
           break;
         }
       }
-    } catch (ex) {}
+    } catch (ex) {
+      console.error(
+        `Betterbird update check FAILED, last done ${new Date(lastCheckTime * 1000).toLocaleString()}`
+      );
+      return;
+    }
     if (!needsUpdate) {
       return;
     }
     let win = Services.wm.getMostRecentWindow("mail:3pane");
     if (!win) {
       return;
     }
     let features = "chrome,";
