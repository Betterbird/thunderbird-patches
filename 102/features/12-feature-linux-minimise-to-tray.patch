# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1673864379 -3600
# Parent  f951dbd93c25caa87d19124c3a6cd40111f47aab
Feature: Minimise to tray for Linux.

Adapted from
https://hg.mozilla.org/comm-central/rev/d9c8e04388eb
and
https://hg.mozilla.org/comm-central/rev/0bc379dfb518

diff --git a/mail/app/profile/all-thunderbird.js b/mail/app/profile/all-thunderbird.js
--- a/mail/app/profile/all-thunderbird.js
+++ b/mail/app/profile/all-thunderbird.js
@@ -1285,17 +1285,17 @@ pref("toolkit.telemetry.updatePing.enabl
 pref("toolkit.telemetry.bhrPing.enabled", true);
 // Whether to enable Ecosystem Telemetry, requires a restart.
 #ifdef NIGHTLY_BUILD
   pref("toolkit.telemetry.ecosystemtelemetry.enabled", true);
 #else
   pref("toolkit.telemetry.ecosystemtelemetry.enabled", false);
 #endif
 
-#ifdef XP_WIN
+#if defined(XP_WIN) || defined(XP_UNIX)
 pref("mail.minimizeToTray", false);
 #endif
 
 pref("prompts.defaultModalType", 3);
 pref("prompts.contentPromptSubDialog", false);
 
 // The URL for the privacy policy related to recommended extensions.
 pref("extensions.recommendations.privacyPolicyUrl", "https://www.mozilla.org/en-US/privacy/thunderbird/#addons");
diff --git a/mail/base/content/messenger.xhtml b/mail/base/content/messenger.xhtml
--- a/mail/base/content/messenger.xhtml
+++ b/mail/base/content/messenger.xhtml
@@ -157,17 +157,17 @@
   <script defer="defer" src="chrome://messenger/content/messenger-customization.js"></script>
   <script defer="defer" src="chrome://messenger/content/customizable-toolbar.js"></script>
   <!-- panelUI.js is for the appmenus. -->
   <script defer="defer" src="chrome://messenger/content/panelUI.js"></script>
 #ifdef XP_MACOSX
   <script defer="defer" src="chrome://messenger/content/macMessengerMenu.js"></script>
   <script defer="defer" src="chrome://global/content/macWindowMenu.js"></script>
 #endif
-#ifdef XP_WIN
+#if defined(XP_WIN) || defined(XP_UNIX)
   <script defer="defer" src="chrome://messenger/content/minimizeToTray.js"></script>
 #endif
 
   <script defer="defer" src="chrome://messenger/content/threadPane.js"></script>
 
   <!-- calendar imip bar -->
   <script defer="defer" src="chrome://calendar/content/imip-bar.js"></script>
   <!-- calendar invitation display -->
diff --git a/mail/base/content/minimizeToTray.js b/mail/base/content/minimizeToTray.js
--- a/mail/base/content/minimizeToTray.js
+++ b/mail/base/content/minimizeToTray.js
@@ -1,19 +1,23 @@
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, you can obtain one at http://mozilla.org/MPL/2.0/. */
 
 /* globals docShell, Services, windowState */
 
+var { AppConstants } = ChromeUtils.import(
+  "resource://gre/modules/AppConstants.jsm"
+);
+
 addEventListener("sizemodechange", () => {
   if (
     windowState == window.STATE_MINIMIZED &&
     Services.prefs.getBoolPref("mail.minimizeToTray", false)
   ) {
     setTimeout(() => {
       var bw = docShell.treeOwner.QueryInterface(Ci.nsIBaseWindow);
       Cc["@mozilla.org/messenger/osintegration;1"]
-        .getService(Ci.nsIMessengerWindowsIntegration)
+        .getService(AppConstants.platform == "win" ? Ci.nsIMessengerWindowsIntegration : Ci.nsIMessengerUnixIntegration)
         .hideWindow(bw);
     });
   }
 });
diff --git a/mail/base/jar.mn b/mail/base/jar.mn
--- a/mail/base/jar.mn
+++ b/mail/base/jar.mn
@@ -53,17 +53,17 @@ messenger.jar:
     content/messenger/mailWindow.js                 (content/mailWindow.js)
     content/messenger/mailWindowOverlay.js          (content/mailWindowOverlay.js)
     content/messenger/messageDisplay.js             (content/messageDisplay.js)
     content/messenger/messageWindow.js              (content/messageWindow.js)
 *   content/messenger/messageWindow.xhtml           (content/messageWindow.xhtml)
     content/messenger/messenger-customization.js    (content/messenger-customization.js)
 *   content/messenger/messenger.xhtml               (content/messenger.xhtml)
     content/messenger/webextensions.css             (content/webextensions.css)
-#ifdef XP_WIN
+#if defined(XP_WIN) || defined(XP_UNIX)
     content/messenger/minimizeToTray.js             (content/minimizeToTray.js)
 #endif
     content/messenger/migrationProgress.js          (content/migrationProgress.js)
     content/messenger/migrationProgress.xhtml       (content/migrationProgress.xhtml)
     content/messenger/msgHdrView.js                 (content/msgHdrView.js)
     content/messenger/msgMail3PaneWindow.js         (content/msgMail3PaneWindow.js)
     content/messenger/msgSecurityPane.js            (content/msgSecurityPane.js)
     content/messenger/msgViewNavigation.js          (content/msgViewNavigation.js)
diff --git a/mail/components/preferences/general.inc.xhtml b/mail/components/preferences/general.inc.xhtml
--- a/mail/components/preferences/general.inc.xhtml
+++ b/mail/components/preferences/general.inc.xhtml
@@ -99,17 +99,17 @@
                     unset-default-tooltip,
                     checkbox-email-label.label,
                     checkbox-newsgroups-label.label,
                     checkbox-feeds-label.label,
                     system-search-integration-label.label,
                     check-on-startup-label.label"/>
         </hbox>
       </hbox>
-#ifdef XP_WIN
+#if defined(XP_WIN) || defined(XP_UNIX)
       <hbox align="start">
         <checkbox data-l10n-id="minimize-to-tray-label"
                   preference="mail.minimizeToTray"/>
       </hbox>
 #endif
       <hbox id="searchIntegrationContainer">
         <checkbox id="searchIntegration"
                   preference="searchintegration.enable"
diff --git a/mail/components/preferences/general.js b/mail/components/preferences/general.js
--- a/mail/components/preferences/general.js
+++ b/mail/components/preferences/general.js
@@ -92,17 +92,17 @@ Preferences.addAll([
   { id: "mail.prompt_purge_threshhold", type: "bool" },
   { id: "mail.purge.ask", type: "bool" },
   { id: "mail.purge_threshhold_mb", type: "int" },
   { id: "browser.cache.disk.capacity", type: "int" },
   { id: "browser.cache.disk.smart_size.enabled", inverted: true, type: "bool" },
   { id: "layers.acceleration.disabled", type: "bool", inverted: true },
   { id: "searchintegration.enable", type: "bool" },
 ]);
-if (AppConstants.platform == "win") {
+if (AppConstants.platform == "win" || AppConstants.platform == "linux") {
   Preferences.add({ id: "mail.minimizeToTray", type: "bool" });
 }
 if (AppConstants.platform != "macosx") {
   Preferences.add({ id: "mail.biff.show_alert", type: "bool" });
 }
 
 var ICON_URL_APP = "";
 
diff --git a/mail/modules/MailUtils.jsm b/mail/modules/MailUtils.jsm
--- a/mail/modules/MailUtils.jsm
+++ b/mail/modules/MailUtils.jsm
@@ -324,16 +324,20 @@ var MailUtils = {
     // Try opening new tabs in a 3pane window
     let mail3PaneWindow = Services.wm.getMostRecentWindow("mail:3pane");
     if (mail3PaneWindow) {
       mail3PaneWindow.MsgDisplayMessageInFolderTab(aMsgHdr);
       if (Ci.nsIMessengerWindowsIntegration) {
         Cc["@mozilla.org/messenger/osintegration;1"]
           .getService(Ci.nsIMessengerWindowsIntegration)
           .showWindow(mail3PaneWindow);
+      } else if (Ci.nsIMessengerUnixIntegration) {
+        Cc["@mozilla.org/messenger/osintegration;1"]
+          .getService(Ci.nsIMessengerUnixIntegration)
+          .showWindow(mail3PaneWindow);
       }
       mail3PaneWindow.focus();
     } else {
       let args = { msgHdr: aMsgHdr };
       args.wrappedJSObject = args;
       Services.ww.openWindow(
         null,
         "chrome://messenger/content/messenger.xhtml",
diff --git a/mailnews/base/public/moz.build b/mailnews/base/public/moz.build
--- a/mailnews/base/public/moz.build
+++ b/mailnews/base/public/moz.build
@@ -65,16 +65,21 @@ XPIDL_SOURCES += [
     "nsMsgMessageFlags.idl",
 ]
 
 if CONFIG["OS_ARCH"] == "WINNT":
     XPIDL_SOURCES += [
         "nsIMessengerWindowsIntegration.idl",
     ]
 
+if CONFIG["OS_ARCH"] == "Linux":
+    XPIDL_SOURCES += [
+        "nsIMessengerUnixIntegration.idl",
+    ]
+
 XPIDL_MODULE = "msgbase"
 
 EXPORTS += [
     "MailNewsTypes.h",
     "msgCore.h",
     "nsMsgBaseCID.h",
     "nsMsgHeaderMasks.h",
     "nsMsgLocalFolderHdrs.h",
diff --git a/mailnews/base/public/nsIMessengerUnixIntegration.idl b/mailnews/base/public/nsIMessengerUnixIntegration.idl
new file mode 100644
--- /dev/null
+++ b/mailnews/base/public/nsIMessengerUnixIntegration.idl
@@ -0,0 +1,16 @@
+/* -*- Mode: IDL; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
+/* This Source Code Form is subject to the terms of the Mozilla Public
+ * License, v. 2.0. If a copy of the MPL was not distributed with this
+ * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
+
+interface mozIDOMWindowProxy;
+
+#include "nsIBaseWindow.idl"
+#include "nsIMessengerOSIntegration.idl"
+
+/* GUID from https://www.guidgenerator.com/online-guid-generator.aspx */
+[scriptable, uuid(ea26454c-2d5e-498c-87f0-95f93c51b8e6)]
+interface nsIMessengerUnixIntegration : nsIMessengerOSIntegration {
+  void hideWindow(in nsIBaseWindow aWindow);
+  void showWindow(in mozIDOMWindowProxy aWindow);
+};
diff --git a/mailnews/base/src/nsMessengerUnixIntegration.cpp b/mailnews/base/src/nsMessengerUnixIntegration.cpp
--- a/mailnews/base/src/nsMessengerUnixIntegration.cpp
+++ b/mailnews/base/src/nsMessengerUnixIntegration.cpp
@@ -1,28 +1,118 @@
 /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #include "nsMessengerUnixIntegration.h"
+#include "nsServiceManagerUtils.h"
+#include "nsCOMPtr.h"
+#include "nsCOMArray.h"
 #include "nsString.h"
 #include "../../../third_party/appindicator/app-indicator.h"
 #include "mozilla/Preferences.h"
+#include "mozIDOMWindow.h"
+#include "nsIBaseWindow.h"
+#include "nsIPrefService.h"
+#include "nsIWidget.h"
+#include "nsIWindowMediator.h"
+#include "nsPIDOMWindow.h"
+
+#define SHOW_TRAY_ICON_PREF "mail.biff.show_tray_icon"
+#define SHOW_TRAY_ICON_ALWAYS_PREF "mail.biff.show_tray_icon_always"
+
+static nsCOMArray<nsIBaseWindow> sHiddenWindows;
+static uint32_t sLastUnreadCount;
+static nsAutoString sLastUnreadTooltip;
+static AppIndicator *ci = NULL;
+
+using namespace mozilla;
 
 nsMessengerUnixIntegration::nsMessengerUnixIntegration() {}
 
-NS_IMPL_ISUPPORTS(nsMessengerUnixIntegration, nsIMessengerOSIntegration)
+NS_IMPL_ADDREF(nsMessengerUnixIntegration)
+NS_IMPL_RELEASE(nsMessengerUnixIntegration)
+
+NS_INTERFACE_MAP_BEGIN(nsMessengerUnixIntegration)
+  NS_INTERFACE_MAP_ENTRY_AMBIGUOUS(nsISupports, nsIMessengerOSIntegration)
+  NS_INTERFACE_MAP_ENTRY(nsIMessengerUnixIntegration)
+  NS_INTERFACE_MAP_ENTRY(nsIMessengerOSIntegration)
+NS_INTERFACE_MAP_END
+
+static void activateWindow(mozIDOMWindowProxy* win) {
+  nsCOMPtr<nsPIDOMWindowOuter> privateWindow = nsPIDOMWindowOuter::From(win);
+  privateWindow->Focus(mozilla::dom::CallerType::System);
+}
+
+static void activated(void) {
+  // TODO: Somehow get this called when the user clicks the app indicator icon.
+  fprintf(stderr, "=== nsMessengerUnixIntegration static activated\n");
+  nsresult rv;
+  nsCOMPtr<nsIPrefBranch> prefBranch =
+      do_GetService(NS_PREFSERVICE_CONTRACTID, &rv);
+  NS_ENSURE_SUCCESS_VOID(rv);
+  bool showTrayIcon;
+  rv = prefBranch->GetBoolPref(SHOW_TRAY_ICON_PREF, &showTrayIcon);
+  NS_ENSURE_SUCCESS_VOID(rv);
+  bool showTrayIconAlways;
+  if (NS_FAILED(prefBranch->GetBoolPref(SHOW_TRAY_ICON_ALWAYS_PREF,
+                                        &showTrayIconAlways))) {
+    showTrayIconAlways = false;
+  }
+  if ((!showTrayIcon || !sLastUnreadCount) && !showTrayIconAlways) {
+    if (ci) {
+      app_indicator_set_status(ci, APP_INDICATOR_STATUS_PASSIVE);
+    }
+  }
+
+  // No minimized window, bring the most recent 3pane window to the front.
+  if (sHiddenWindows.Length() == 0) {
+    nsCOMPtr<nsIWindowMediator> windowMediator =
+        do_GetService(NS_WINDOWMEDIATOR_CONTRACTID, &rv);
+    NS_ENSURE_SUCCESS_VOID(rv);
+
+    nsCOMPtr<mozIDOMWindowProxy> domWindow;
+    rv = windowMediator->GetMostRecentBrowserWindow(
+        getter_AddRefs(domWindow));
+    NS_ENSURE_SUCCESS_VOID(rv);
+    if (domWindow) {
+      activateWindow(domWindow);
+      return;
+    }
+  }
+
+  // Bring the minimized windows to the front.
+  for (uint32_t i = 0; i < sHiddenWindows.Length(); i++) {
+    auto window = sHiddenWindows.SafeElementAt(i);
+    if (!window) {
+      continue;
+    }
+    window->SetVisibility(true);
+
+    nsCOMPtr<nsIWidget> widget;
+    window->GetMainWidget(getter_AddRefs(widget));
+    if (!widget) {
+      continue;
+    }
+    // TODO: Do something with the `widget` or remove code above.
+  }
+
+  sHiddenWindows.Clear();
+}
 
 NS_IMETHODIMP
 nsMessengerUnixIntegration::UpdateUnreadCount(uint32_t unreadCount,
                                               const nsAString& unreadTooltip) {
-  if (!mozilla::Preferences::GetBool("mail.biff.show_tray_icon", false)) return NS_OK;
+  sLastUnreadCount = unreadCount;
+  sLastUnreadTooltip = unreadTooltip;
 
-  static AppIndicator *ci = NULL;
+  if (!mozilla::Preferences::GetBool("mail.biff.show_tray_icon", false) &&
+      sHiddenWindows.Length() == 0) return NS_OK;
+
   static char icon_path0[PATH_MAX + 100];
   static char icon_pathN[PATH_MAX + 100];
 
   if (!ci) {
     // Find icon absolute path.
     size_t len = readlink("/proc/self/exe", icon_path0, PATH_MAX);
     char* q = icon_path0 + len - 1;
     while (*q != '/') q--;
@@ -42,25 +132,40 @@ nsMessengerUnixIntegration::UpdateUnread
     // one but not the other.
     app_indicator_set_title(ci, tooltip.get());
     app_indicator_set_tooltip_full(ci,
       NULL /* icon */, tooltip.get() /* title */, NULL /* body */
     );
     app_indicator_set_icon_full(ci, icon_pathN, NULL);
     app_indicator_set_status(ci, APP_INDICATOR_STATUS_ACTIVE);
   } else {
-    if (mozilla::Preferences::GetBool("mail.biff.show_tray_icon_always", false)) {
+    if (mozilla::Preferences::GetBool("mail.biff.show_tray_icon_always", false) ||
+      sHiddenWindows.Length() > 0) {
       app_indicator_set_title(ci, "Betterbird");
       app_indicator_set_tooltip_full(ci,
         NULL /* icon */, "Betterbird" /* title */, NULL /* body */
       );
       app_indicator_set_icon_full(ci, icon_path0, NULL);
       app_indicator_set_status(ci, APP_INDICATOR_STATUS_ACTIVE);
     } else {
       app_indicator_set_status(ci, APP_INDICATOR_STATUS_PASSIVE);
     }
   }
 
   return NS_OK;
 }
 
 NS_IMETHODIMP
 nsMessengerUnixIntegration::OnExit() { return NS_OK; }
+
+nsresult nsMessengerUnixIntegration::HideWindow(nsIBaseWindow* aWindow) {
+  NS_ENSURE_ARG(aWindow);
+  aWindow->SetVisibility(false);
+  sHiddenWindows.AppendElement(aWindow);
+  UpdateUnreadCount(sLastUnreadCount, sLastUnreadTooltip);
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+nsMessengerUnixIntegration::ShowWindow(mozIDOMWindowProxy* aWindow) {
+  activateWindow(aWindow);
+  return NS_OK;
+}
diff --git a/mailnews/base/src/nsMessengerUnixIntegration.h b/mailnews/base/src/nsMessengerUnixIntegration.h
--- a/mailnews/base/src/nsMessengerUnixIntegration.h
+++ b/mailnews/base/src/nsMessengerUnixIntegration.h
@@ -1,22 +1,23 @@
 /* -*- Mode: C++; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
 /* This Source Code Form is subject to the terms of the Mozilla Public
  * License, v. 2.0. If a copy of the MPL was not distributed with this
  * file, You can obtain one at http://mozilla.org/MPL/2.0/. */
 
 #ifndef __nsMessengerUnixIntegration_h
 #define __nsMessengerUnixIntegration_h
 
-#include "nsIMessengerOSIntegration.h"
+#include "nsIMessengerUnixIntegration.h"
 
-class nsMessengerUnixIntegration : public nsIMessengerOSIntegration {
+class nsMessengerUnixIntegration : public nsIMessengerUnixIntegration {
  public:
   nsMessengerUnixIntegration();
 
   NS_DECL_ISUPPORTS
   NS_DECL_NSIMESSENGEROSINTEGRATION
+  NS_DECL_NSIMESSENGERUNIXINTEGRATION
 
  private:
   virtual ~nsMessengerUnixIntegration() {}
 };
 
 #endif  // __nsMessengerUnixIntegration_h
