# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1649494696 -7200
# Parent  ae63b2648d6e3167228f9e2c71f73ef0748199bc
Feature: Use nsIMultilineTreeView.

Based on the work of Paul Rouget in https://bugzilla.mozilla.org/show_bug.cgi?id=441414
and https://bugzilla.mozilla.org/show_bug.cgi?id=213945

diff --git a/mail/base/content/mailWindowOverlay.js b/mail/base/content/mailWindowOverlay.js
--- a/mail/base/content/mailWindowOverlay.js
+++ b/mail/base/content/mailWindowOverlay.js
@@ -489,16 +489,25 @@ function InitViewLayoutStyleMenu(event, 
   let parent = appmenu
     ? event.target.querySelector(".panel-subview-body")
     : event.target;
 
   let layoutStyleMenuitem = parent.children[paneConfig];
   if (layoutStyleMenuitem) {
     layoutStyleMenuitem.setAttribute("checked", "true");
   }
+
+  let multiline = document.getElementById(
+    appmenu ? "appmenu_multilineAllFolders" : "multilineAllFolders"
+  );
+  if (Services.prefs.getBoolPref("mail.pane_config.multiline_all")) {
+    multiline.setAttribute("checked", "true");
+  } else {
+    multiline.removeAttribute("checked");
+  }
 }
 
 /**
  * Initialize (check) appropriate folder mode under the View | Folder menu.
  */
 function InitViewFolderViewsMenu(event) {
   let tab = document.getElementById("tabmail")?.currentTabInfo;
   if (["mail3PaneTab", "mailMessageTab"].includes(tab?.mode.name)) {
@@ -639,16 +648,27 @@ function InitViewSortByMenu() {
 
   sortThreadedMenuItem.setAttribute("checked", threaded);
   sortUnthreadedMenuItem.setAttribute("checked", !threaded && !grouped);
 
   var groupBySortOrderMenuItem = document.getElementById("groupBySort");
 
   groupBySortOrderMenuItem.setAttribute("disabled", !sortTypeSupportsGrouping);
   groupBySortOrderMenuItem.setAttribute("checked", grouped);
+
+  if (
+    gFolderDisplay.view.dbView
+      .QueryInterface(Ci.nsIMultilineTreeView)
+      .isMultiline()
+  ) {
+    groupBySortOrderMenuItem.setAttribute("disabled", true);
+    sortThreadedMenuItem.setAttribute("disabled", true);
+  } else {
+    sortThreadedMenuItem.removeAttribute("disabled");
+  }
 }
 
 function InitAppViewSortByMenu() {
   let sortType, sortOrder, grouped, threaded;
 
   let tab = document.getElementById("tabmail")?.currentTabInfo;
   if (tab?.mode.name == "mail3PaneTab") {
     ({ type: sortType, order: sortOrder, grouped, threaded } = tab.sort);
@@ -736,16 +756,27 @@ function InitAppViewSortByMenu() {
 
   sortThreadedMenuItem.setAttribute("checked", threaded);
   sortUnthreadedMenuItem.setAttribute("checked", !threaded && !grouped);
 
   let groupBySortOrderMenuItem = document.getElementById("appmenu_groupBySort");
 
   groupBySortOrderMenuItem.setAttribute("disabled", !sortTypeSupportsGrouping);
   groupBySortOrderMenuItem.setAttribute("checked", grouped);
+
+  if (
+    gFolderDisplay.view.dbView
+      .QueryInterface(Ci.nsIMultilineTreeView)
+      .isMultiline()
+  ) {
+    groupBySortOrderMenuItem.setAttribute("disabled", true);
+    sortThreadedMenuItem.setAttribute("disabled", true);
+  } else {
+    sortThreadedMenuItem.removeAttribute("disabled");
+  }
 }
 
 function isSortTypeValidForGrouping(sortType) {
   return Boolean(
     sortType == Ci.nsMsgViewSortType.byAccount ||
       sortType == Ci.nsMsgViewSortType.byAttachments ||
       sortType == Ci.nsMsgViewSortType.byAuthor ||
       sortType == Ci.nsMsgViewSortType.byCorrespondent ||
@@ -2858,16 +2889,33 @@ function MsgApplyFiltersToSelection() {
 function ChangeMailLayout(newLayout) {
   Services.prefs.setIntPref("mail.pane_config.dynamic", newLayout);
 }
 
 function ChangeMailLayoutForCommand(aCommand) {
   ChangeMailLayout(kMailLayoutCommandMap[aCommand]);
 }
 
+function ToogleMultilineAll(appmenu) {
+  let multiline = document.getElementById(
+    appmenu ? "appmenu_multilineAllFolders" : "multilineAllFolders"
+  );
+  let isMultiline = Services.prefs.getBoolPref(
+    "mail.pane_config.multiline_all"
+  );
+  if (isMultiline) {
+    multiline.removeAttribute("checked");
+  } else {
+    multiline.setAttribute("checked", "true");
+  }
+  Services.prefs.setBoolPref("mail.pane_config.multiline_all", !isMultiline);
+
+  gFolderDisplay?.tree?.invalidate();
+}
+
 function MsgViewAllHeaders() {
   const mode = Ci.nsMimeHeaderDisplayTypes.AllHeaders;
   Services.prefs.setIntPref("mail.show_headers", mode); // 2
   AdjustHeaderView(mode);
   ReloadMessage();
 }
 
 function MsgViewNormalHeaders() {
diff --git a/mail/base/content/messenger-menubar.inc.xhtml b/mail/base/content/messenger-menubar.inc.xhtml
--- a/mail/base/content/messenger-menubar.inc.xhtml
+++ b/mail/base/content/messenger-menubar.inc.xhtml
@@ -366,16 +366,19 @@
       <menupopup id="view_layout_popup" onpopupshowing="InitViewLayoutStyleMenu(event)">
         <menuitem id="messagePaneClassic" type="radio" label="&messagePaneClassic.label;" name="viewlayoutgroup"
                   accesskey="&messagePaneClassic.accesskey;" command="cmd_viewClassicMailLayout"/>
         <menuitem id="messagePaneWide" type="radio" label="&messagePaneWide.label;" name="viewlayoutgroup"
                   accesskey="&messagePaneWide.accesskey;" command="cmd_viewWideMailLayout"/>
         <menuitem id="messagePaneVertical" type="radio" label="&messagePaneVertical.label;" name="viewlayoutgroup"
                   accesskey="&messagePaneVertical.accesskey;" command="cmd_viewVerticalMailLayout"/>
         <menuseparator id="viewMenuAfterPaneVerticalSeparator"/>
+        <menuitem id="multilineAllFolders" type="checkbox" label="&multilineAllFolders.label;"
+                  oncommand="ToogleMultilineAll(false);"/>
+        <menuseparator id="viewMenuAfterMultilineViewSeparator"/>
         <menuitem id="menu_showFolderPane" type="checkbox" label="&showFolderPaneCmd.label;"
                   accesskey="&showFolderPaneCmd.accesskey;" command="cmd_toggleFolderPane"/>
         <menuitem id="menu_showFolderPaneCols" type="checkbox" label="&showFolderPaneColsCmd.label;"
                   accesskey="&showFolderPaneColsCmd.accesskey;" command="cmd_toggleFolderPaneCols"/>
         <menuitem id="menu_showMessage" type="checkbox" label="&showMessageCmd.label;" key="key_toggleMessagePane"
                   accesskey="&showMessageCmd.accesskey;" command="cmd_toggleMessagePane"/>
       </menupopup>
     </menu>
diff --git a/mail/base/content/threadTree.inc.xhtml b/mail/base/content/threadTree.inc.xhtml
--- a/mail/base/content/threadTree.inc.xhtml
+++ b/mail/base/content/threadTree.inc.xhtml
@@ -74,20 +74,23 @@
                                  class="thread-tree-icon-header attachmentColumnHeader"
                                  persist="hidden ordinal sortDirection"
                                  fixed="true"
                                  closemenu="none"
                                  src="chrome://messenger/skin/icons/attachment-col.svg"
                                  label="&attachmentColumn.label;"
                                  tooltiptext="&attachmentColumn2.tooltip;"/>
                         <splitter class="tree-splitter"/>
+                        <!--
+                          subjectCol used to have ignoreincolumnpicker="true".
+                          Switching the subject off will now trigger the multi-line view.
+                        -->
                         <treecol id="subjectCol"
-                                 persist="ordinal width sortDirection"
+                                 persist="hidden ordinal width sortDirection"
                                  flex="7"
-                                 ignoreincolumnpicker="true"
                                  closemenu="none"
                                  label="&subjectColumn.label;"
                                  tooltiptext="&subjectColumn2.tooltip;"/>
                         <splitter class="tree-splitter"/>
                         <treecol is="treecol-image" id="unreadButtonColHeader"
                                  class="thread-tree-icon-header readColumnHeader"
                                  persist="hidden ordinal sortDirection"
                                  fixed="true"
diff --git a/mail/components/customizableui/content/panelUI.inc.xhtml b/mail/components/customizableui/content/panelUI.inc.xhtml
--- a/mail/components/customizableui/content/panelUI.inc.xhtml
+++ b/mail/components/customizableui/content/panelUI.inc.xhtml
@@ -449,16 +449,22 @@
                        command="cmd_viewWideMailLayout"/>
         <toolbarbutton id="appmenu_messagePaneVertical"
                        class="subviewbutton subviewbutton-iconic"
                        type="radio"
                        label="&messagePaneVertical.label;"
                        name="viewlayoutgroup"
                        command="cmd_viewVerticalMailLayout"/>
         <toolbarseparator id="appmenu_viewMenuAfterPaneVerticalSeparator"/>
+        <toolbarbutton id="appmenu_multilineAllFolders"
+                       class="subviewbutton subviewbutton-iconic"
+                       type="checkbox"
+                       label="&multilineAllFolders.label;"
+                       oncommand="ToogleMultilineAll(true);"/>
+        <toolbarseparator id="appmenu_viewMenuAfterMultilineViewSeparator"/>
         <toolbarbutton id="appmenu_showFolderPane"
                        class="subviewbutton subviewbutton-iconic"
                        type="checkbox"
                        label="&showFolderPaneCmd.label;"
                        command="cmd_toggleFolderPane"/>
         <toolbarbutton id="appmenu_showFolderPaneCols"
                        class="subviewbutton subviewbutton-iconic"
                        type="checkbox"
diff --git a/mail/locales/en-US/chrome/messenger/messenger.dtd b/mail/locales/en-US/chrome/messenger/messenger.dtd
--- a/mail/locales/en-US/chrome/messenger/messenger.dtd
+++ b/mail/locales/en-US/chrome/messenger/messenger.dtd
@@ -138,16 +138,17 @@
 <!ENTITY messagePaneLayoutStyle.label "Layout">
 <!ENTITY messagePaneLayoutStyle.accesskey "L">
 <!ENTITY messagePaneClassic.label "Classic View">
 <!ENTITY messagePaneClassic.accesskey "C">
 <!ENTITY messagePaneWide.label "Wide View">
 <!ENTITY messagePaneWide.accesskey "W">
 <!ENTITY messagePaneVertical.label "Vertical View">
 <!ENTITY messagePaneVertical.accesskey "V">
+<!ENTITY multilineAllFolders.label "Multi-line View On All Folders">
 <!ENTITY showFolderPaneCmd.label "Folder Pane">
 <!ENTITY showFolderPaneCmd.accesskey "F">
 <!ENTITY showFolderPaneColsCmd.label "Folder Pane Columns">
 <!ENTITY showFolderPaneColsCmd.accesskey "P">
 <!ENTITY showMessageCmd.label "Message Pane">
 <!ENTITY showMessageCmd.accesskey "M">
 
 <!ENTITY folderView.label "Folders">
diff --git a/mail/themes/linux/mail/messenger.css b/mail/themes/linux/mail/messenger.css
--- a/mail/themes/linux/mail/messenger.css
+++ b/mail/themes/linux/mail/messenger.css
@@ -464,8 +464,43 @@ treechildren::-moz-tree-row {
 
 :root[uidensity="compact"] treechildren::-moz-tree-row {
   min-height: 1.3rem;
 }
 
 :root[uidensity="touch"] treechildren::-moz-tree-row {
   min-height: 2.4rem;
 }
+
+/* Multiline tree */
+treechildren::-moz-tree-row(multiline) {
+  min-height: 3.2rem;
+}
+treechildren::-moz-tree-colspan {
+  margin-top: 1.6rem;
+}
+treechildren::-moz-tree-cell(multiline) {
+  /* For some reason, both min-height and height are needed on Windows */
+  min-height: 1.6rem;
+  height: 1.6rem;
+}
+
+:root[uidensity="compact"] treechildren::-moz-tree-row(multiline) {
+  min-height: 2.6rem;
+}
+:root[uidensity="compact"] treechildren::-moz-tree-colspan {
+  margin-top: 1.3rem;
+}
+:root[uidensity="compact"] treechildren::-moz-tree-cell(multiline) {
+  min-height: 1.3rem;
+  height: 1.3rem;
+}
+
+:root[uidensity="touch"] treechildren::-moz-tree-row(multiline) {
+  min-height: 4.8rem;
+}
+:root[uidensity="touch"] treechildren::-moz-tree-colspan {
+  margin-top: 2.4rem;
+}
+:root[uidensity="touch"] treechildren::-moz-tree-cell(multiline) {
+  min-height: 2.4rem;
+  height: 2.4rem;
+}
diff --git a/mail/themes/osx/mail/messenger.css b/mail/themes/osx/mail/messenger.css
--- a/mail/themes/osx/mail/messenger.css
+++ b/mail/themes/osx/mail/messenger.css
@@ -462,8 +462,43 @@ treechildren::-moz-tree-row {
 
 :root[uidensity="compact"] treechildren::-moz-tree-row {
   min-height: 1.6rem;
 }
 
 :root[uidensity="touch"] treechildren::-moz-tree-row {
   min-height: 2.4rem;
 }
+
+/* Multiline tree */
+treechildren::-moz-tree-row(multiline) {
+  min-height: 3.6rem;
+}
+treechildren::-moz-tree-colspan {
+  margin-top: 1.8rem;
+}
+treechildren::-moz-tree-cell(multiline) {
+  /* For some reason, both min-height and height are needed on Windows */
+  min-height: 1.8rem;
+  height: 1.8rem;
+}
+
+:root[uidensity="compact"] treechildren::-moz-tree-row(multiline) {
+  min-height: 3.2rem;
+}
+:root[uidensity="compact"] treechildren::-moz-tree-colspan {
+  margin-top: 1.6rem;
+}
+:root[uidensity="compact"] treechildren::-moz-tree-cell(multiline) {
+  min-height: 1.6rem;
+  height: 1.6rem;
+}
+
+:root[uidensity="touch"] treechildren::-moz-tree-row(multiline) {
+  min-height: 4.8rem;
+}
+:root[uidensity="touch"] treechildren::-moz-tree-colspan {
+  margin-top: 2.4rem;
+}
+:root[uidensity="touch"] treechildren::-moz-tree-cell(multiline) {
+  min-height: 2.4rem;
+  height: 2.4rem;
+}
diff --git a/mail/themes/shared/mail/mailWindow1.css b/mail/themes/shared/mail/mailWindow1.css
--- a/mail/themes/shared/mail/mailWindow1.css
+++ b/mail/themes/shared/mail/mailWindow1.css
@@ -49,16 +49,25 @@
 treechildren::-moz-tree-cell-text(read) {
   font-weight: normal;
 }
 
 treechildren::-moz-tree-cell-text(unread) {
   font-weight: bold;
 }
 
+treechildren::-moz-tree-cell-text(colspan) {
+  /* Italic is a matter of taste here. It can be removed in userChrome.css */
+  font-style: italic;
+}
+
+treechildren::-moz-tree-row(multiline) {
+  border-bottom: 1px solid hsla(0, 0%, 50%, 0.5);
+}
+
 :root[lwt-tree-brighttext] treechildren::-moz-tree-cell-text(untagged, unread) {
   color: #fff !important;
 }
 
 /* on a collapsed thread, if the top level message is read, but the thread has
  * unread children, underline the text.  4.x mac did this, very slick
  */
 treechildren::-moz-tree-cell-text(container, closed, hasUnread, read) {
diff --git a/mail/themes/shared/mail/searchDialog.css b/mail/themes/shared/mail/searchDialog.css
--- a/mail/themes/shared/mail/searchDialog.css
+++ b/mail/themes/shared/mail/searchDialog.css
@@ -63,16 +63,25 @@ radio[value="and"] {
 treechildren::-moz-tree-cell-text(read) {
   font-weight: normal;
 }
 
 treechildren::-moz-tree-cell-text(unread) {
   font-weight: bold;
 }
 
+treechildren::-moz-tree-cell-text(colspan) {
+  /* Italic is a matter of taste here. It can be removed in userChrome.css */
+  font-style: italic;
+}
+
+treechildren::-moz-tree-row(multiline) {
+  border-bottom: 1px solid hsla(0, 0%, 50%, 0.5);
+}
+
 /* on a collapsed thread, if the top level message is read, but the thread has
  * unread children, underline the text.  4.x mac did this, very slick
  */
 treechildren::-moz-tree-cell-text(container, closed, hasUnread, read) {
   text-decoration: underline;
 }
 
 #gray_horizontal_splitter {
diff --git a/mail/themes/windows/mail/messenger.css b/mail/themes/windows/mail/messenger.css
--- a/mail/themes/windows/mail/messenger.css
+++ b/mail/themes/windows/mail/messenger.css
@@ -541,8 +541,43 @@ treechildren::-moz-tree-row {
 
 :root[uidensity="compact"] treechildren::-moz-tree-row {
   height: 1.6rem;
 }
 
 :root[uidensity="touch"] treechildren::-moz-tree-row {
   height: 2.4rem;
 }
+
+/* Multiline tree */
+treechildren::-moz-tree-row(multiline) {
+  height: 3.6rem;
+}
+treechildren::-moz-tree-colspan {
+  margin-top: 1.8rem;
+}
+treechildren::-moz-tree-cell(multiline) {
+  /* For some reason, both min-height and height are needed on Windows */
+  min-height: 1.8rem;
+  height: 1.8rem;
+}
+
+:root[uidensity="compact"] treechildren::-moz-tree-row(multiline) {
+  height: 3.2rem;
+}
+:root[uidensity="compact"] treechildren::-moz-tree-colspan {
+  margin-top: 1.6rem;
+}
+:root[uidensity="compact"] treechildren::-moz-tree-cell(multiline) {
+  min-height: 1.6rem;
+  height: 1.6rem;
+}
+
+:root[uidensity="touch"] treechildren::-moz-tree-row(multiline) {
+  height: 4.8rem;
+}
+:root[uidensity="touch"] treechildren::-moz-tree-colspan {
+  margin-top: 2.4rem;
+}
+:root[uidensity="touch"] treechildren::-moz-tree-cell(multiline) {
+  min-height: 2.4rem;
+  height: 2.4rem;
+}
diff --git a/mailnews/base/src/nsMsgDBView.cpp b/mailnews/base/src/nsMsgDBView.cpp
--- a/mailnews/base/src/nsMsgDBView.cpp
+++ b/mailnews/base/src/nsMsgDBView.cpp
@@ -46,16 +46,20 @@
 #include "mozilla/Attributes.h"
 #include "mozilla/dom/DataTransfer.h"
 #include "mozilla/mailnews/MimeHeaderParser.h"
 #include "nsTArray.h"
 #include "mozilla/intl/OSPreferences.h"
 #include "mozilla/intl/LocaleService.h"
 #include "mozilla/intl/AppDateTimeFormat.h"
 
+#include "nsIDocShell.h"
+#include "mozilla/dom/Document.h"
+#include "mozilla/Preferences.h"
+
 using namespace mozilla::mailnews;
 
 nsString nsMsgDBView::kHighestPriorityString;
 nsString nsMsgDBView::kHighPriorityString;
 nsString nsMsgDBView::kLowestPriorityString;
 nsString nsMsgDBView::kLowPriorityString;
 nsString nsMsgDBView::kNormalPriorityString;
 
@@ -122,16 +126,17 @@ NS_IMETHODIMP nsMsgDBViewService::Initia
 NS_IMPL_ADDREF(nsMsgDBView)
 NS_IMPL_RELEASE(nsMsgDBView)
 
 NS_INTERFACE_MAP_BEGIN(nsMsgDBView)
   NS_INTERFACE_MAP_ENTRY_AMBIGUOUS(nsISupports, nsIMsgDBView)
   NS_INTERFACE_MAP_ENTRY(nsIMsgDBView)
   NS_INTERFACE_MAP_ENTRY(nsIDBChangeListener)
   NS_INTERFACE_MAP_ENTRY(nsITreeView)
+  NS_INTERFACE_MAP_ENTRY(nsIMultilineTreeView)
   NS_INTERFACE_MAP_ENTRY(nsIJunkMailClassificationListener)
 NS_INTERFACE_MAP_END
 
 nsMsgDBView::nsMsgDBView() {
   // Member initializers and constructor code.
   m_sortValid = false;
   m_checkedCustomColumns = false;
   m_sortOrder = nsMsgViewSortOrder::none;
@@ -272,17 +277,17 @@ nsresult nsMsgDBView::AppendKeywordPrope
     *tagAdded = true;
     properties.Append(' ');
     properties.Append(selector);
   }
   return rv;
 }
 
 ///////////////////////////////////////////////////////////////////////////
-// nsITreeView Implementation Methods (and helper methods)
+// nsIMultilineTreeView Implementation Methods (and helper methods)
 ///////////////////////////////////////////////////////////////////////////
 
 static nsresult GetDisplayNameInAddressBook(const nsACString& emailAddress,
                                             nsAString& displayName) {
   nsresult rv;
   nsCOMPtr<nsIAbManager> abManager(
       do_GetService("@mozilla.org/abmanager;1", &rv));
   NS_ENSURE_SUCCESS(rv, rv);
@@ -1274,29 +1279,35 @@ nsMsgDBView::GetRowProperties(int32_t in
 
   rv = GetMsgHdrForViewIndex(index, getter_AddRefs(msgHdr));
 
   if (NS_FAILED(rv) || !msgHdr) {
     ClearHdrCache();
     return NS_MSG_INVALID_DBVIEW_INDEX;
   }
 
+  uint32_t flags;
+  msgHdr->GetFlags(&flags);
+  if (!(flags & nsMsgMessageFlags::Read))
+    properties.AppendLiteral(" unread");
+  else
+    properties.AppendLiteral(" read");
+
   nsCString keywordProperty;
   FetchRowKeywords(index, msgHdr, keywordProperty);
   bool tagAdded = false;
   if (!keywordProperty.IsEmpty()) {
     AppendKeywordProperties(keywordProperty, properties, &tagAdded);
   }
   if (tagAdded) {
     properties.AppendLiteral(" tagged");
   } else {
     properties.AppendLiteral(" untagged");
   }
 
-  uint32_t flags;
   msgHdr->GetFlags(&flags);
 
   if (!(flags & nsMsgMessageFlags::Read))
     properties.AppendLiteral(" unread");
   else
     properties.AppendLiteral(" read");
 
   // Give the custom column handlers a chance to style the row.
@@ -2050,16 +2061,19 @@ nsMsgDBView::CellTextForColumn(int32_t a
   }
 
   return NS_OK;
 }
 
 NS_IMETHODIMP
 nsMsgDBView::SetTree(mozilla::dom::XULTreeElement* tree) {
   mTree = tree;
+  // Don't generally switch this off, there are strange (fake?) trees passing
+  // through here.
+  // mIsMultiline = false;
   return NS_OK;
 }
 
 NS_IMETHODIMP
 nsMsgDBView::SetJSTree(nsIMsgJSTree* tree) {
   mJSTree = tree;
   return NS_OK;
 }
@@ -2159,18 +2173,139 @@ nsMsgDBView::CycleCell(int32_t row, nsTr
     }
     default:
       break;
   }
 
   return NS_OK;
 }
 
+NS_IMETHODIMP
+nsMsgDBView::GetColspanTextProperties(int32_t row, nsAString& props) {
+  nsresult rv;
+
+  nsCOMPtr<nsIMsgDBHdr> msgHdr;
+  rv = GetMsgHdrForViewIndex(row, getter_AddRefs(msgHdr));
+  if (NS_FAILED(rv) || !msgHdr) {
+    ClearHdrCache();
+    return NS_MSG_INVALID_DBVIEW_INDEX;
+  }
+
+  RefPtr<nsTreeColumns> cols = mTree->GetColumns();
+  if (!cols) return NS_OK;
+
+  nsTreeColumn* col;
+  for (col = cols->GetFirstColumn(); col; col = col->GetNext()) {
+    const nsAString& colID = col->GetId();
+    if (colID.EqualsLiteral("subjectCol")) {
+      rv = GetCellProperties(row, col, props);
+      NS_ENSURE_SUCCESS(rv, rv);
+
+      // For the purpose of icons, this counts as a subject column and is also a
+      // colspan.
+      props.AppendLiteral(" subjectCol colspan");
+
+      break;
+    }
+  }
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+nsMsgDBView::IsMultiline(bool* isMulti) {
+  *isMulti =
+      mozilla::Preferences::GetBool("mail.pane_config.multiline_all", false);
+  if (*isMulti) {
+    mIsMultiline = true;
+    if (mTree) {
+      RefPtr<nsTreeColumns> cols = mTree->GetColumns();
+      if (cols) {
+        nsTreeColumn* col;
+        for (col = cols->GetFirstColumn(); col; col = col->GetNext()) {
+          const nsAString& colID = col->GetId();
+          if (colID.EqualsLiteral("subjectCol")) {
+            RefPtr<mozilla::dom::Element> el = col->Element();
+            mozilla::IgnoredErrorResult rv1;
+            el->SetAttribute(u"hidden"_ns, u"true"_ns, rv1);
+            break;
+          }
+        }
+      }
+    }
+  } else {
+    // Whether we are multiline or not depends on the visibility of the Subject
+    // column.
+    *isMulti = mIsMultiline;
+    // This should not happen since the tree is set before calling
+    // IsMultiline().
+    if (!mTree) return NS_OK;
+    RefPtr<nsTreeColumns> cols = mTree->GetColumns();
+    if (!cols) return NS_OK;
+
+    // There are strange cases where we find no columns here, in this case
+    // we use the previous result.
+    nsTreeColumn* col;
+    for (col = cols->GetFirstColumn(); col; col = col->GetNext()) {
+      const nsAString& colID = col->GetId();
+      if (colID.EqualsLiteral("subjectCol")) {
+        RefPtr<mozilla::dom::Element> el = col->Element();
+        nsAutoString val;
+        el->GetAttribute(u"hidden"_ns, val);
+        mIsMultiline = val.EqualsLiteral("true");
+        break;
+      }
+    }
+  }
+
+  if (mIsMultiline) {
+    // Hide thread column, remove "primary" attribute and switch
+    // threading/grouping off.
+    nsCOMPtr<nsIMsgWindow> msgWindow(do_QueryReferent(mMsgWindowWeak));
+    nsCOMPtr<nsIDocShell> rootShell;
+    nsresult rv = msgWindow->GetRootDocShell(getter_AddRefs(rootShell));
+    NS_ENSURE_SUCCESS(rv, rv);
+
+    mozilla::IgnoredErrorResult rv1;
+    RefPtr<mozilla::dom::Element> el =
+        rootShell->GetDocument()->GetElementById(u"threadCol"_ns);
+    if (el) el->SetAttribute(u"hidden"_ns, u"true"_ns, rv1);
+    el = rootShell->GetDocument()->GetElementById(u"subjectCol"_ns);
+    if (el) el->RemoveAttribute(u"primary"_ns, rv1);
+    m_viewFlags &= ~(nsMsgViewFlagsType::kGroupBySort |
+                     nsMsgViewFlagsType::kThreadedDisplay);
+  }
+  *isMulti = mIsMultiline;
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+nsMsgDBView::AlignWith(int32_t row, nsTreeColumn* col, bool* alignWith) {
+  if (!IsValidIndex(row)) {
+    return NS_MSG_INVALID_DBVIEW_INDEX;
+  }
+
+  *alignWith = false;
+  const nsAString& colID = col->GetId();
+  if (colID.EqualsLiteral("senderCol") || colID.EqualsLiteral("recipientCol") ||
+      colID.EqualsLiteral("correspondentCol") ||
+      colID.EqualsLiteral("dateCol") || colID.EqualsLiteral("receivedCol"))
+    *alignWith = true;
+
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+nsMsgDBView::IsColspanCol(nsTreeColumn* col, bool* isImageCol) {
+  const nsAString& colID = col->GetId();
+  *isImageCol = colID.EqualsLiteral("subjectCol") ? true : false;
+  return NS_OK;
+}
+
 ///////////////////////////////////////////////////////////////////////////
-// end nsITreeView Implementation Methods
+// end nsIMultilineTreeView Implementation Methods
 ///////////////////////////////////////////////////////////////////////////
 
 NS_IMETHODIMP
 nsMsgDBView::Open(nsIMsgFolder* folder, nsMsgViewSortTypeValue sortType,
                   nsMsgViewSortOrderValue sortOrder,
                   nsMsgViewFlagsTypeValue viewFlags, int32_t* pCount) {
   m_viewFlags = viewFlags;
   m_sortOrder = sortOrder;
@@ -2316,16 +2451,17 @@ nsMsgDBView::OpenWithHdrs(nsIMsgEnumerat
 }
 
 NS_IMETHODIMP
 nsMsgDBView::Init(nsIMessenger* aMessengerInstance, nsIMsgWindow* aMsgWindow,
                   nsIMsgDBViewCommandUpdater* aCmdUpdater) {
   mMessengerWeak = do_GetWeakReference(aMessengerInstance);
   mMsgWindowWeak = do_GetWeakReference(aMsgWindow);
   mCommandUpdater = aCmdUpdater;
+  mIsMultiline = false;
   return NS_OK;
 }
 
 NS_IMETHODIMP
 nsMsgDBView::SetSuppressCommandUpdating(bool aSuppressCommandUpdating) {
   mSuppressCommandUpdating = aSuppressCommandUpdating;
   return NS_OK;
 }
diff --git a/mailnews/base/src/nsMsgDBView.h b/mailnews/base/src/nsMsgDBView.h
--- a/mailnews/base/src/nsMsgDBView.h
+++ b/mailnews/base/src/nsMsgDBView.h
@@ -95,26 +95,27 @@ class nsMsgDBViewService final : public 
  protected:
   ~nsMsgDBViewService(){};
 };
 
 // This is an abstract implementation class.
 // The actual view objects will be instances of sub-classes of this class.
 class nsMsgDBView : public nsIMsgDBView,
                     public nsIDBChangeListener,
-                    public nsITreeView,
+                    public nsIMultilineTreeView,
                     public nsIJunkMailClassificationListener {
  public:
   friend class nsMsgDBViewService;
   nsMsgDBView();
 
   NS_DECL_ISUPPORTS
   NS_DECL_NSIMSGDBVIEW
   NS_DECL_NSIDBCHANGELISTENER
   NS_DECL_NSITREEVIEW
+  NS_DECL_NSIMULTILINETREEVIEW
   NS_DECL_NSIJUNKMAILCLASSIFICATIONLISTENER
 
   nsMsgViewIndex GetInsertIndexHelper(nsIMsgDBHdr* msgHdr,
                                       nsTArray<nsMsgKey>& keys,
                                       nsCOMArray<nsIMsgFolder>* folders,
                                       nsMsgViewSortOrderValue sortOrder,
                                       nsMsgViewSortTypeValue sortType);
   int32_t SecondaryCompare(nsMsgKey key1, nsIMsgFolder* folder1, nsMsgKey key2,
@@ -144,16 +145,17 @@ class nsMsgDBView : public nsIMsgDBView,
   static nsString kOldMailString;
   static nsString kFutureDateString;
 
   RefPtr<mozilla::dom::XULTreeElement> mTree;
   nsCOMPtr<nsIMsgJSTree> mJSTree;
   nsCOMPtr<nsITreeSelection> mTreeSelection;
   // We cache this to determine when to push command status notifications.
   uint32_t mNumSelectedRows;
+  bool mIsMultiline;
   // Set when the message pane is collapsed.
   bool mSuppressMsgDisplay;
   bool mSuppressCommandUpdating;
   // Set when we're telling the outline a row is being removed. Used to
   // suppress msg loading during delete/move operations.
   bool mRemovingRow;
   bool mCommandsNeedDisablingBecauseOfSelection;
   bool mSuppressChangeNotification;
diff --git a/mailnews/mailnews.js b/mailnews/mailnews.js
--- a/mailnews/mailnews.js
+++ b/mailnews/mailnews.js
@@ -199,16 +199,17 @@ pref("mail.folder_widget.max_recent", 25
 // 0 the name param is never separated to multiple lines.
 pref("mail.strictly_mime.parm_folding", 1);
 pref("mail.label_ascii_only_mail_as_us_ascii", false);
 pref("mail.file_attach_binary", false);
 pref("mail.show_headers", 1);
 // some S/MIME parts are not external (but inline decrypted).
 pref("mailnews.p7m_external", false);
 pref("mail.pane_config.dynamic", 0);
+pref("mail.pane_config.multiline_all", false);
 pref("mail.addr_book.mapit_url.format", "chrome://messenger-region/locale/region.properties");
 pref("mail.addr_book.mapit_url.1.name", "chrome://messenger-region/locale/region.properties");
 pref("mail.addr_book.mapit_url.1.format", "chrome://messenger-region/locale/region.properties");
 pref("mail.addr_book.mapit_url.2.name", "chrome://messenger-region/locale/region.properties");
 pref("mail.addr_book.mapit_url.2.format", "chrome://messenger-region/locale/region.properties");
 pref("mail.addr_book.mapit_url.3.name", "chrome://messenger-region/locale/region.properties");
 pref("mail.addr_book.mapit_url.3.format", "chrome://messenger-region/locale/region.properties");
 pref("mail.addr_book.mapit_url.4.name", "chrome://messenger-region/locale/region.properties");
