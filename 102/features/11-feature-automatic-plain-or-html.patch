# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1654585058 -7200
# Parent  21d80264865318b6aaf9249dfa5200f227dd97bd
Feature: Add automatic plain or HTML send option after bug 1727493.

diff --git a/mail/components/compose/content/MsgComposeCommands.js b/mail/components/compose/content/MsgComposeCommands.js
--- a/mail/components/compose/content/MsgComposeCommands.js
+++ b/mail/components/compose/content/MsgComposeCommands.js
@@ -6591,16 +6591,17 @@ function PriorityMenuSelect(target) {
  * Initialise the send format menu using the current gMsgCompose.compFields.
  */
 function initSendFormatMenu() {
   let formatToId = new Map([
     [Ci.nsIMsgCompSendFormat.PlainText, "format_plain"],
     [Ci.nsIMsgCompSendFormat.HTML, "format_html"],
     [Ci.nsIMsgCompSendFormat.Both, "format_both"],
     [Ci.nsIMsgCompSendFormat.Auto, "format_auto"],
+    [Ci.nsIMsgCompSendFormat.PlainOrHTML, "format_plain_or_html"],
   ]);
 
   let sendFormat = gMsgCompose.compFields.deliveryFormat;
 
   if (sendFormat == Ci.nsIMsgCompSendFormat.Unset) {
     sendFormat = Services.prefs.getIntPref(
       "mail.default_send_format",
       Ci.nsIMsgCompSendFormat.Auto
@@ -8749,30 +8750,36 @@ nsAttachmentOpener.prototype = {
  *   HTML or Both (never Auto or Unset).
  */
 function determineSendFormat() {
   if (!gMsgCompose.composeHTML) {
     return Ci.nsIMsgCompSendFormat.PlainText;
   }
 
   let sendFormat = gMsgCompose.compFields.deliveryFormat;
-  if (sendFormat != Ci.nsIMsgCompSendFormat.Auto) {
+  if (
+    sendFormat != Ci.nsIMsgCompSendFormat.Auto &&
+    sendFormat != Ci.nsIMsgCompSendFormat.PlainOrHTML
+  ) {
     return sendFormat;
   }
 
   // Auto downgrade if safe to do so.
   let convertible;
   try {
     convertible = gMsgCompose.bodyConvertible();
   } catch (ex) {
     return Ci.nsIMsgCompSendFormat.Both;
   }
-  return convertible == Ci.nsIMsgCompConvertible.Plain
-    ? Ci.nsIMsgCompSendFormat.PlainText
-    : Ci.nsIMsgCompSendFormat.Both;
+  if (convertible == Ci.nsIMsgCompConvertible.Plain) {
+    return Ci.nsIMsgCompSendFormat.PlainText;
+  }
+  return sendFormat == Ci.nsIMsgCompSendFormat.Auto
+    ? Ci.nsIMsgCompSendFormat.Both
+    : Ci.nsIMsgCompSendFormat.HTML;
 }
 
 /**
  * Expands mailinglists found in the recipient fields.
  */
 function expandRecipients() {
   gMsgCompose.expandMailingLists();
 }
diff --git a/mail/components/compose/content/messengercompose.xhtml b/mail/components/compose/content/messengercompose.xhtml
--- a/mail/components/compose/content/messengercompose.xhtml
+++ b/mail/components/compose/content/messengercompose.xhtml
@@ -1745,16 +1745,17 @@
                     accesskey="&returnReceiptMenu.accesskey;"
                     checked="false"
                     command="cmd_toggleReturnReceipt"/>
           <menuitem id="dsnMenu" type="checkbox" label="&dsnMenu.label;" accesskey="&dsnMenu.accesskey;" oncommand="ToggleDSN(event.target)"/>
           <menuseparator/>
           <menu id="outputFormatMenu" data-l10n-id="compose-send-format-menu">
             <menupopup id="outputFormatMenuPopup">
               <menuitem type="radio" name="output_format" id="format_auto" data-l10n-id="compose-send-auto-menu-item"/>
+              <menuitem type="radio" name="output_format" id="format_plain_or_html" data-l10n-id="compose-send-plain-or-html-menu-item"/>
               <menuitem type="radio" name="output_format" id="format_both" data-l10n-id="compose-send-both-menu-item"/>
               <menuitem type="radio" name="output_format" id="format_html" data-l10n-id="compose-send-html-menu-item"/>
               <menuitem type="radio" name="output_format" id="format_plain" data-l10n-id="compose-send-plain-menu-item"/>
             </menupopup>
           </menu>
           <menu id="priorityMenu" label="&priorityMenu.label;" accesskey="&priorityMenu.accesskey;" onpopupshowing="updatePriorityMenu();" oncommand="PriorityMenuSelect(event.target);">
             <menupopup id="priorityMenuPopup">
               <menuitem type="radio" name="priority" label="&highestPriorityCmd.label;" accesskey="&highestPriorityCmd.accesskey;" value="Highest" id="priority_highest"/>
diff --git a/mail/components/extensions/parent/ext-compose.js b/mail/components/extensions/parent/ext-compose.js
--- a/mail/components/extensions/parent/ext-compose.js
+++ b/mail/components/extensions/parent/ext-compose.js
@@ -22,16 +22,17 @@ let { MsgUtils } = ChromeUtils.import(
 // eslint-disable-next-line mozilla/reject-importGlobalProperties
 Cu.importGlobalProperties(["File", "FileReader"]);
 
 const deliveryFormats = [
   { id: Ci.nsIMsgCompSendFormat.Auto, value: "auto" },
   { id: Ci.nsIMsgCompSendFormat.PlainText, value: "plaintext" },
   { id: Ci.nsIMsgCompSendFormat.HTML, value: "html" },
   { id: Ci.nsIMsgCompSendFormat.Both, value: "both" },
+  { id: Ci.nsIMsgCompSendFormat.PlainOrHTML, value: "both" },
 ];
 
 async function parseComposeRecipientList(
   list,
   requireSingleValidEmail = false
 ) {
   if (!list) {
     return list;
diff --git a/mail/components/preferences/compose.inc.xhtml b/mail/components/preferences/compose.inc.xhtml
--- a/mail/components/preferences/compose.inc.xhtml
+++ b/mail/components/preferences/compose.inc.xhtml
@@ -173,16 +173,22 @@
       <radiogroup class="indent"
                   preference="mail.default_send_format">
         <radio value="0"
                aria-describedby="composeSendAutomaticDescription"
                data-l10n-id="compose-send-automatic-option" />
         <description id="composeSendAutomaticDescription"
                      class="indent tip-caption"
                      data-l10n-id="compose-send-automatic-description" />
+        <radio value="5"
+               aria-describedby="composeSendPlainOrHTMLDescription"
+               data-l10n-id="compose-send-plain-or-html-option" />
+        <description id="composeSendPlainOrHTMLDescription"
+                     class="indent tip-caption"
+                     data-l10n-id="compose-send-plain-or-html-description" />
         <radio value="3"
                aria-describedby="composeSendBothDescription"
                data-l10n-id="compose-send-both-option" />
         <description id="composeSendBothDescription"
                      class="indent tip-caption"
                      data-l10n-id="compose-send-both-description" />
         <radio value="2"
                aria-describedby="composeSendHTMLDescription"
diff --git a/mail/locales/en-US/messenger/messengercompose/messengercompose.ftl b/mail/locales/en-US/messenger/messengercompose/messengercompose.ftl
--- a/mail/locales/en-US/messenger/messengercompose/messengercompose.ftl
+++ b/mail/locales/en-US/messenger/messengercompose/messengercompose.ftl
@@ -7,16 +7,20 @@
 compose-send-format-menu =
     .label = Sending Format
     .accesskey = F
 
 compose-send-auto-menu-item =
     .label = Automatic
     .accesskey = A
 
+compose-send-plain-or-html-menu-item =
+    .label = Plain Text or HTML
+    .accesskey = O
+
 compose-send-both-menu-item =
     .label = Both HTML and Plain Text
     .accesskey = B
 
 compose-send-html-menu-item =
     .label = Only HTML
     .accesskey = H
 
diff --git a/mail/locales/en-US/messenger/preferences/preferences.ftl b/mail/locales/en-US/messenger/preferences/preferences.ftl
--- a/mail/locales/en-US/messenger/preferences/preferences.ftl
+++ b/mail/locales/en-US/messenger/preferences/preferences.ftl
@@ -578,16 +578,21 @@ default-format-label =
 
 compose-send-format-title = Sending Format
 
 compose-send-automatic-option =
     .label = Automatic
 
 compose-send-automatic-description = If no styling is used in the message, send Plain Text. Otherwise, send HTML with a Plain Text fallback.
 
+compose-send-plain-or-html-option =
+    .label = Plain Text or HTML
+
+compose-send-plain-or-html-description = If no styling is used in the message, send Plain Text. Otherwise, send HTML only.
+
 compose-send-both-option =
     .label = Both HTML and Plain Text
 
 compose-send-both-description = The recipientâ€™s email application will determine which version to show.
 
 compose-send-html-option =
     .label = Only HTML
 
diff --git a/mail/modules/MailMigrator.jsm b/mail/modules/MailMigrator.jsm
--- a/mail/modules/MailMigrator.jsm
+++ b/mail/modules/MailMigrator.jsm
@@ -635,19 +635,19 @@ var MailMigrator = {
             break;
           case 1:
             // Was PlainText only. Keep as plain text. Note, autoDowngrade has
             // no effect on this option.
             sendFormat = Ci.nsIMsgCompSendFormat.PlainText;
             break;
           case 2:
             // Was HTML. Keep as HTML if autoDowngrade was false, otherwise use
-            // the Auto default.
+            // PlainOrHTML.
             sendFormat = autoDowngrade
-              ? Ci.nsIMsgCompSendFormat.Auto
+              ? Ci.nsIMsgCompSendFormat.PlainOrHTML
               : Ci.nsIMsgCompSendFormat.HTML;
             break;
           case 3:
             // Was Both. If autoDowngrade was true, this is the same as the
             // new Auto default. Otherwise, keep as Both.
             sendFormat = autoDowngrade
               ? Ci.nsIMsgCompSendFormat.Auto
               : Ci.nsIMsgCompSendFormat.Both;
diff --git a/mailnews/compose/public/nsIMsgCompose.idl b/mailnews/compose/public/nsIMsgCompose.idl
--- a/mailnews/compose/public/nsIMsgCompose.idl
+++ b/mailnews/compose/public/nsIMsgCompose.idl
@@ -55,16 +55,18 @@ interface nsIMsgCompSendFormat : nsISupp
     const long PlainText = 1;
     /* Only send a HTML part. */
     const long HTML = 2;
     /* Send both the HTML part and the plain text alternative part. */
     const long Both = 3;
     /* An unset value, to be set with mail.default_send_format on loading the
      * message in the compose window. */
     const long Unset = 4;
+    /* Send either a plain text or HTML part, determination as for Auto. */
+    const long PlainOrHTML = 5;
 };
 
 [scriptable, uuid(9638af92-1dd1-11b2-bef1-ca5fee0abc62)]
 interface nsIMsgCompConvertible : nsISupports /*ToTXT*/ {
     const long Plain = 1;  // Like 4.x: Only <html>, <p>, <br>, ...
     const long Yes = 2;  // *Minor* alterations of the look: <ol>, <dd>, ...
     const long Altering = 3;  /* Look altered: <strong>, <i>, <h1>, ...
                                  Can be expressed in plaintext, but not in
diff --git a/mailnews/compose/src/nsMsgCompFields.cpp b/mailnews/compose/src/nsMsgCompFields.cpp
--- a/mailnews/compose/src/nsMsgCompFields.cpp
+++ b/mailnews/compose/src/nsMsgCompFields.cpp
@@ -358,16 +358,17 @@ NS_IMETHODIMP nsMsgCompFields::SetAttach
 }
 
 NS_IMETHODIMP nsMsgCompFields::SetDeliveryFormat(int32_t value) {
   switch (value) {
     case nsIMsgCompSendFormat::Auto:
     case nsIMsgCompSendFormat::PlainText:
     case nsIMsgCompSendFormat::HTML:
     case nsIMsgCompSendFormat::Both:
+    case nsIMsgCompSendFormat::PlainOrHTML:
       m_deliveryFormat = value;
       break;
     case nsIMsgCompSendFormat::Unset:
     default:
       m_deliveryFormat = nsIMsgCompSendFormat::Unset;
   }
 
   return NS_OK;
diff --git a/mailnews/mailnews.js b/mailnews/mailnews.js
--- a/mailnews/mailnews.js
+++ b/mailnews/mailnews.js
@@ -266,17 +266,17 @@ pref("mail.html_compose",               
 // this will show up in the address picker in the compose window
 // examples: "X-Face" or "Approved,X-No-Archive"
 pref("mail.compose.other.header", "");
 pref("mail.compose.autosave", true);
 // interval in minutes
 pref("mail.compose.autosaveinterval", 5);
 pref("mail.compose.default_to_paragraph", false);
 
-// 0=auto, 1=plain, 2=html, 3=both
+// 0=auto, 1=plain, 2=html, 3=both, 5=plain or html; note: 4=unset.
 pref("mail.default_send_format", 0);
 // 0: Never 1: Always 2: Ask me
 pref("mail.mdn.report.not_in_to_cc", 2);
 // 0: Never 1: Always 2: Ask me
 pref("mail.mdn.report.outside_domain", 2);
 // 0: Never 1: Always 2: Ask me 3: Denial
 pref("mail.mdn.report.other", 2);
 // 0: Inbox/filter 1: Sent folder
