# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1711492741 -3600
# Parent  24bdb667db466aaff5f57ffb046677aa1f6404bc
Misc: Disable outdated Betterbird language packs.

diff --git a/toolkit/components/extensions/Extension.sys.mjs b/toolkit/components/extensions/Extension.sys.mjs
--- a/toolkit/components/extensions/Extension.sys.mjs
+++ b/toolkit/components/extensions/Extension.sys.mjs
@@ -3915,8 +3915,15 @@ export class Langpack extends ExtensionD
     if (/langpack.*thunderbird/.test(this.resourceURL)) {
       Cu.reportError(`Langpack: Ignoring Thunderbird language pack ${this.resourceURL}`);
       return;
     }
+    // With three digits we're good for the next 75 years ;-)
+    let majorVersion = AppConstants.MOZ_APP_VERSION.substring(0,4);
+    if (/langpack.*betterbird/.test(this.resourceURL) &&
+        !this.manifestCacheKey[1].startsWith(majorVersion)) {
+      Cu.reportError(`Compat: Ignoring outdated Betterbird language pack ${this.resourceURL}`);
+      return false;
+    }
     if (this.startupData.chromeEntries.length) {
       const manifestURI = Services.io.newURI(
         "manifest.json",
         null,
diff --git a/toolkit/mozapps/extensions/internal/XPIDatabase.sys.mjs b/toolkit/mozapps/extensions/internal/XPIDatabase.sys.mjs
--- a/toolkit/mozapps/extensions/internal/XPIDatabase.sys.mjs
+++ b/toolkit/mozapps/extensions/internal/XPIDatabase.sys.mjs
@@ -11,8 +11,10 @@
  */
 
 /* eslint "valid-jsdoc": [2, {requireReturn: false, requireReturnDescription: false, prefer: {return: "returns"}}] */
 
+import { AppConstants } from "resource://gre/modules/AppConstants.sys.mjs";
+
 import { XPCOMUtils } from "resource://gre/modules/XPCOMUtils.sys.mjs";
 
 import { XPIExports } from "resource://gre/modules/addons/XPIExports.sys.mjs";
 
@@ -686,8 +688,15 @@ export class AddonInternal {
       // Declare Thunderbird language packs incompatible.
       Cu.reportError(`Compat: Ignoring Thunderbird language pack ${this.id}`);
       return false;
     }
+    // With three digits we're good for the next 75 years ;-)
+    let majorVersion = AppConstants.MOZ_APP_VERSION.substring(0,4);
+    if (this.type == "locale" && /langpack.*betterbird/.test(this.id) &&
+        !this.version.startsWith(majorVersion)) {
+      Cu.reportError(`Compat: Ignoring outdated Betterbird language pack ${this.id}`);
+      return false;
+    }
 
     // Only extensions and dictionaries can be compatible by default; themes
     // and language packs always use strict compatibility checking.
     // Dictionaries are compatible by default unless requested by the dictinary.
