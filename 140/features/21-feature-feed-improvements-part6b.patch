# HG changeset patch
# User alta88@fixall.com
# Date 1740625508 25200
# Parent  9afda28c2cdb50649c216ed4c2dc25fb0a9cd5e7
Feed Subscribe dialog enhancements
- Refactor dialog using html (except for <tree>, <menulist>, <button>).
- Fix overflowing fields in edge cases.
- Use prefs instead of hardcoding Learn More and Validate site urls.

Authored by Alta88 and contributed to the Betterbird Project.
See https://github.com/Betterbird/thunderbird-patches/blob/main/LICENSE for license details.
All uses require attribution to the Author.

diff --git a/mail/themes/shared/mail/feedSubscribe.css b/mail/themes/shared/mail/feedSubscribe.css
--- a/mail/themes/shared/mail/feedSubscribe.css
+++ b/mail/themes/shared/mail/feedSubscribe.css
@@ -6,8 +6,22 @@
   min-width: 20em;
   min-height: 40em;
 }
 
+#contentPane {
+  display: flex;
+  flex-direction: column;
+  flex: 1;
+}
+
+#learnMore {
+  align-self: end;
+}
+
+#folderTree {
+  margin: 0;
+}
+
 treechildren::-moz-tree-image {
   width: 16px;
   height: 16px;
   -moz-context-properties: fill, fill-opacity, stroke;
@@ -60,19 +74,31 @@ treechildren::-moz-tree-image(feedTypeCo
   fill: var(--color-red-60);
   stroke: var(--color-amber-30);
 }
 
-#folderNameCol {
-  flex: 2 2;
-}
-
 #feedTypeCol {
   width: 138px;
 }
 
-#rssFeedInfoBox {
+a[disabled],
+fieldset:disabled *,
+label:has(:disabled) {
+  color: var(--input-color);
+  opacity: 0.4;
+  cursor: default;
+}
+
+[collapsed] {
+  visibility: hidden;
+}
+
+.inline-flex {
+  flex: 1;
+}
+
+#feedInfoBox {
   border: 1px solid ThreeDShadow;
-  margin: 4px;
+  margin-top: 4px;
   padding-top: 4px;
   background-color: rgba(0, 0, 0, 0.05);
 
   :root[lwt-tree] & {
@@ -83,16 +109,56 @@ treechildren::-moz-tree-image(feedTypeCo
     background-color: rgba(255, 255, 255, 0.05);
   }
 }
 
-#locationValidate[disabled] {
-  color: GrayText !important;
-  cursor: default;
+#feedDetailGrid {
+  display: grid;
+  grid-template-columns: min-content auto;
+  grid-gap: 2px;
+  align-items: center;
+}
+
+#feedDetailGrid > label {
+  justify-self: end;
+  text-wrap: nowrap;
+}
+
+/* #nameValue, #locationValue, #selectFolderValue */
+#feedDetailGrid .input-inline {
+  text-overflow: ellipsis;
+  flex: 1;
+}
+
+#locationBox, #folderBox, #statusBox, #actionButtonsBox {
+  display: flex;
+  align-items: center;
+  /* No ellipsis without this! */
+  min-width: 0;
+}
+
+#locationValidate,
+#createSubFolderLabel {
+  margin-inline: 4px;
+}
+
+#selectFolder {
+  overflow-x: auto;
+}
+
+#feedOptionsGrid {
+  display: grid;
+  grid-gap: 8px;
+  padding-block: 4px;
+}
+
+#updateBox {
+  display: inline-flex;
+  align-items: center;
+  flex-wrap: wrap;
+  border: none;
+  margin: 0;
+  padding: 0;
 }
 
 #autotagPrefix {
   max-width: 15em;
 }
-
-#statusContainerBox {
-  height: 2.4em;
-}
diff --git a/mailnews/extensions/newsblog/FeedUtils.sys.mjs b/mailnews/extensions/newsblog/FeedUtils.sys.mjs
--- a/mailnews/extensions/newsblog/FeedUtils.sys.mjs
+++ b/mailnews/extensions/newsblog/FeedUtils.sys.mjs
@@ -107,8 +107,18 @@ export var FeedUtils = {
 
   FEED_ACCOUNT_TYPES: ["rss"],
 
   /**
+   * The defaultView FeedSubscriptions object in the Subscribe dialog window.
+   *
+   * @returns {object} FeedSubscriptions
+   */
+  get FeedSubscriptions() {
+    return Services.wm.getMostRecentWindow("Mail:News-BlogSubscriptions")
+      ?.FeedSubscriptions;
+  },
+
+  /**
    * Get all rss account servers rootFolders.
    *
    * @returns {nsIMsgIncomingServer}[] - Array of servers (empty array if none).
    */
@@ -485,17 +495,17 @@ export var FeedUtils = {
         `pauseFeedFolderUpdates: enabled ${!aPause}, url ${feedUrl}`
       );
     }
 
-    const win = Services.wm.getMostRecentWindow("Mail:News-BlogSubscriptions");
-    if (win) {
-      const curItem = win.FeedSubscriptions.mView.currentItem;
-      win.FeedSubscriptions.refreshSubscriptionView();
+    // Update Subscribe dialog, if open.
+    if (this.FeedSubscriptions) {
+      const curItem = this.FeedSubscriptions.mView.currentItem;
+      this.FeedSubscriptions.refreshSubscriptionView();
       if (curItem.container) {
-        win.FeedSubscriptions.selectFolder(curItem.folder);
+        this.FeedSubscriptions.selectFolder(curItem.folder);
       } else {
         const feed = new lazy.Feed(curItem.url, curItem.parentFolder);
-        win.FeedSubscriptions.selectFeed(feed);
+        this.FeedSubscriptions.selectFeed(feed);
       }
     }
   },
 
@@ -584,12 +594,10 @@ export var FeedUtils = {
     aFeed.quickMode = quickMode;
     aFeed.options = options;
     this.addFeed(aFeed);
 
-    const win = Services.wm.getMostRecentWindow("Mail:News-BlogSubscriptions");
-    if (win) {
-      win.FeedSubscriptions.refreshSubscriptionView(aFeed.folder, aNewUrl);
-    }
+    // Update Subscribe dialog, if open.
+    this.FeedSubscriptions?.refreshSubscriptionView(aFeed.folder, aNewUrl);
 
     return true;
   },
 
@@ -884,12 +892,10 @@ export var FeedUtils = {
     this[aFolder.server.serverURI][aUrl].status[aProperty] = aValue;
 
     Services.obs.notifyObservers(aFolder, "folder-properties-changed");
 
-    const win = Services.wm.getMostRecentWindow("Mail:News-BlogSubscriptions");
-    if (win) {
-      win.FeedSubscriptions?.mView?.tree?.invalidate();
-    }
+    // Update Subscribe dialog, if open.
+    this.FeedSubscriptions?.mView?.tree?.invalidate();
   },
 
   /**
    * The default is true. If the user sets to false, the favicon cache will be
@@ -1913,17 +1919,10 @@ export var FeedUtils = {
           // This is particularly nice if we just finished subscribing
           // to a feed URL that the operating system gave us.
           Services.obs.notifyObservers(feed.folder, "folder-attention");
 
-          // Check for an existing feed subscriptions window and update it.
-          const subscriptionsWindow = Services.wm.getMostRecentWindow(
-            "Mail:News-BlogSubscriptions"
-          );
-          if (subscriptionsWindow) {
-            subscriptionsWindow.FeedSubscriptions.FolderListener.folderAdded(
-              feed.folder
-            );
-          }
+          // Update Subscribe dialog, if open.
+          FeedUtils.FeedSubscriptions?.FolderListener.folderAdded(feed.folder);
         } else if (feed && feed.url && feed.server) {
           // Non success.  Remove intermediate traces from the feeds database.
           FeedUtils.deleteFeed(feed);
         }
@@ -1967,8 +1966,12 @@ export var FeedUtils = {
             FeedUtils.setStatus(feed.folder, feed.url, "enabled", false);
             FeedUtils.log.warn(
               `downloaded: updates disabled due to error on url ${feed.url}`
             );
+            // Update Subscribe dialog, if open.
+            FeedUtils.FeedSubscriptions?.updateFeedData(
+              FeedUtils.FeedSubscriptions.mView.currentItem
+            );
           }
         }
 
         if (!this.mSubscribeMode) {
@@ -2162,8 +2165,20 @@ ChromeUtils.defineLazyGetter(FeedUtils, 
     "chrome://messenger/locale/prefs.properties"
   );
 });
 
+ChromeUtils.defineLazyGetter(FeedUtils, "stringsBrand", function () {
+  return Services.strings.createBundle(
+    "chrome://branding/locale/brand.properties"
+  );
+});
+
+ChromeUtils.defineLazyGetter(FeedUtils, "stringsSubFolder", function () {
+  return Services.strings.createBundle(
+    "chrome://messenger/locale/imapMsgs.properties"
+  );
+});
+
 ChromeUtils.defineLazyGetter(FeedUtils, "stringsMessenger", function () {
   return Services.strings.createBundle(
     "chrome://messenger/locale/messenger.properties"
   );
diff --git a/mailnews/extensions/newsblog/feed-subscriptions.js b/mailnews/extensions/newsblog/feed-subscriptions.js
--- a/mailnews/extensions/newsblog/feed-subscriptions.js
+++ b/mailnews/extensions/newsblog/feed-subscriptions.js
@@ -44,9 +44,9 @@ var FeedSubscriptions = {
     return tabmail?.currentAbout3Pane?.folderPane;
   },
 
   get mTree() {
-    return document.getElementById("rssSubscriptionsList");
+    return document.getElementById("folderTree");
   },
 
   mFeedContainers: [],
   mRSSServer: null,
@@ -102,9 +102,9 @@ var FeedSubscriptions = {
     // For observe notices.
     Services.ww.registerNotification(this);
 
     // Set up some strings.
-    document.getElementById("createSubFolder").label =
+    document.getElementById("createSubFolderLabel").lastChild.textContent =
       FeedUtils.stringsSubFolder.GetStringFromName("imapAclCreateRight");
 
     const deleteFolder = document.getElementById("deleteFolder");
     deleteFolder.setAttribute("folderLabel", deleteFolder.label);
@@ -1107,10 +1107,13 @@ var FeedSubscriptions = {
     if (isFeed) {
       // A feed item.  Set the feed location and title info.
       nameValue.value = aItem.name;
       locationValue.value = aItem.url;
-      locationValidate.removeAttribute("collapsed");
-      locationValidate.disabled = aItem.url.startsWith("file:");
+      locationValidate.hidden = false;
+      locationValidate.toggleAttribute(
+        "disabled",
+        !aItem.url?.startsWith("http")
+      );
 
       // Root the location picker to the news & blogs server.
       server = aItem.parentFolder.server;
       displayFolder = aItem.parentFolder;
@@ -1118,9 +1121,9 @@ var FeedSubscriptions = {
       // A folder/container item.
       nameValue.value = "";
       nameValue.disabled = true;
       locationValue.value = "";
-      locationValidate.setAttribute("collapsed", true);
+      locationValidate.hidden = true;
 
       server = aItem.folder.server;
       displayFolder = aItem.folder;
     }
@@ -1138,35 +1141,37 @@ var FeedSubscriptions = {
 
     // Update items.
     const updateEnabled = document.getElementById("updateEnabled");
     const updateValue = document.getElementById("updateValue");
-    const biffUnits = document.getElementById("biffUnits");
+    const updateBox = document.getElementById("updateBox");
+    const biffMinutes = document.getElementById("biffMinutes");
+    const biffDays = document.getElementById("biffDays");
     const recommendedUnits = document.getElementById("recommendedUnits");
     const recommendedUnitsVal = document.getElementById("recommendedUnitsVal");
     const updates = aItem.options
       ? aItem.options.updates
       : FeedUtils._optionsDefault.updates;
 
     updateEnabled.checked = updates.enabled;
-    updateValue.disabled = !updateEnabled.checked || isFolder;
-    biffUnits.disabled = !updateEnabled.checked || isFolder;
-    biffUnits.value = updates.updateUnits;
+    updateBox.disabled = !updateEnabled.checked || isFolder;
+    updates.updateUnits == "d"
+      ? (biffDays.checked = true)
+      : (biffMinutes.checked = true);
+
     const minutes =
-      updates.updateUnits == FeedUtils.kBiffUnitsMinutes
-        ? updates.updateMinutes
-        : updates.updateMinutes / (24 * 60);
+      updates.updateUnits == FeedUtils.kBiffUnitsDays
+        ? updates.updateMinutes / (24 * 60)
+        : updates.updateMinutes;
     updateValue.value = Number(minutes);
     if (isFeed) {
-      recommendedUnitsVal.value = this.getUpdateMinutesRec(updates);
+      recommendedUnitsVal.textContent = this.getUpdateMinutesRec(updates);
     } else {
-      recommendedUnitsVal.value = "";
+      recommendedUnitsVal.textContent = "";
     }
 
-    const hideRec = recommendedUnitsVal.value == "";
+    const hideRec = !recommendedUnitsVal.textContent;
     recommendedUnits.hidden = hideRec;
-    recommendedUnits.disabled = updateValue.disabled;
     recommendedUnitsVal.hidden = hideRec;
-    recommendedUnitsVal.disabled = updateValue.disabled;
 
     // Autotag items.
     const autotagEnable = document.getElementById("autotagEnable");
     const autotagUsePrefix = document.getElementById("autotagUsePrefix");
@@ -1289,42 +1294,43 @@ var FeedSubscriptions = {
       this.moveCopyFeed(seln.currentIndex, newParentIndex, "move");
     }
   },
 
-  setSummary(aChecked) {
+  setSummary(aNode) {
     const item = this.mView.currentItem;
     if (!item || !item.folder) {
       // Not a folder.
       return;
     }
 
+    // Intent is to add a feed to the account or a folder, so return.
+    if (document.getElementById("locationValue").value) {
+      return;
+    }
+
+    const checked = aNode.checked;
     if (item.folder.isServer) {
-      if (document.getElementById("locationValue").value) {
-        // Intent is to add a feed/folder to the account, so return.
-        return;
-      }
-
       // An account folder.  If it changes, all non feed containing subfolders
       // need to be updated with the new default.
-      item.folder.server.setBoolValue("quickMode", aChecked);
+      item.folder.server.setBoolValue("quickMode", checked);
       this.FolderListener.folderAdded(item.folder);
     } else if (!FeedUtils.getFeedUrlsInFolder(item.folder)) {
       // Not a folder with feeds.
       return;
     } else {
       const feedsInFolder = this.getFeedsInFolder(item.folder);
       // Update the feeds database, for each feed in the folder.
       feedsInFolder.forEach(function (feed) {
-        feed.quickMode = aChecked;
+        feed.quickMode = checked;
       });
       // Update the folder's feeds properties in the tree map.
       item.children.forEach(function (feed) {
-        feed.quickMode = aChecked;
+        feed.quickMode = checked;
       });
     }
 
     // Update the folder in the tree map.
-    item.quickMode = aChecked;
+    item.quickMode = checked;
     const message = FeedUtils.strings.GetStringFromName(
       "subscribe-feedUpdated"
     );
     this.updateStatusItem("statusText", message);
@@ -1339,9 +1345,9 @@ var FeedSubscriptions = {
     const isServer = item.folder && item.folder.isServer;
     const isFolder = item.folder && !item.folder.isServer;
     const updateEnabled = document.getElementById("updateEnabled");
     const updateValue = document.getElementById("updateValue");
-    const biffUnits = document.getElementById("biffUnits");
+    const updateBox = document.getElementById("updateBox");
     const autotagEnable = document.getElementById("autotagEnable");
     const autotagUsePrefix = document.getElementById("autotagUsePrefix");
     const autotagPrefix = document.getElementById("autotagPrefix");
     if (
@@ -1349,10 +1355,9 @@ var FeedSubscriptions = {
       (isServer && document.getElementById("locationValue").value)
     ) {
       // Intend to subscribe a feed to a folder, a value must be in the url
       // field. Update states for addFeed() and return.
-      updateValue.disabled = !updateEnabled.checked;
-      biffUnits.disabled = !updateEnabled.checked;
+      updateBox.disabled = !updateEnabled.checked;
       autotagUsePrefix.disabled = !autotagEnable.checked;
       autotagPrefix.disabled =
         autotagUsePrefix.disabled || !autotagUsePrefix.checked;
       return;
@@ -1389,16 +1394,21 @@ var FeedSubscriptions = {
         return;
       }
       case "updateEnabled":
       case "updateValue":
-      case "biffUnits": {
+      case "biffMinutes":
+      case "biffDays": {
         item.options.updates.enabled = updateEnabled.checked;
+        const biffUnitsNode = updateBox.querySelector(
+          "[name='biffUnits']:checked"
+        );
+        updateValue.value = Math.max(updateValue.min, updateValue.value);
         const minutes =
-          biffUnits.value == FeedUtils.kBiffUnitsMinutes
-            ? updateValue.value
-            : updateValue.value * 24 * 60;
+          biffUnitsNode.value == FeedUtils.kBiffUnitsDays
+            ? updateValue.value * 24 * 60
+            : updateValue.value;
         item.options.updates.updateMinutes = Number(minutes);
-        item.options.updates.updateUnits = biffUnits.value;
+        item.options.updates.updateUnits = biffUnitsNode.value;
         break;
       }
       case "autotagEnable":
         item.options.category.enabled = aNode.checked;
@@ -1429,9 +1439,9 @@ var FeedSubscriptions = {
         this.mView.selection.tree.invalidateRow(
           this.mView.selection.currentIndex
         );
       }
-      if (["biffUnits", "updateValue"].includes(aNode.id)) {
+      if (["biffMinutes", "biffDays", "updateValue"].includes(aNode.id)) {
         FeedUtils.setStatus(
           item.parentFolder,
           item.url,
           "updateMinutes",
@@ -1448,14 +1458,15 @@ var FeedSubscriptions = {
   },
 
   getUpdateMinutesRec(aUpdates) {
     // Assume the parser has stored correct/valid values for the spec. If the
-    // feed doesn't use any of these tags, updatePeriod will be null.
-    if (aUpdates.updatePeriod == null) {
+    // feed doesn't use any of these tags, updatePeriod will be empty.
+    if (!aUpdates.updatePeriod) {
       return "";
     }
 
-    const biffUnits = document.getElementById("biffUnits").value;
+    const biffUnitsNode = document.querySelector("[name='biffUnits']:checked");
+    const biffUnits = biffUnitsNode?.value ?? FeedUtils.kBiffUnitsMinutes;
     const units = biffUnits == FeedUtils.kBiffUnitsDays ? 1 : 24 * 60;
     const frequency = aUpdates.updateFrequency;
     let val;
     switch (aUpdates.updatePeriod) {
@@ -1482,8 +1493,13 @@ var FeedSubscriptions = {
     return val ? Math.round(val * 1000) / 1000 : "";
   },
 
   onKeyPress(aEvent) {
+    if (aEvent.keyCode == aEvent.DOM_VK_ESCAPE) {
+      // ESC hit, prepare to close.
+      this.onDialogAccept();
+      return;
+    }
     if (aEvent.target.id == "subscriptionsDialog") {
       // Close button.
       return;
     }
@@ -1572,12 +1588,9 @@ var FeedSubscriptions = {
     }
 
     const locationValue = document.getElementById("locationValue");
     const updateEnabled = document.getElementById("updateEnabled");
-
-    const updateValue = document.getElementById("updateValue");
-    const biffUnits = document.getElementById("biffUnits");
-
+    const updateBox = document.getElementById("updateBox");
     const quickMode = document.getElementById("quickMode");
     const autotagEnable = document.getElementById("autotagEnable");
     const autotagUsePrefix = document.getElementById("autotagUsePrefix");
     const autotagPrefix = document.getElementById("autotagPrefix");
@@ -1593,12 +1606,9 @@ var FeedSubscriptions = {
     updateEnabled.disabled =
       quickMode.disabled =
       autotagEnable.disabled =
         false;
-
-    updateValue.disabled = !updateEnabled.checked;
-    biffUnits.disabled = !updateEnabled.checked;
-
+    updateBox.disabled = !updateEnabled.checked;
     autotagUsePrefix.disabled = !autotagEnable.checked;
     autotagPrefix.disabled =
       autotagUsePrefix.disabled || !autotagUsePrefix.checked;
 
@@ -1616,10 +1626,9 @@ var FeedSubscriptions = {
       quickMode.disabled =
         disable && !FeedUtils.getFeedUrlsInFolder(item.folder);
       // All other options disabled unless intent is to add a feed.
       updateEnabled.disabled = disable;
-      updateValue.disabled = disable;
-      biffUnits.disabled = disable;
+      updateBox.disabled = disable || !updateEnabled.checked;
       autotagEnable.disabled = disable;
 
       addFeedButton.disabled =
         addFeedButton != focusedElement &&
@@ -1868,9 +1877,12 @@ var FeedSubscriptions = {
       // Not passed a param, get values from the ui.
       options = FeedUtils.optionsTemplate;
       options.updates.enabled =
         document.getElementById("updateEnabled").checked;
-      const biffUnits = document.getElementById("biffUnits").value;
+      const biffUnitsNode = document.querySelector(
+        "[name='biffUnits']:checked"
+      );
+      const biffUnits = biffUnitsNode?.value ?? FeedUtils.kBiffUnitsMinutes;
       const units = document.getElementById("updateValue").value;
       const minutes =
         biffUnits == FeedUtils.kBiffUnitsMinutes ? units : units * 24 * 60;
       options.updates.updateUnits = biffUnits;
@@ -2465,14 +2477,9 @@ var FeedSubscriptions = {
 
   // Status routines.
   updateStatusItem(aID, aValue, aErrorCode) {
     let el = document.getElementById(aID);
-    if (el.getAttribute("collapsed")) {
-      el.removeAttribute("collapsed");
-    }
-    if (el.hidden) {
-      el.hidden = false;
-    }
+    el.hidden = false;
 
     if (aID == "progressMeter") {
       if (aValue == "?") {
         el.removeAttribute("value");
@@ -2483,37 +2490,46 @@ var FeedSubscriptions = {
       el.textContent = aValue;
     }
 
     el = document.getElementById("validationText");
-    if (aErrorCode == FeedUtils.kNewsBlogInvalidFeed) {
-      el.removeAttribute("collapsed");
-    } else {
-      el.setAttribute("collapsed", true);
-    }
+    el.hidden = aErrorCode != FeedUtils.kNewsBlogInvalidFeed;
 
     el = document.getElementById("addCertException");
-    if (aErrorCode == FeedUtils.kNewsBlogBadCertError) {
-      el.removeAttribute("collapsed");
-    } else {
-      el.setAttribute("collapsed", true);
-    }
+    el.toggleAttribute(
+      "collapsed",
+      aErrorCode != FeedUtils.kNewsBlogBadCertError
+    );
   },
 
   clearStatusInfo() {
     document.getElementById("statusText").textContent = "";
     document.getElementById("progressMeter").hidden = true;
-    document.getElementById("validationText").collapsed = true;
+    document.getElementById("validationText").hidden = true;
     document.getElementById("addCertException").collapsed = true;
   },
 
+  openLearnMoreLink(aEvent) {
+    if (aEvent.button != 0 || aEvent.target.disabled) {
+      return;
+    }
+
+    const learnMoreLink = Services.prefs.getCharPref("rss.learnmore.url");
+
+    if (this.mMainWin && learnMoreLink.startsWith("http")) {
+      this.mMainWin.focus();
+      this.mMainWin.openContentTab(learnMoreLink);
+    }
+    aEvent.preventDefault();
+  },
+
   checkValidation(aEvent) {
-    if (aEvent.button != 0 || aEvent.target.disabled) {
+    if (aEvent.button != 0 || aEvent.target.hasAttribute("disabled")) {
       return;
     }
 
-    const validationQuery = "http://validator.w3.org/feed/check.cgi?url=";
-
-    if (this.mMainWin) {
+    const validationQuery = Services.prefs.getCharPref("rss.validator.url");
+
+    if (this.mMainWin && validationQuery.startsWith("http")) {
       const tabmail = this.mMainWin.document.getElementById("tabmail");
       if (tabmail) {
         const feedLocation = document.getElementById("locationValue").value;
         const url = validationQuery + encodeURIComponent(feedLocation);
@@ -2522,9 +2538,9 @@ var FeedSubscriptions = {
         this.mMainWin.openContentTab(url);
         FeedUtils.log.log(`checkValidation: query url ${url}`);
       }
     }
-    aEvent.stopPropagation();
+    aEvent.preventDefault();
   },
 
   addCertExceptionDialog() {
     const locationValue = document.getElementById("locationValue");
@@ -2852,10 +2868,9 @@ var FeedSubscriptions = {
   /* OPML Functions                                                  */
   /* *************************************************************** */
 
   get brandShortName() {
-    const brandBundle = document.getElementById("bundle_brand");
-    return brandBundle ? brandBundle.getString("brandShortName") : "";
+    return FeedUtils.stringsBrand?.GetStringFromName("brandShortName") ?? "";
   },
 
   /**
    * Export feeds as opml file Save As filepicker function.
diff --git a/mailnews/extensions/newsblog/feed-subscriptions.xhtml b/mailnews/extensions/newsblog/feed-subscriptions.xhtml
--- a/mailnews/extensions/newsblog/feed-subscriptions.xhtml
+++ b/mailnews/extensions/newsblog/feed-subscriptions.xhtml
@@ -44,12 +44,8 @@
       src="chrome://global/content/editMenuOverlay.js"
     ></script>
     <script
       defer="defer"
-      src="chrome://messenger/content/specialTabs.js"
-    ></script>
-    <script
-      defer="defer"
       src="chrome://messenger/content/dialogShadowDom.js"
     ></script>
     <script
       defer="defer"
@@ -74,325 +70,314 @@
   </head>
   <html:body
     xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
   >
-    <dialog
+    <xul:dialog
       id="subscriptionsDialog"
       buttons="accept"
       buttonlabelaccept="&button.close.label;"
     >
-      <keyset id="extensionsKeys">
-        <key
-          id="key_close"
-          key="&cmd.close.commandKey;"
-          modifiers="accel"
-          oncommand="window.close();"
-        />
-        <key id="key_close2" keycode="VK_ESCAPE" oncommand="window.close();" />
-      </keyset>
+      <html:div id="contentPane">
+        <html:div id="learnMore">
+          <html:a href="" onclick="FeedSubscriptions.openLearnMoreLink(event);"
+            >&learnMore.label;
+          </html:a>
+        </html:div>
 
-      <stringbundle
-        id="bundle_newsblog"
-        src="chrome://messenger-newsblog/locale/newsblog.properties"
-      />
-      <stringbundle
-        id="bundle_subfolder"
-        src="chrome://messenger/locale/imapMsgs.properties"
-      />
-      <stringbundle
-        id="bundle_brand"
-        src="chrome://branding/locale/brand.properties"
-      />
-
-      <vbox flex="1" id="contentPane">
-        <hbox pack="end">
-          <label
-            is="text-link"
-            id="learnMore"
-            crop="end"
-            value="&learnMore.label;"
-            href="https://support.mozilla.org/kb/how-subscribe-news-feeds-and-blogs"
-          />
-        </hbox>
+        <xul:vbox id="feedSubscriptionsBox" flex="1">
+          <!-- Do not prefix <tree> nodes -->
+          <tree
+            id="folderTree"
+            flex="1"
+            hidecolumnpicker="true"
+            onselect="FeedSubscriptions.onSelect();"
+            seltype="single"
+          >
+            <treecols>
+              <treecol
+                id="folderNameCol"
+                primary="true"
+                flex="1"
+                hideheader="true"
+              />
+              <treecol id="feedTypeCol" hideheader="true" />
+            </treecols>
+            <treechildren
+              id="folderTreeChildren"
+              ondragstart="FeedSubscriptions.onDragStart(event);"
+              ondragover="FeedSubscriptions.onDragOver(event);"
+            />
+          </tree>
+        </xul:vbox>
 
-        <tree
-          id="rssSubscriptionsList"
-          flex="1"
-          hidecolumnpicker="true"
-          onselect="FeedSubscriptions.onSelect();"
-          seltype="single"
-        >
-          <treecols>
-            <treecol id="folderNameCol" primary="true" hideheader="true" />
-            <treecol id="feedTypeCol" />
-          </treecols>
-          <treechildren
-            id="subscriptionChildren"
-            ondragstart="FeedSubscriptions.onDragStart(event);"
-            ondragover="FeedSubscriptions.onDragOver(event);"
-          />
-        </tree>
+        <html:section id="feedInfoBox">
+          <html:form id="feedDetailGrid">
+            <html:label id="nameLabel" for="nameValue"
+              >&feedTitle.label;</html:label
+            >
+            <html:input
+              id="nameValue"
+              type="text"
+              class="input-inline"
+              aria-labelledby="nameLabel"
+              oninput="FeedSubscriptions.setPrefs(this);"
+              disabled="disabled"
+            />
 
-        <hbox id="rssFeedInfoBox">
-          <vbox flex="1">
-            <hbox flex="1">
-              <vbox pack="end">
-                <hbox flex="1" align="center">
-                  <label
-                    id="nameLabel"
-                    accesskey="&feedTitle.accesskey;"
-                    control="nameValue"
-                    value="&feedTitle.label;"
-                  />
-                </hbox>
-                <hbox flex="1" align="center">
-                  <label
-                    id="locationLabel"
-                    accesskey="&feedLocation.accesskey;"
-                    control="locationValue"
-                    value="&feedLocation.label;"
-                  />
-                </hbox>
-                <hbox flex="1" align="center">
-                  <label
-                    id="feedFolderLabel"
-                    value="&feedFolder.label;"
-                    accesskey="&feedFolder.accesskey;"
-                    control="selectFolder"
-                  />
-                </hbox>
-              </vbox>
-              <vbox flex="1">
-                <html:input
-                  id="nameValue"
-                  type="text"
-                  class="input-inline"
-                  aria-labelledby="nameLabel"
-                  oninput="FeedSubscriptions.setPrefs(this);"
+            <html:label id="locationLabel" for="locationValue"
+              >&feedLocation.label;</html:label
+            >
+            <html:div id="locationBox">
+              <html:input
+                id="locationValue"
+                type="url"
+                class="uri-element input-inline"
+                aria-labelledby="locationLabel"
+                placeholder="Enter a valid feed url"
+                oninput="FeedSubscriptions.clearStatusInfo(); FeedSubscriptions.setFocus(this);"
+                onblur="FeedSubscriptions.onFocusChange();"
+              />
+              <html:a
+                id="locationValidate"
+                hidden=""
+                href=""
+                onclick="FeedSubscriptions.checkValidation(event);"
+                >&locationValidate.label;</html:a
+              >
+            </html:div>
+
+            <html:label id="feedFolderLabel" for="selectFolder"
+              >&feedFolder.label;</html:label
+            >
+            <html:div id="folderBox">
+              <xul:menulist
+                id="selectFolder"
+                flex="1"
+                class="folderMenuItem"
+                crop="center"
+                hidden="true"
+              >
+                <xul:menupopup
+                  is="folder-menupopup"
+                  id="selectFolderPopup"
+                  class="menulist-menupopup"
+                  mode="feeds"
+                  showFileHereLabel="true"
+                  showAccountsFileHere="true"
+                  oncommand="FeedSubscriptions.setNewFolder(event);"
                 />
-                <hbox class="input-container">
-                  <html:input
-                    id="locationValue"
-                    type="url"
-                    class="uri-element input-inline"
-                    aria-labelledby="locationLabel"
-                    placeholder="&feedLocation2.placeholder;"
-                    oninput="FeedSubscriptions.clearStatusInfo(); FeedSubscriptions.setFocus(this);"
-                    onblur="FeedSubscriptions.onFocusChange();"
-                  />
-                  <hbox align="center">
-                    <label
-                      is="text-link"
-                      id="locationValidate"
-                      collapsed="true"
-                      crop="end"
-                      value="&locationValidate.label;"
-                      onclick="FeedSubscriptions.checkValidation(event);"
-                    />
-                  </hbox>
-                </hbox>
-                <hbox class="input-container">
-                  <menulist
-                    id="selectFolder"
-                    flex="1"
-                    class="folderMenuItem"
-                    hidden="true"
-                  >
-                    <menupopup
-                      is="folder-menupopup"
-                      id="selectFolderPopup"
-                      class="menulist-menupopup"
-                      mode="feeds"
-                      showFileHereLabel="true"
-                      showAccountsFileHere="true"
-                      oncommand="FeedSubscriptions.setNewFolder(event);"
-                    />
-                  </menulist>
-                  <html:input
-                    id="selectFolderValue"
-                    class="input-inline"
-                    readonly="readonly"
-                    aria-labelledby="feedFolderLabel"
-                    onkeypress="FeedSubscriptions.onClickSelectFolderValue(event);"
-                    onclick="FeedSubscriptions.onClickSelectFolderValue(event);"
-                    onblur="FeedSubscriptions.onBlurSelectFolderValue(event);"
-                  />
-                  <checkbox
-                    id="createSubFolder"
-                    accesskey="b"
-                    oncommand="this.toggleAttribute('userchecked', this.checked);"
-                  />
-                </hbox>
-              </vbox>
-            </hbox>
-
-            <hbox align="center">
-              <checkbox
-                id="updateEnabled"
-                label="&biffStart.label;"
-                accesskey="&biffStart.accesskey;"
-                oncommand="FeedSubscriptions.setPrefs(this);"
+              </xul:menulist>
+              <html:input
+                id="selectFolderValue"
+                class="input-inline"
+                readonly="readonly"
+                aria-labelledby="feedFolderLabel"
+                onkeypress="FeedSubscriptions.onClickSelectFolderValue(event);"
+                onclick="FeedSubscriptions.onClickSelectFolderValue(event);"
+                onblur="FeedSubscriptions.onBlurSelectFolderValue(event);"
+                prettypath="Imported from Test/NachDenkSeiten - Die kritische Website"
+                filepath="/mnt/DATA/projects/mozilla/Thunderbird/TestProfiles/aj85byio.testB/Mail/Feeds-9/NachDenkSeiten - Die kritische Website"
               />
-              <html:input
-                id="updateValue"
-                type="number"
-                class="size3 input-inline"
-                min="1"
-                aria-labelledby="updateEnabled updateValue biffMinutes biffDays recommendedUnits recommendedUnitsVal"
-                oninput="FeedSubscriptions.setPrefs(this);"
-                onchange="FeedSubscriptions.setPrefs(this);"
-              />
-              <radiogroup
-                id="biffUnits"
-                orient="horizontal"
-                oncommand="FeedSubscriptions.setPrefs(this);"
+              <html:label id="createSubFolderLabel" for="createSubFolder">
+                <html:input
+                  id="createSubFolder"
+                  type="checkbox"
+                  onclick="this.toggleAttribute('userchecked', this.checked);"
+                />Create Subfolder</html:label
               >
-                <radio
-                  id="biffMinutes"
-                  value="min"
-                  label="&biffMinutes.label;"
-                  accesskey="&biffMinutes.accesskey;"
+            </html:div>
+          </html:form>
+
+          <html:form id="feedOptionsGrid">
+            <html:div>
+              <html:label for="updateEnabled">
+                <html:input
+                  id="updateEnabled"
+                  type="checkbox"
+                  onclick="FeedSubscriptions.setPrefs(this);"
+                  disabled="disabled"
                 />
-                <radio
+                &biffStart.label;
+              </html:label>
+              <html:fieldset id="updateBox" disabled="">
+                <html:input
+                  id="updateValue"
+                  type="number"
+                  class="size3 input-inline"
+                  min="1"
+                  aria-labelledby="updateEnabled updateValue biffMinutes biffDays recommendedUnits recommendedUnitsVal"
+                  oninput="FeedSubscriptions.setPrefs(this);"
+                  onchange="FeedSubscriptions.setPrefs(this);"
+                />
+
+                <html:input
+                  id="biffMinutes"
+                  type="radio"
+                  name="biffUnits"
+                  value="min"
+                  onclick="FeedSubscriptions.setPrefs(this);"
+                />
+                <html:label for="biffMinutes">&biffMinutes.label;</html:label>
+                <html:input
                   id="biffDays"
+                  type="radio"
+                  name="biffUnits"
                   value="d"
-                  label="&biffDays.label;"
-                  accesskey="&biffDays.accesskey;"
+                  onclick="FeedSubscriptions.setPrefs(this);"
                 />
-              </radiogroup>
-              <hbox id="recommendedBox">
-                <label
-                  id="recommendedUnits"
-                  value="&recommendedUnits.label;"
-                  hidden="true"
-                  control="updateMinutes"
-                />
-                <label
+                <html:label for="biffDays">&biffDays.label;</html:label>
+
+                <html:label id="recommendedUnits" for="updateValue" hidden=""
+                  >&recommendedUnits.label;</html:label
+                >
+                <html:label
                   id="recommendedUnitsVal"
-                  value=""
-                  hidden="true"
-                  control="updateMinutes"
+                  for="updateValue"
+                  hidden=""
+                ></html:label>
+              </html:fieldset>
+            </html:div>
+
+            <html:div>
+              <html:label for="quickMode">
+                <html:input
+                  id="quickMode"
+                  type="checkbox"
+                  onclick="FeedSubscriptions.setSummary(this);"
                 />
-              </hbox>
-            </hbox>
-            <checkbox
-              id="quickMode"
-              accesskey="&quickMode.accesskey;"
-              label="&quickMode.label;"
-              oncommand="FeedSubscriptions.setSummary(this.checked);"
-            />
-            <checkbox
-              id="autotagEnable"
-              accesskey="&autotagEnable.accesskey;"
-              label="&autotagEnable.label;"
-              oncommand="FeedSubscriptions.setPrefs(this);"
-            />
-            <hbox class="input-container">
-              <checkbox
-                id="autotagUsePrefix"
-                class="indent"
-                accesskey="&autotagUsePrefix.accesskey;"
-                label="&autotagUsePrefix.label;"
-                oncommand="FeedSubscriptions.setPrefs(this);"
-              />
+                &quickMode.label;
+              </html:label>
+            </html:div>
+
+            <html:div>
+              <html:label for="autotagEnable">
+                <html:input
+                  id="autotagEnable"
+                  type="checkbox"
+                  onclick="FeedSubscriptions.setPrefs(this);"
+                  disabled="disabled"
+                />
+                &autotagEnable.label;
+              </html:label>
+            </html:div>
+
+            <html:div>
+              <html:label for="autotagUsePrefix">
+                <html:input
+                  id="autotagUsePrefix"
+                  class="indent"
+                  type="checkbox"
+                  onclick="FeedSubscriptions.setPrefs(this);"
+                  disabled="disabled"
+                />
+                &autotagUsePrefix.label;
+              </html:label>
               <html:input
                 id="autotagPrefix"
                 type="text"
                 class="input-inline"
-                placeholder="&autoTagPrefix.placeholder;"
+                placeholder="Enter a tag prefix"
                 oninput="FeedSubscriptions.setPrefs(this);"
+                disabled="disabled"
               />
-            </hbox>
-            <separator class="thin" />
-          </vbox>
-        </hbox>
+            </html:div>
+          </html:form>
+        </html:section>
+
+        <html:section id="statusContainerBox">
+          <html:div id="statusBox">
+            <html:div id="statusText"></html:div>
+
+            <html:div class="inline-flex"></html:div>
+
+            <xul:button
+              id="addCertException"
+              collapsed="true"
+              data-l10n-id="certmgr-add-exception"
+              onclick="FeedSubscriptions.addCertExceptionDialog();"
+            >
+            </xul:button>
 
-        <hbox id="statusContainerBox" align="center">
-          <vbox flex="1">
-            <description id="statusText" />
-          </vbox>
-          <spacer flex="2" />
-          <label
-            id="validationText"
-            collapsed="true"
-            class="text-link"
-            crop="end"
-            value="&validateText.label;"
-            onclick="FeedSubscriptions.checkValidation(event);"
-          />
-          <button
-            id="addCertException"
-            collapsed="true"
-            data-l10n-id="certmgr-add-exception"
-            oncommand="FeedSubscriptions.addCertExceptionDialog();"
-          />
-          <html:progress
-            id="progressMeter"
-            hidden="hidden"
-            value="0"
-            max="100"
-          />
-        </hbox>
+            <html:a
+              id="validationText"
+              hidden=""
+              href=""
+              onclick="FeedSubscriptions.checkValidation(event);"
+            >
+              &validateText.label;
+            </html:a>
 
-        <hbox align="end">
-          <hbox class="actionButtons" flex="1">
-            <button
+            <html:progress
+              id="progressMeter"
+              collapsed="true"
+              value="0"
+              max="100"
+              hidden=""
+            ></html:progress>
+          </html:div>
+
+          <html:div id="actionButtonsBox">
+            <xul:button
               id="addFeed"
-              hidden="true"
               disabled="true"
               label="&button.addFeed.label;"
               accesskey="&button.addFeed.accesskey;"
               oncommand="FeedSubscriptions.addFeed();"
-            />
+            >
+            </xul:button>
 
-            <button
+            <xul:button
               id="updateFeed"
               hidden="true"
               disabled="true"
               label="&button.verifyFeed.label;"
-              accesskey="&button.verifyFeed.accesskey;"
+              accesskey="&button.verifyFeed.label;"
               verifylabel="&button.verifyFeed.label;"
               verifyaccesskey="&button.verifyFeed.accesskey;"
               updatelabel="&button.updateFeed.label;"
               updateaccesskey="&button.updateFeed.accesskey;"
               oncommand="FeedSubscriptions.updateFeed();"
-            />
+            >
+            </xul:button>
 
-            <button
+            <xul:button
               id="removeFeed"
               hidden="true"
               label="&button.removeFeed.label;"
               accesskey="&button.removeFeed.accesskey;"
               oncommand="FeedSubscriptions.removeFeed(true);"
-            />
+            >
+            </xul:button>
 
-            <button
+            <xul:button
               id="deleteFolder"
-              hidden="true"
               data-l10n-id="menu-edit-delete-folder"
               oncommand="FeedSubscriptions.deleteFolder();"
-            />
-
-            <spacer flex="1" />
+            >
+            </xul:button>
 
-            <button
+            <html:div class="inline-flex"></html:div>
+
+            <xul:button
               id="importOPML"
-              hidden="true"
               label="&button.importOPML.label;"
               accesskey="&button.importOPML.accesskey;"
               oncommand="FeedSubscriptions.importOPML();"
-            />
+              hidden="true"
+            >
+            </xul:button>
 
-            <button
+            <xul:button
               id="exportOPML"
-              hidden="true"
               label="&button.exportOPML.label;"
               accesskey="&button.exportOPML.accesskey;"
               tooltiptext="&button.exportOPML.tooltip;"
               oncommand="FeedSubscriptions.exportOPML(event);"
-            />
-          </hbox>
-        </hbox>
-      </vbox>
-    </dialog>
+              hidden="true"
+            >
+            </xul:button>
+          </html:div>
+        </html:section>
+      </html:div>
+    </xul:dialog>
   </html:body>
 </html>
diff --git a/mailnews/extensions/newsblog/test/browser/browser_feedDisplay.js b/mailnews/extensions/newsblog/test/browser/browser_feedDisplay.js
--- a/mailnews/extensions/newsblog/test/browser/browser_feedDisplay.js
+++ b/mailnews/extensions/newsblog/test/browser/browser_feedDisplay.js
@@ -82,9 +82,9 @@ async function subscribeToFeed(feedURL) 
     {
       async callback(dialogWindow) {
         const dialogDocument = dialogWindow.document;
 
-        const list = dialogDocument.getElementById("rssSubscriptionsList");
+        const list = dialogDocument.getElementById("folderTree");
         const locationInput = dialogDocument.getElementById("locationValue");
         const addFeedButton = dialogDocument.getElementById("addFeed");
 
         await BrowserTestUtils.waitForEvent(list, "select");
diff --git a/mailnews/mailnews.js b/mailnews/mailnews.js
--- a/mailnews/mailnews.js
+++ b/mailnews/mailnews.js
@@ -780,8 +780,14 @@ pref("rss.disable_feeds_on_update_failur
 
 // Show feed favicons in folderpane and elsewhere.
 pref("rss.show.favicons", true);
 
+// Learn More link for feeds.
+pref("rss.learnmore.url", "https://support.mozilla.org/kb/how-subscribe-news-feeds-and-blogs");
+
+// Feed syntax validator query link.
+pref("rss.validator.url", "https://validator.w3.org/feed/check.cgi?url=");
+
 pref("feeds.loglevel", "Warn");
 
 // 0=default as attachment
 // 1=forward as quoted (mapped to 2 in mozilla)
