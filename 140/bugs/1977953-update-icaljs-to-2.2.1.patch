# HG changeset patch
# User Geoff Lankow <geoff@darktrojan.net>
# Date 1754971138 -43200
# Node ID e6171696f4e35c5633c7cdc196865d224d39d597
# Parent  640b005dcd5016c08b71c9ba42926ce6783f8b61
Bug 1977953 - Update ical.js to v2.2.1. r=mkmelin

Differential Revision: https://phabricator.services.mozilla.com/D260769

Take just enough to fix https://bugzilla.mozilla.org/show_bug.cgi?id=377487, so basically only
https://github.com/kewisch/ical.js/commit/fdb4181d7d72f1480c6c17e3972d2d71850c7456

diff --git a/calendar/base/modules/Ical.sys.mjs b/calendar/base/modules/Ical.sys.mjs
--- a/calendar/base/modules/Ical.sys.mjs
+++ b/calendar/base/modules/Ical.sys.mjs
@@ -3909,20 +4298,20 @@ class RecurIterator {
     let parts = this.by_data;
 
     if ("BYDAY" in parts) {
       // libical does this earlier when the rule is loaded, but we postpone to
       // now so we can preserve the original order.
       this.sort_byday_rules(parts.BYDAY);
     }
 
-    // If the BYYEARDAY appares, no other date rule part may appear
+    // The BYYEARDAY may only appear with BYDAY
     if ("BYYEARDAY" in parts) {
       if ("BYMONTH" in parts || "BYWEEKNO" in parts ||
-          "BYMONTHDAY" in parts || "BYDAY" in parts) {
+          "BYMONTHDAY" in parts) {
         throw new Error("Invalid BYYEARDAY rule");
       }
     }
 
     // BYWEEKNO and BYMONTHDAY rule parts may not both appear
     if ("BYWEEKNO" in parts && "BYMONTHDAY" in parts) {
       throw new Error("BYWEEKNO does not fit to BYMONTHDAY");
     }
@@ -4914,16 +5331,29 @@ class RecurIterator {
           this.days.push(day);
         }
       }
     } else if (partCount == 3 &&
                "BYDAY" in parts &&
                "BYWEEKNO" in parts &&
                "BYMONTHDAY" in parts) ; else if (partCount == 1 && "BYYEARDAY" in parts) {
       this.days = this.days.concat(this.by_data.BYYEARDAY);
+    } else if (partCount == 2 && "BYYEARDAY" in parts && "BYDAY" in parts) {
+      let daysInYear = Time.isLeapYear(aYear) ? 366 : 365;
+      let expandedDays = new Set(this.expand_by_day(aYear));
+
+      for (let doy of this.by_data.BYYEARDAY) {
+        if (doy < 0) {
+          doy += daysInYear + 1;
+        }
+
+        if (expandedDays.has(doy)) {
+          this.days.push(doy);
+        }
+      }
     } else {
       this.days = [];
     }
 
     let daysInYear = Time.isLeapYear(aYear) ? 366 : 365;
     this.days.sort((a, b) => {
       if (a < 0) a += daysInYear + 1;
       if (b < 0) b += daysInYear + 1;
