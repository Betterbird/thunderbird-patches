# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1758924401 -7200
# Parent  373033cb31bbbc3c295bc50888933798ddf5b4d1
Backout bug 1956258 for breaking Owl as default account and fix the original issue in a better way.

This loses Owl as default account, see: https://github.com/Betterbird/thunderbird-patches/issues/488

diff --git a/mailnews/base/public/nsIMsgAccountManager.idl b/mailnews/base/public/nsIMsgAccountManager.idl
--- a/mailnews/base/public/nsIMsgAccountManager.idl
+++ b/mailnews/base/public/nsIMsgAccountManager.idl
@@ -85,8 +85,9 @@ interface nsIMsgAccountManager : nsISupp
    * You can only set the defaultAccount to an
    * account already in the account manager.
    */
   attribute nsIMsgAccount defaultAccount;
+  nsIMsgAccount getDefaultAccountForce();
 
   /**
    * Ordered list of all accounts, by the order they are in the prefs.
    * Accounts with hidden servers are not returned.
diff --git a/mailnews/base/src/nsMsgAccountManager.cpp b/mailnews/base/src/nsMsgAccountManager.cpp
--- a/mailnews/base/src/nsMsgAccountManager.cpp
+++ b/mailnews/base/src/nsMsgAccountManager.cpp
@@ -765,13 +765,10 @@ nsMsgAccountManager::RemoveAccount(nsIMs
     m_accounts.AppendElement(aAccount);
     return rv;
   }
 
-  // If it's the default account, clear the corresponding preference.
-  if (m_defaultAccount == aAccount) {
-    m_defaultAccount = nullptr;
-    setDefaultAccountPref(nullptr);
-  }
+  // If it's the default, choose a new default account.
+  if (m_defaultAccount == aAccount) AutosetDefaultAccount();
 
   // XXX - need to figure out if this is the last time this server is
   // being used, and only send notification then.
   // (and only remove from hashtable then too!)
@@ -832,19 +829,19 @@ nsresult nsMsgAccountManager::OutputAcco
                               mAccountKeyList);
 }
 
 /**
- * Get the default account. If no default account, return null.
+ * Get the default account. If no default account, return null, unless we force
+ * getting a valid account.
  */
-NS_IMETHODIMP
-nsMsgAccountManager::GetDefaultAccount(nsIMsgAccount** aDefaultAccount) {
+nsresult nsMsgAccountManager::GetDefaultAccountInternal(
+    nsIMsgAccount** aDefaultAccount, bool force) {
   NS_ENSURE_ARG_POINTER(aDefaultAccount);
 
   nsresult rv = LoadAccounts();
   NS_ENSURE_SUCCESS(rv, rv);
 
   if (!m_defaultAccount) {
-    // Try to determine the currently set default account.
     nsCString defaultKey;
     rv = m_prefs->GetCharPref(PREF_MAIL_ACCOUNTMANAGER_DEFAULTACCOUNT,
                               defaultKey);
     if (NS_SUCCEEDED(rv)) {
@@ -856,23 +853,25 @@ nsMsgAccountManager::GetDefaultAccount(n
       }
     }
   }
 
-  if (!m_defaultAccount) {
-    // No valid default account has been set. Try to find the first viable
-    // account and set it as default.
-    for (nsIMsgAccount* account : m_accounts) {
-      rv = SetDefaultAccount(account);
-      if (NS_SUCCEEDED(rv)) {
-        break;
-      }
-    }
+  if (force && !m_defaultAccount) {
+    AutosetDefaultAccount();
   }
 
   NS_IF_ADDREF(*aDefaultAccount = m_defaultAccount);
   return NS_OK;
 }
 
+NS_IMETHODIMP
+nsMsgAccountManager::GetDefaultAccountForce(nsIMsgAccount** aDefaultAccount) {
+  return GetDefaultAccountInternal(aDefaultAccount, true);
+}
+NS_IMETHODIMP
+nsMsgAccountManager::GetDefaultAccount(nsIMsgAccount** aDefaultAccount) {
+  return GetDefaultAccountInternal(aDefaultAccount, false);
+}
+
 /**
  * Check if the given account can be default.
  */
 nsresult nsMsgAccountManager::CheckDefaultAccount(nsIMsgAccount* aAccount,
@@ -888,8 +887,30 @@ nsresult nsMsgAccountManager::CheckDefau
   }
   return rv;
 }
 
+/**
+ * Pick the first account that can be default and make it the default.
+ */
+nsresult nsMsgAccountManager::AutosetDefaultAccount() {
+  for (nsIMsgAccount* account : m_accounts) {
+    bool canBeDefault = false;
+    nsresult rv = CheckDefaultAccount(account, canBeDefault);
+    if (NS_SUCCEEDED(rv) && canBeDefault) {
+      return SetDefaultAccount(account);
+    }
+  }
+
+  // No accounts can be the default. Clear it.
+  if (m_defaultAccount) {
+    nsCOMPtr<nsIMsgAccount> oldAccount = m_defaultAccount;
+    m_defaultAccount = nullptr;
+    (void)setDefaultAccountPref(nullptr);
+    (void)notifyDefaultServerChange(oldAccount, nullptr);
+  }
+  return NS_OK;
+}
+
 NS_IMETHODIMP
 nsMsgAccountManager::SetDefaultAccount(nsIMsgAccount* aDefaultAccount) {
   if (!aDefaultAccount) return NS_ERROR_INVALID_ARG;
 
diff --git a/mailnews/base/src/nsMsgAccountManager.h b/mailnews/base/src/nsMsgAccountManager.h
--- a/mailnews/base/src/nsMsgAccountManager.h
+++ b/mailnews/base/src/nsMsgAccountManager.h
@@ -154,8 +154,15 @@ class nsMsgAccountManager : public nsIMs
    * Check if the given account can be the set as the default account.
    */
   nsresult CheckDefaultAccount(nsIMsgAccount* aAccount, bool& aCanBeDefault);
 
+  /**
+   * Find a new account that can serve as default.
+   */
+  nsresult AutosetDefaultAccount();
+  nsresult GetDefaultAccountInternal(nsIMsgAccount** aDefaultAccount,
+                                     bool force);
+
   // sets the pref for the default server
   nsresult setDefaultAccountPref(nsIMsgAccount* aDefaultAccount);
 
   // Write out the accounts pref from the m_accounts list of accounts.
diff --git a/mailnews/compose/src/nsMsgComposeService.cpp b/mailnews/compose/src/nsMsgComposeService.cpp
--- a/mailnews/compose/src/nsMsgComposeService.cpp
+++ b/mailnews/compose/src/nsMsgComposeService.cpp
@@ -560,9 +560,9 @@ nsMsgComposeService::GetDefaultIdentity(
       do_GetService("@mozilla.org/messenger/account-manager;1", &rv);
   NS_ENSURE_SUCCESS(rv, rv);
 
   nsCOMPtr<nsIMsgAccount> defaultAccount;
-  rv = accountManager->GetDefaultAccount(getter_AddRefs(defaultAccount));
+  rv = accountManager->GetDefaultAccountForce(getter_AddRefs(defaultAccount));
   NS_ENSURE_SUCCESS(rv, rv);
 
   return defaultAccount ? defaultAccount->GetDefaultIdentity(_retval) : NS_OK;
 }
