# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1726686570 -7200
# Parent  79da1cf3f6af31c8b5806fe0020acd9f301809e6
Bug NNN18 - Suppress yellow new (biff) star for IMAP drafts.

Related to bug 676249, bug 687140 and bug 1787476.

diff --git a/mail/base/content/about3Pane.js b/mail/base/content/about3Pane.js
--- a/mail/base/content/about3Pane.js
+++ b/mail/base/content/about3Pane.js
@@ -2775,8 +2775,15 @@ var folderPane = {
       folder.server.isGMailServer
     ) {
       return;
     }
+    // Avoid new messages in IMAP Drafts and Templates.
+    if (
+      folder.flags & Ci.nsMsgFolderFlags.Drafts ||
+      folder.flags & Ci.nsMsgFolderFlags.Templates
+    ) {
+      return;
+    }
     this._changeRows(folder, row => {
       // Find the nearest visible ancestor and update it.
       let collapsedAncestor = row.parentElement?.closest("li.collapsed");
       while (collapsedAncestor) {
diff --git a/mailnews/base/src/nsMsgDBView.cpp b/mailnews/base/src/nsMsgDBView.cpp
--- a/mailnews/base/src/nsMsgDBView.cpp
+++ b/mailnews/base/src/nsMsgDBView.cpp
@@ -1175,9 +1175,12 @@ nsMsgDBView::GetRowProperties(int32_t in
   if (flags & nsMsgMessageFlags::Redirected)
     properties.AppendLiteral(" redirected");
 
   bool isNew = flags & nsMsgMessageFlags::New;
-  if (isNew) properties.AppendLiteral(" new");
+  if (isNew && !(m_folderFlags &
+                 (nsMsgFolderFlags::Drafts | nsMsgFolderFlags::Templates))) {
+    properties.AppendLiteral(" new");
+  }
 
   if (m_flags[index] & nsMsgMessageFlags::Marked)
     properties.AppendLiteral(" flagged");
 
@@ -1318,9 +1321,13 @@ nsMsgDBView::GetCellProperties(int32_t a
 
   if (flags & nsMsgMessageFlags::Redirected)
     properties.AppendLiteral(" redirected");
 
-  if (flags & nsMsgMessageFlags::New) properties.AppendLiteral(" new");
+  if (flags & nsMsgMessageFlags::New &&
+      !(m_folderFlags &
+        (nsMsgFolderFlags::Drafts | nsMsgFolderFlags::Templates))) {
+    properties.AppendLiteral(" new");
+  }
 
   if (m_flags[aRow] & nsMsgMessageFlags::Marked)
     properties.AppendLiteral(" flagged");
 
@@ -2237,8 +2244,9 @@ nsMsgDBView::Open(nsIMsgFolder* folder, 
       mozilla::Preferences::GetBool("mailnews.reversed_threading", false);
   m_viewFlags = viewFlags;
   m_sortOrder = sortOrder;
   m_sortType = sortType;
+  m_folderFlags = 0;
 
   nsresult rv;
   nsCOMPtr<nsIMsgAccountManager> accountManager =
       do_GetService("@mozilla.org/messenger/account-manager;1", &rv);
@@ -2260,8 +2268,9 @@ nsMsgDBView::Open(nsIMsgFolder* folder, 
         do_GetService("@mozilla.org/msgDatabase/msgDBService;1", &rv);
     NS_ENSURE_SUCCESS(rv, rv);
     msgDBService->RegisterPendingListener(folder, this);
     m_folder = folder;
+    folder->GetFlags(&m_folderFlags);
 
     if (!m_viewFolder) {
       // There is never a viewFolder already set except for the single folder
       // saved search case, where the backing folder m_folder is different from
diff --git a/mailnews/base/src/nsMsgDBView.h b/mailnews/base/src/nsMsgDBView.h
--- a/mailnews/base/src/nsMsgDBView.h
+++ b/mailnews/base/src/nsMsgDBView.h
@@ -464,8 +464,9 @@ class nsMsgDBView : public nsIMsgDBView,
   uint8_t m_saveRestoreSelectionDepth;
 
   nsCOMPtr<nsIMsgDatabase> m_db;
   nsCOMPtr<nsIMsgFolder> m_folder;
+  uint32_t m_folderFlags;
   // For virtual folders, the VF db.
   nsCOMPtr<nsIMsgFolder> m_viewFolder;
   nsString mMessageType;
   nsTArray<MsgViewSortColumnInfo> m_sortColumns;
