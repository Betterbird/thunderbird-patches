# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1744579765 -7200
# Parent  ffab26ff0297a5ec210a022a78da00c306e407db
Bug 1554188 - Allow for 6144 open files with Windows system call.

Here's the very sad story. This patch has had many variations. The bottom line is:
Despite our best efforts to implement a simple LRU cache for open databases,
IFF the database isn't force closed in nsMsgSearchSession::ReleaseFolderDBRef(), previously with
folder->CloseDBIfFolderNotOpen(true), the search doesn't work.

This was later changed to

  // Calling this with `true` will call `nsMsgDatabase::ForceClosed()`
  // and that loses the listeners and panels don't update any more
  // resulting in phantom rows.
  folder->CloseDBIfFolderNotOpen(false);

So the dilemma is:
Calling this with `true` (or calling `nsMsgDatabase::ForceClosed()`), makes the search
succeed, but the search panel will show a phantom row if a message is deleted in a contributing folder.
Calling this with `false` is not strong enough. So the only change in the entire patch that saves the day
is allowing more open files on Windows.

Therefore, with a bleeding heart about all the work that went into it, we're cutting the patch down to a
one-liner :-(

diff --git a/mail/app/nsMailApp.cpp b/mail/app/nsMailApp.cpp
--- a/mail/app/nsMailApp.cpp
+++ b/mail/app/nsMailApp.cpp
@@ -387,8 +387,14 @@ int main(int argc, char* argv[], char* e
 #ifdef MOZ_BROWSER_CAN_BE_CONTENTPROC
   gBootstrap->XRE_EnableSameExecutableForContentProc();
 #endif
 
+#ifdef WIN32
+  // Allow for 75% of the max number of 8192, see:
+  // https://learn.microsoft.com/en-us/cpp/c-runtime-library/reference/setmaxstdio?view=msvc-170
+  _setmaxstdio(6144);
+#endif
+
   int result = do_main(argc, argv, envp);
 
   gBootstrap->NS_LogTerm();
 
diff --git a/mailnews/search/src/nsMsgSearchSession.cpp b/mailnews/search/src/nsMsgSearchSession.cpp
--- a/mailnews/search/src/nsMsgSearchSession.cpp
+++ b/mailnews/search/src/nsMsgSearchSession.cpp
@@ -514,8 +514,16 @@ void nsMsgSearchSession::ReleaseFolderDB
   folder->GetFlags(&flags);
 
   /*we don't null out the db reference for inbox because inbox is like the
     "main" folder and performance outweighs footprint */
+
+  // This attempt to close the DB is not strong enough, it needs
+  // `nsMsgDatabase::ForceClosed()`.
+  // However, that loses the listeners and panels don't update any more
+  // resulting in phantom rows in the panel if contributing rows are deleted
+  // in the original folder. So you can't win :-(
+  // Also see the patch header.
+
   if (!isOpen && !(nsMsgFolderFlags::Inbox & flags))
     folder->SetMsgDatabase(nullptr);
 }
 nsresult nsMsgSearchSession::TimeSliceSerial(bool* aDone) {
