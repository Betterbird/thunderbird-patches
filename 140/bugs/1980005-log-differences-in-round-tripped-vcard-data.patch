# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1754007102 -7200
# Parent  b11338ca45f7627eb24f2a2bf7ee43867874f976
Bug 1980005 - Log differences in round-tripped vCard data.

Also add additional logging for bug 1980024.

diff --git a/mailnews/addrbook/modules/CardDAVDirectory.sys.mjs b/mailnews/addrbook/modules/CardDAVDirectory.sys.mjs
--- a/mailnews/addrbook/modules/CardDAVDirectory.sys.mjs
+++ b/mailnews/addrbook/modules/CardDAVDirectory.sys.mjs
@@ -240,9 +240,9 @@ export class CardDAVDirectory extends SQ
       details.expectedStatuses &&
       !details.expectedStatuses.includes(response.status)
     ) {
       throw Components.Exception(
-        `Incorrect response from server: ${response.status} ${response.statusText}`,
+        `Incorrect response from server: (${response.status}) ${response.statusText}`,
         Cr.NS_ERROR_FAILURE
       );
     }
 
@@ -381,8 +381,86 @@ export class CardDAVDirectory extends SQ
       yield response;
     }
   };
 
+  // Code written by ChatGPT.
+  compareVCards(original, received) {
+    const normalize = vcard =>
+      vcard
+        .trim()
+        .split(/\r?\n/)
+        .map(line => line.trim())
+        .filter(line => line.length)
+        .sort();
+
+    const origLines = normalize(original);
+    const recvLines = normalize(received);
+
+    const onlyInOriginal = [];
+    const onlyInReceived = [];
+    const differences = [];
+
+    let i = 0;
+    let j = 0;
+
+    while (i < origLines.length && j < recvLines.length) {
+      const oLine = origLines[i];
+      const rLine = recvLines[j];
+
+      if (oLine === rLine) {
+        i++;
+        j++;
+      } else if (oLine < rLine) {
+        onlyInOriginal.push(oLine);
+        i++;
+      } else {
+        onlyInReceived.push(rLine);
+        j++;
+      }
+    }
+
+    // Collect leftovers.
+    while (i < origLines.length) {
+      onlyInOriginal.push(origLines[i++]);
+    }
+    while (j < recvLines.length) {
+      onlyInReceived.push(recvLines[j++]);
+    }
+
+    // Look for similar lines (same field prefix) among remaining lines.
+    for (i = onlyInOriginal.length - 1; i >= 0; i--) {
+      const oLine = onlyInOriginal[i];
+      const oKey = oLine.split(":")[0].split(";")[0];
+
+      for (j = onlyInReceived.length - 1; j >= 0; j--) {
+        const rLine = onlyInReceived[j];
+        const rKey = rLine.split(":")[0].split(";")[0];
+
+        if (oKey === rKey) {
+          differences.push({ key: oKey, original: oLine, received: rLine });
+          onlyInOriginal.splice(i, 1);
+          onlyInReceived.splice(j, 1);
+          break;
+        }
+      }
+    }
+
+    // Output results
+    differences.forEach(diff =>
+      console.warn(
+        `CardDAV: Different information for ${diff.key}:\n  original: ${diff.original}\n  received: ${diff.received}`
+      )
+    );
+
+    onlyInOriginal.forEach(line =>
+      console.warn("CardDAV: Missing in received vCard:", line)
+    );
+
+    onlyInReceived.forEach(line =>
+      console.warn("CardDAV: Unexpected in received vCard:", line)
+    );
+  }
+
   /**
    * Converts the card to a vCard and performs a PUT request to store it on the
    * server. Then immediately performs a GET request ensuring the local copy
    * matches the server copy. Stores the card in the database on success.
@@ -416,16 +494,18 @@ export class CardDAVDirectory extends SQ
     try {
       log.debug(`Sending ${cardHref} to server.`);
       response = await this._makeRequest(cardHref, requestDetails);
     } catch (ex) {
+      console.error("Sending card to server failed:", requestDetails.body.replace(/\r?\n/g, "|"));
       Services.obs.notifyObservers(this, "addrbook-directory-sync-failed");
       this._uidsToSync.add(card.UID);
       throw ex;
     }
 
     if (response.status >= 400) {
+      console.error("Sending card to server failed:", requestDetails.body.replace(/\r?\n/g, "|"));
       throw Components.Exception(
-        `Sending card to the server failed, response was ${response.status} ${response.statusText}`,
+        `Sending card to the server failed, response was: (${response.status}) ${response.statusText}`,
         Cr.NS_ERROR_FAILURE
       );
     }
 
@@ -445,8 +525,9 @@ export class CardDAVDirectory extends SQ
       const responseCard = normalizeLineEndings(
         properties.querySelector("address-data")?.textContent
       );
 
+      this.compareVCards(requestDetails.body, responseCard);
       const abCard = lazy.VCardUtils.vCardToAbCard(responseCard);
       abCard.setProperty("_etag", etag);
       abCard.setProperty("_href", href);
 
@@ -834,9 +915,9 @@ export class CardDAVDirectory extends SQ
     });
 
     if (response.status == 400) {
       log.warn(
-        `Server ${this._serverURL} responded with: ${response.status} ${response.statusText}`
+        `Server ${this._serverURL} responded with: (${response.status}) ${response.statusText}`
       );
       await this.fetchAllFromServer();
       return;
     }
