# HG changeset patch
# User Betterbird <betterbird@betterbird.eu>
# Date 1733521056 -3600
# Parent  c84c0c067981debdd5b7ea90e2a8183c1793b581
Misc: Block rogue add-ons.

diff --git a/toolkit/components/extensions/Extension.sys.mjs b/toolkit/components/extensions/Extension.sys.mjs
--- a/toolkit/components/extensions/Extension.sys.mjs
+++ b/toolkit/components/extensions/Extension.sys.mjs
@@ -4025,8 +4025,38 @@ export class Langpack extends ExtensionD
         !this.manifestCacheKey[1].startsWith(majorVersion)) {
       Cu.reportError(`Compat: Ignoring outdated Betterbird language pack ${this.resourceURL}`);
       return false;
     }
+
+    // Check blocked add-ons.
+    const blocklistJSON = Services.prefs.getStringPref("betterbird.update.blocklist", "");
+    if (blocklistJSON) {
+      function getVersionById(targetId, object) {
+        for (const key in object) {
+          if (object[key].id == targetId) {
+            return { blKey: key, blVersion: object[key].version };
+          }
+        }
+        return null;
+      }
+
+      majorVersion = majorVersion.substring(0,3);
+      try {
+        const blocklist = JSON.parse(blocklistJSON);
+        const blocked = blocklist[majorVersion];
+        if (blocked) {
+          const entry = getVersionById(this.id, blocked);
+          if (entry) {
+            const { blKey, blVersion } = entry;
+            if (blVersion == "*" || Services.vc.compare(this.version, blVersion) <= 0) {
+              Cu.reportError(`Compat: Blocked ${blKey}, id: ${this.id}, version: ${this.version}, blocked version: ${blVersion}`);
+              return false;
+            }
+          }
+        }
+      } catch (ex) {}
+    }
+
     if (this.startupData.chromeEntries.length) {
       const manifestURI = Services.io.newURI(
         "manifest.json",
         null,
diff --git a/toolkit/mozapps/extensions/internal/XPIDatabase.sys.mjs b/toolkit/mozapps/extensions/internal/XPIDatabase.sys.mjs
--- a/toolkit/mozapps/extensions/internal/XPIDatabase.sys.mjs
+++ b/toolkit/mozapps/extensions/internal/XPIDatabase.sys.mjs
@@ -699,8 +699,37 @@ export class AddonInternal {
       Cu.reportError(`Compat: Ignoring outdated Betterbird language pack ${this.id}`);
       return false;
     }
 
+    // Check blocked add-ons.
+    const blocklistJSON = Services.prefs.getStringPref("betterbird.update.blocklist", "");
+    if (blocklistJSON) {
+      function getVersionById(targetId, object) {
+        for (const key in object) {
+          if (object[key].id == targetId) {
+            return { blKey: key, blVersion: object[key].version };
+          }
+        }
+        return null;
+      }
+
+      majorVersion = majorVersion.substring(0,3);
+      try {
+        const blocklist = JSON.parse(blocklistJSON);
+        const blocked = blocklist[majorVersion];
+        if (blocked) {
+          const entry = getVersionById(this.id, blocked);
+          if (entry) {
+            const { blKey, blVersion } = entry;
+            if (blVersion == "*" || Services.vc.compare(this.version, blVersion) <= 0) {
+              Cu.reportError(`Compat: Blocked ${blKey}, id: ${this.id}, version: ${this.version}, blocked version: ${blVersion}`);
+              return false;
+            }
+          }
+        }
+      } catch (ex) {}
+    }
+
     // Only extensions and dictionaries can be compatible by default; themes
     // and language packs always use strict compatibility checking.
     // Dictionaries are compatible by default unless requested by the dictinary.
     if (
